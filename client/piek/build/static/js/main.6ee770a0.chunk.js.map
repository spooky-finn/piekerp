{"version":3,"sources":["components/Attendance/attendance.module.sass","components/OrderListLayout/main.module.sass","components/OrderListLayout/Search/search.module.sass","components/OrderListLayout/Recently/recently.module.sass","components/OrderListLayout/PreOrders/preorders.module.sass","components/LoginForm/index.js","components/OrderListLayout/reducer.js","components/OrderListLayout/queries/getOrders.js","components/OrderListLayout/UniversalTable/columnList.js","components/OrderListLayout/UniversalTable/TableMarkup.jsx","components/OrderListLayout/PreOrders/MutationOrderStatus.js","components/OrderListLayout/PreOrders/index.js","components/OrderListLayout/Search/index.js","components/OrderListLayout/Search/filter.js","components/OrderListLayout/Priority/index.js","components/OrderListLayout/Recently/index.jsx","components/OrderListLayout/Recently/spreadOrders.js","components/BaseHeader/MutationInsertOrder.js","components/BaseHeader/ActionsHeader.js","components/OrderListLayout/index.jsx","components/OrderLayout/queries/GetOrderByID.js","components/OrderLayout/queries/MutationOrderDocs.js","components/OrderLayout/queries/MutationOrderItem.js","components/OrderLayout/Composition.jsx","components/OrderLayout/Info.jsx","components/OrderLayout/queries/MutationOrderInfo.js","components/OrderLayout/EditableComponents/EditableInfo.jsx","components/OrderLayout/queries/MutationCheckListUnit.js","components/OrderLayout/CheckList.jsx","components/OrderLayout/Docs.jsx","components/OrderLayout/Comments.jsx","components/OrderLayout/Dropzone.js","components/OrderLayout/index.jsx","components/Attendance/queries/getUsers.js","components/Attendance/functions.js","components/Attendance/table.js","components/Attendance/ReportConfigurator.jsx","components/BaseHeader/index.js","components/Attendance/index.js","routers/PrivateRoute.js","routers/Router.js","components/BaseLayout/index.js","components/Sidebar/DarkToggle.js","components/Sidebar/Sidebar.js","App.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","index.js","components/OrderLayout/sass/composition.module.sass"],"names":["module","exports","LoginForm","props","useState","email","setEmail","password","setPassword","store","useContext","Context","history","useHistory","className","TextField","label","onChange","e","target","value","type","Button","variant","width","onClick","login","then","push","reducer","state","action","payload","GetOrdersSubscription","gql","GET_USERS","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","to","OrderID","map","item","Name","OrderItemID","Quantity","order","moment","ShippingDate","format","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","mainsass","tableMain","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","MUTATE_ORDER_STATUS","PreOrders","panel","showPreOrders","expanded","setExpanded","useMutation","mutationOrderStatus","dt","preOrders","newColumnList","splice","indexOf","variables","OrderStatus","onClickTransfer","sass","preordersContainer","active","Accordion","event","newExpanded","setShowPreOrders","AccordionSummary","preordersHeading","AccordionDetails","useStyles","makeStyles","theme","formControl","minWidth","borderRadius","border","padding","select","fontSize","color","menuItem","Search","dispatch","users","classes","tableSearchInput","placeholder","trim","autoFocus","defaultValue","searchKeyword","filter","filterPlaceholder","FormControl","Select","name","managerFilter","disableUnderline","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","filteringAlg","keyword","finded","rest","arg","toLowerCase","includes","array","result","Entity","newOrders","ord","ManagerID","Priority","incomingOrders","useMemo","filtredData","tableWrapper","Recently","sort","a","b","spreadData","orders","days","subtract","dateCreation","CreatingDate","split","date","objs","spread","heading","recentlyTable","INSERT_ORDER","ActionsHeader","userID","createNewOrder","createOrderHandler","res","insert_erp_Orders","returning","editOrderHandler","setEditState","editState","createOrder","data-for","data-tip","addOrder","accessLevel","editOrderBtn","undefined","OrderListLayout","useReducer","selectedTab","priorityTab","filtredOrders","useSubscription","onSubscriptionData","options","subscriptionData","erp_Orders","forEach","ID","fetchPolicy","nextFetchPolicy","loading","error","useQuery","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","a11yProps","tabHeight","AntTabs","withStyles","root","borderBottom","minHeight","height","indicator","borderTopLeftRadius","borderTopRightRadius","backgroundColor","Tabs","AntTab","textTransform","opacity","transition","selected","Tab","disableRipple","flexGrow","newValue","setPriorutyTab","aria-label","erp_Users","GET_ORDER_BY_ID","PUSH_DOCS_ARRAY","DELETE_ORDER_FILE","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","initialState","fullName","quantity","OrderComposition","refetch","orderID","deleteOrderItemMutation","insertOrderItemMutation","deleteItem","itemID","orderItemID","useEffect","console","log","insertOrderItem","parseInt","AnimatePresence","el","motion","div","initial","animate","exit","Unit","firstRow","FullName","orderItemActions","itemData","find","editItem","addOrderItem","size","autoComplete","quantityInput","multiline","fullNameInput","button","whileHover","scale","whileTap","pushOrderItemButton","OrderMeta","OrderNumber","City","Comment","UPDATE_ORDER_INFO","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","InputProps","inputComponent","MUTATE_CHECKLIST_UNIT","CheckList","updateCheckListUnit","propsData","JSON","parse","stringify","Point","units","IsComplited","classList","toggle","CheckListUnitID","IsCompluted","toggleCheckListUnit","Docs","onUpload","open","setOpen","fileOnDelete","setFileOnDelete","deleteFileMutation","onFileDeleteInput","useRef","handleClose","deleteFile","current","Key","attachedFiles","file","handleClickOpen","FileName","href","process","files","path","onUploadFiles","Dialog","onClose","maxWidth","DialogTitle","DialogContent","dividers","DialogContentText","gutterBottom","margin","fullWidth","DialogActions","Comments","isFileOnDropzone","isDragActive","document","getElementById","add","y","remove","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","search","get","pushDocs","useParams","S3Upload","useCallback","acceptedFiles","uploadFile","status","m","key","originalname","useDropzone","onDrop","getRootProps","duration","preloader","Heading","Composition","CheckListUnits","Info","daysInMonth","selectedMonth","month","year","Date","getDate","getIntervalData","day","intervals","timeDeduction","getMinutes","t","minutes","entrance","_entr","_exit","getHours","number","hour","Math","floor","decpart","min","round","minute","convertInterval","interval","monthAdd","temp","getFullYear","getMonth","setMonth","setDate","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","BaseHeader","pageParams","icon","title","attendanceData","Attendance","Error","toString","replace","gte","lte","getVarsForSubscription","onCompleted","attendance_users_aggregate","nodes","onChangeSearch","lastname","startsWith","firstname","Cell","hours","original","intervalsPools","generateColumns","getPageParams","window","location","pathname","attendanceTable","tableFooter","PrivateRoute","Component","component","isLoaded","setisLoaded","isAuth","setisAuth","checkAuth","inMemoryToken","AppRouter","exact","BaseLayout","DARK_CLASS","DarkToggle","systemPrefersDark","useMediaQuery","query","prefersDark","setIsDark","isDark","documentElement","display","Sidebar","Pane","activeClassName","logout","observer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","axios","create","withCredentials","baseURL","interceptors","request","use","config","Authorization","localStorage","getItem","response","originalRequest","_isRetry","setItem","accessToken","AuthService","post","Store","isLoading","alignItems","justifyContent","Spinner","makeAutoObservable","this","bool","token","setInMemoryToken","setUser","setAuth","message","removeItem","r","setLoading","formData","FormData","append","fetch","hasuraRes","url","createContext","webSocketLink","WebSocketLink","uri","reconnect","lazy","reconnectionAttempts","inactivityTimeout","connectionCallback","connectionParams","asyncTokenValidation","setContext","_","context","now","jwt","decode","exp","getNewToken","apolloClient","ApolloClient","link","from","cache","InMemoryCache","ReactDOM","client","sessionData","dataset","session","Provider"],"mappings":"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","file":"static/js/main.6ee770a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"attendance_tableWrapper__3XX7V\",\"attendanceTable\":\"attendance_attendanceTable__2Ngds\",\"interval\":\"attendance_interval__2RRqG\",\"status-101\":\"attendance_status-101__15BJ5\",\"tableSearchInput\":\"attendance_tableSearchInput__3Agga\",\"tableFooter\":\"attendance_tableFooter__3ztcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"main_tableWrapper__3lHmG\",\"tableSearchInput\":\"main_tableSearchInput__3VMNw\",\"action-icon\":\"main_action-icon__1owGu\",\"tableFooter\":\"main_tableFooter__1Egk2\",\"tableMain\":\"main_tableMain__GJwKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableSearchInput\":\"search_tableSearchInput__mHzTe\",\"filter\":\"search_filter__1BI6Q\",\"filterPlaceholder\":\"search_filterPlaceholder__2NcNB\",\"filterIndicator\":\"search_filterIndicator__Rfc0e\",\"circle\":\"search_circle__2PIMx\",\"pulsate\":\"search_pulsate__pgEiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"recently_heading__2gRdv\",\"recentlyTable\":\"recently_recentlyTable__3NJpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preordersContainer\":\"preorders_preordersContainer__1xfed\",\"active\":\"preorders_active__dhLVK\",\"preordersHeading\":\"preorders_preordersHeading__1U3jR\"};","import { useState, useContext } from 'react';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\nimport { Context } from '../../index';\n\nimport {TextField, Button} from '@material-ui/core';\nimport './LoginForm.sass'\nimport '../../theme.css'\n\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    const {store} = useContext(Context);\n    const history = useHistory();\n\n    // const setNotification = () => {\n    //     NotificationManager.error('Похоже вы ошиблись', '\t(ಥ﹏ಥ)', 3000);\n    // }\n\n    const login = (e) => {\n      store.login(email, password).then( () =>  history.push(\"/\") )\n\n    }\n    return(\n        <>\n              <div className='loginCard'>\n\n                    <TextField\n                    className='loginInput'\n                    label=\"Email\"\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                  <TextField\n                    label=\"Password\"\n                    type=\"password\"\n                    className='loginInput'\n                    onChange={e => setPassword(e.target.value) }\n                  />\n                  <Button\n                    className=\"Button\"\n                    variant=\"outlined\"\n                    width='300px'\n                    onClick={login}\n                  >Войти</Button>\n              </div>\n     \n        {/* <NotificationContainer/> */}\n        </>\n    );\n}\n\nexport default LoginForm\n","export const initialState = (selectedTab) => ({\n    orders: [],\n    preOrders: [],\n    selectedTab : selectedTab,\n    searchKeyword: '',\n    managerFilter: 0,\n    filtredOrders: [],\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'managerFilter': \n        case 'filtredOrders':\n            return {...state, [action.type]: action.payload };\n\n    }\n}","import gql from 'graphql-tag'; \n\n// Выбираем заказы находящиеся только в Прездаказах и в производстве \n//   OrderStatusID \n//     1 - В производстве\n//     3- Предзаказ\n//     4- Выпущен и отгружен\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription GetOrders($search: String) {\n    erp_Orders(where: {OrderStatusID: {_neq: 4} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n      }\n\n    }  \n  }\n`\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n  }\n}\n`","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\n\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ''\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row: any, counter) => counter +1\n    },\n    {\n      Header: 'Наим.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length == 0) return <Link to={`/orders/${data.OrderID}`}><div>пустота...</div></Link>\n\n        else return (<Link to={`/orders/${data.OrderID}`}>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </Link>)\n      }\n      \n    },\n    {\n      Header: 'Кол-во',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'Отгрузка',\n      accessor: (order) => \n      <> { moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'Счет- оплата',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'Компания',\n      accessor: 'Entity',\n    },\n    {\n      Header: 'Гор.',\n      accessor: 'City',\n    },\n    {\n      Header: 'Мдж.',\n      accessor: data => <div className='priorityTable-manager'>{data.User.FirstName[0]}</div>,\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\n\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n    if (data.length == 0) return null;\n\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n               <tr {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1 - В производстве\n//     3- Предзаказ\n//     4- Выпущен и отгружен\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $OrderStatus: Int!){\n    update_erp_Orders_by_pk(pk_columns: {OrderID: $OrderID}, _set: {OrderStatusID: $OrderStatus}) {\n        OrderID\n    }\n  }\n\n`;","import { useState, useContext } from \"react\";\nimport { Context } from '../../../index'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport {Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport {UilAngleRight, UilPlus} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\n\nconst PreOrders = (props) => {\n    const { store } = useContext(Context);\n    const [expanded, setExpanded] = useState(store.showPreOrders);\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    let dt = props.preOrders\n    \n    const handleChange = panel => (event, newExpanded) => {\n        store.setShowPreOrders(newExpanded);\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const onClickTransfer = (data) => {\n        dt.splice(dt.indexOf(data), 1)\n        mutationOrderStatus({ variables: { OrderID: data.OrderID, OrderStatus: 1 } })\n    }\n    var newColumnList = [...columnsList];\n\n    newColumnList.push({\n        Header: ' ',\n        accessor: data => \n        <div onClick={() => onClickTransfer(data)} className=\"square-button\"><UilPlus/></div>\n        ,\n      })\n   \n               \n    return(\n        <div className={expanded ? `${sass.preordersContainer} ${sass.active}` : sass.preordersContainer }>\n    \n          <Accordion expanded={expanded === true} onChange={handleChange(true)}>\n            <AccordionSummary>\n                <h6 className={sass.preordersHeading}>\n                    Предзаказы \n                    <span><UilAngleRight/></span>\n                </h6>\n            </AccordionSummary>\n            <AccordionDetails >\n                <Table  columns={newColumnList} data={props.preOrders}/>\n            </AccordionDetails>\n\n        </Accordion>\n        </div>\n    )\n}\nexport default PreOrders","import { UilSearch } from '@iconscout/react-unicons'\nimport sass from './search.module.sass'\n\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      minWidth: 70,\n      borderRadius: 'var(--br10)',\n      border: '1px solid var(--border)',\n      padding: '0 10px',\n    },\n    select: {\n        fontSize: '.8rem',\n        color: 'var(--text1)',\n    },\n    menuItem: {\n        fontSize: '.8rem',\n        color: 'var(--text2)',\n        fontSize: '.8rem',\n    },\n  }));\n\nconst Search = ({state, dispatch, users }) => {\n    const classes = useStyles();\n\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value.trim() }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter != 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>Выдача ограничена фильтром</p>\n            </div>\n        ) \n    }\n\n    return (\n        <>\n        <div className={sass.tableSearchInput}>\n            <UilSearch/>\n            <input type='text' placeholder=\"поиск (номер счета или организация)\" onChange={searchHandler} autoFocus defaultValue={state.searchKeyword}/>\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl className={classes.formControl}>\n                <Select\n                    name=\"managerFilter\"\n                    value={state.managerFilter}\n                    onChange={managerHandler}\n                    className={classes.select}\n                    disableUnderline={true}\n                >\n                    <MenuItem value={0} className={classes.menuItem} >Все</MenuItem>\n                    { users.map( (user) => \n                    <MenuItem  className={classes.menuItem} value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                    )}\n                \n                </Select>\n                </FormControl>\n            </div>)}\n        </div>\n\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","function filteringAlg(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // применить поиск по ключевому слову\n    if (keyword !== '') {\n        result = array.filter( (order) => filteringAlg(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //применить поиск по фильру\n    if (managerFilter != 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID == managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ data, users, incomingOrders, state, dispatch }) => {\n\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value.trim() }) \n    }\n    const columns = useMemo(\n        () => columnsList, []\n    )\n  \n    const filtredData = filter(data, state.searchKeyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            <Search state={state} dispatch={dispatch} users={users} incomingOrders={data} />\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\n\nimport Table from '../UniversalTable/TableMarkup'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport mainsass from '../main.module.sass'\nimport sass from './recently.module.sass'\n\nconst Recently = ({ data, state, dispatch, incomingOrders }) => {\n\n    data.sort((a, b) => b.ShippingDate > a.ShippingDate ? 1: -1);  \n\n    const spreadData = spread(data);\n\n    const columns = useMemo(\n        () => columnsList,\n        []\n    )\n\n    const filtredData = filter(spreadData[2].objs, state.searchKeyword)\n\n    return(\n        <div>\n            <div className={sass.heading}>Сегодня</div>\n            <Table columns={columns} data={spreadData[0].objs} className={sass.recentlyTable} />\n\n            <div className={sass.heading}>Вчера</div>\n            <Table columns={columns} data={spreadData[1].objs} className={sass.recentlyTable} />\n\n\n            <div className={sass.heading}>Остальные</div>\n            <div className={mainsass.tableWrapper}>\n                <Search state={state} dispatch={dispatch} incomingOrders={filtredData} />\n                { <Table columns = { columns } data = { filtredData } />}\n            </div>\n\n        </div>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Сегодня',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'Вчера',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': '',\n        'objs': [] \n        },\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.CreatingDate.split('T')[0]\n\n        if (dateCreation == days[0].date) days[0].objs.push(order);\n        else if (dateCreation == days[1].date) days[1].objs.push(order);\n        else days[2].objs.push(order);    \n    }\n\n    return days;\n};\n","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!, $isReclamation: Boolean!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID, IsReclamation: $isReclamation}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { useMutation } from '@apollo/client';\nimport { INSERT_ORDER } from './MutationInsertOrder'\n\nimport {UilPrint, UilPlus, UilBell, UilEditAlt} from '@iconscout/react-unicons';\nimport { UserIcon } from 'evergreen-ui';\n\n\n\nconst ActionsHeader = (props) => {\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n        'managerID':     props.userID,\n        'orderStatusID': 3,\n        'isReclamation':  false,\n    }})\n\n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            props.history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n\n    const editOrderHandler = () => {\n        props.setEditState(!props.editState)\n    }\n\n    const editOrderBtn = () => {\n        if (props.accessLevel == 2){\n            const editIconClass = () => props.editState ? 'action-icon active': 'action-icon'\n            return <div data-for='global' data-tip=\"Добавить\" className={editIconClass()} onClick={editOrderHandler}><UilEditAlt/></div>\n        }\n    }\n\n    const addOrder = () => {\n        if (props.createOrder){\n            return <div data-for='global' data-tip=\"Добавить\" onClick={createOrderHandler} className=\"action-icon\"><UilPlus/></div>\n        }\n    }\n    return(\n        <div className=\"action-block\">\n            {/* <div data-for='global' data-tip=\"Распечатать\" className=\"action-icon\"><UilPrint/></div> */}\n            {addOrder()}\n            {editOrderBtn()}\n            {/* <div data-for='global' data-tip=\"Уведомления\" className=\"action-icon\"><UilBell/></div> */}\n        </div>\n    )\n}\n\nexport default ActionsHeader","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\n// apollo\nimport { useSubscription, useQuery } from '@apollo/client'\nimport { GetOrdersSubscription, GET_USERS } from './queries/getOrders'\n\n// ui \nimport {Tabs, Tab, Box} from '@material-ui/core';\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport ActionsHeader from '../BaseHeader/ActionsHeader'\n\nvar incomingOrders = undefined;\n\n\nconst OrderListLayout = () => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState(store.priorityTab));\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID == 3) preOrders.push(order)\n            else if (order.OrderStatus.ID == 1) orders.push(order)\n        })\n        incomingOrders = orders\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    const { loading, error, data = [] } = useSubscription(GetOrdersSubscription, { onSubscriptionData, fetchPolicy: \"cache-and-network\", nextFetchPolicy: \"cache-first\" });\n    const { data: users = []} = useQuery(GET_USERS);\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        store.setPriorutyTab(newValue)\n    };\n\n\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n    const tabHeight = '45px'\n    const AntTabs = withStyles({\n        root: {\n            borderBottom: '1px solid var(--borderLight)',\n            minHeight: tabHeight,\n            height: tabHeight,\n        },\n        indicator: {  \n            borderTopLeftRadius: '20px',\n            borderTopRightRadius: '20px',\n            backgroundColor: 'var(--accent)',\n        },\n      })(Tabs);\n      \n      const AntTab = withStyles((theme) => ({\n        root: {\n          textTransform: 'none',\n          minWidth: '10%',\n          fontSize: '.9rem',\n          color: 'var(--text1)',\n          padding: 0,\n          opacity: .5,\n          minHeight: tabHeight,\n          height: tabHeight,\n          transition: 'opacity .3s ease',\n          '&:hover': {\n            opacity: 1,\n          },\n          '&$selected': {\n                color: 'var(--accent)',\n                backgroundColor: 'var(--accentLight)'\n          }\n        },\n        selected: {},\n      }))((props) => <Tab disableRipple {...props} />);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            minHeight: '50px'\n        }\n    }));\n\n  const classes = useStyles();\n    return(\n        <div >\n            \n            <div className={classes.root}>\n            <AntTabs value={state.selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\">\n                <AntTab label=\"Очередость\" {...a11yProps(0)} />\n                <AntTab label=\"Недавние\" {...a11yProps(1)} />\n\n                <ActionsHeader createOrder={1} userID={store.user.UserID} history={history}/>\n\n            </AntTabs>\n            </div>\n\n\n        <PreOrders preOrders = {state.preOrders} />\n\n        <TabPanel value={state.selectedTab} index={0} >\n            <Priority data={state.orders}\n                    state={state}\n                    dispatch={dispatch}\n                    users={users.erp_Users}\n                    incomingOrders={incomingOrders} />\n        </TabPanel>\n\n        <TabPanel value={state.selectedTab} index={1}>\n            <Recently data={state.orders}\n                    state={state}\n                    dispatch={dispatch}\n                    incomingOrders={incomingOrders} />\n        </TabPanel>\n      </div>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(where: {OrderID: {_eq: $OrderID}}) {\n    City\n    CreatingDate\n    Comment\n    Entity\n    InvoiceNumber\n    IsReclamation\n    ManagerID\n    OrderID\n    OrderNumber\n    OrderStatusID\n    PaidAmount\n    ShipmentComment\n    ShippingDate\n    TotalAmount\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialNumber\n    }\n    CheckListUnits {\n      IsComplited\n      OrderID\n      Point\n      CheckListUnitID\n    }\n    Docs {\n      Key\n      FileName\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;","import { DELETE_ORDER_ITEM, INSERT_ORDER_ITEM } from \"./queries/MutationOrderItem\"\nimport { useMutation } from \"@apollo/client\"\n\nimport { useReducer, useEffect } from 'react'\nimport {TextField} from '@material-ui/core'\nimport { UilArrowUp } from '@iconscout/react-unicons'\n\n\nimport { motion, AnimatePresence } from \"framer-motion\"\n\nimport sass from './sass/composition.module.sass'\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                name: action.payload[0],\n                fullName: action.payload[1],\n                quantity: action.payload[2]\n            }\n\n    }\n\n}\n\nconst OrderComposition = ({ data, editState, refetch, orderID }) => {\n    const [ deleteOrderItemMutation ] = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ] = useMutation(INSERT_ORDER_ITEM);\n\n    const [state, dispatch ] = useReducer(reducer, initialState)\n\n    const deleteItem = (itemID) => {\n        deleteOrderItemMutation(\n            { variables: { orderItemID: itemID} }\n        )\n        refetch()    \n    }\n\n    useEffect(() => {\n        console.log(editState)\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n\n    const editItem = (e, itemID) => {\n        const itemData = data.find( el => el.OrderItemID == itemID)\n        dispatch({ type: 'editItem', payload: [itemData.Name, itemData.FullName, itemData.Quantity] })\n        console.log(e)\n        deleteItem(itemID)\n    }\n\n    const insertOrderItem = () => {\n        if (state.quantity == '' || state.name == '') return null\n\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const addNewOrderItem = () => (\n        <>\n            <TextField\n                size='small' \n                label=\"Наименование\"\n                autoComplete='off'\n                value={state.name}\n                onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n              />\n            <TextField\n                size=\"small\" \n                label=\"Кол-во\"\n                type=\"number\"\n                autoComplete='off'\n                className={sass.quantityInput}\n                value={state.quantity}\n                onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n\n               />\n           \n           <TextField\n                label=\"Полное наименование\"\n                multiline\n                autoComplete=\"off\"\n                size='small'\n                className={sass.fullNameInput}\n                value={state.fullName}\n                onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n                />\n\n            <motion.button\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: .95 }}\n                className={`square-button ${sass.pushOrderItemButton}`}\n                onClick={insertOrderItem} >\n                    <UilArrowUp/>\n            </motion.button>\n           \n         </>\n        )\n\n    return(<>     \n     <AnimatePresence>\n            {data.map( el => \n            \n            <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            key={el.OrderItemID} >\n            \n\n                <div key={el.OrderItemID} className={sass.Unit}>\n                    <div className={sass.firstRow}>\n                        <div className={sass.name}> {el.Name} </div>\n                        <span  className={sass.quantity}> {el.Quantity}</span>\n                    </div>\n                    \n                    <div  className={sass.fullName}> { el.FullName }</div>\n\n\n                    {editState &&  \n                        <div className={sass.orderItemActions}>\n                            <a onClick={ (e) => editItem(e, el.OrderItemID) }>   Изменить</a>\n                            <a onClick={ ()=> deleteItem(el.OrderItemID) } > Удалить </a>\n                        </div>\n                    }\n                   \n\n                </div>\n\n            </motion.div>\n            )}\n            \n        {editState && <div className={sass.addOrderItem}>{addNewOrderItem()}</div> }\n\n    </AnimatePresence>\n    </>)\n}\n\nexport default OrderComposition","import { UilHistoryAlt } from \"@iconscout/react-unicons\";\nimport  moment  from 'moment'\nimport \"./sass/order-meta.sass\";\n\nconst OrderMeta = (props) => {\n\n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ''\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n  return (\n    <div className=\"Meta\">\n\n      <div className=\"SignificantInfo\">\n            <div>\n                <pre>План. отгрузка</pre>\n                {moment(props.data.ShippingDate).format('DD.MM.YY')}\n            </div>\n            <div>\n                <pre>Счет / оплата</pre>\n                {\"№ \" +\n                props.data.InvoiceNumber +\n                setPaidPercent(props.data.TotalAmount, props.data.PaidAmount)}\n                    <span className=\"PaymentHistory\">\n                        <UilHistoryAlt />\n                    </span>\n            </div>\n      </div>\n\n      <div className=\"MetaWrapper\">\n           <div className='Left'>\n                <div>\n                    <pre>Номер заказа</pre>\n                    {props.data.OrderNumber}\n                </div>\n                <div>\n                    <pre>Создан</pre>\n                    {props.data.ShippingDate}\n                </div>\n                <div>\n                    <pre>Менеджер</pre>\n                    {props.data.User.FirstName} {props.data.User.LastName}\n                </div>\n           </div>\n\n           <div className='Right'>\n                    <div>\n                        <pre>Юр Лицо</pre>\n                        {props.data.Entity}\n                    </div>\n                    <div>\n                        <pre>Гор</pre>\n                        {props.data.City}\n                    </div>\n            </div>\n      </div>\n\n      <div className=\"OrderComment\">\n            <pre>Комментарий</pre>\n            {props.data.Comment}\n      </div>\n    </div>\n\n  )\n}\n\nexport default OrderMeta\n","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($fields: erp_Orders_set_input, $orderID: Int!) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $orderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;","import { useEffect } from 'react';\nimport {TextField} from '@material-ui/core';\nimport './EditableInfo.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'₽ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch }) => {  \n  \n\n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n  \n    useEffect(() => {\n        fields = {};\n        \n        return () => {\n            console.log('doing mutation for order', orderID, fields)\n            updateOrderInfo({variables: {\n            orderID,\n            fields,\n            }})\n            refetch()\n        };\n    }, []);\n\n  return(\n    <form className=\"Meta EditableInfo\">\n      \n        \n        <TextField\n          label=\"План. отгрузка\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          autoComplete=\"off\"\n          InputProps={{\n            inputComponent: DateFormatCustom\n          }}\n        />\n\n        <TextField\n          label=\"Номер счета\"\n          type=\"number\"\n\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"Номер заказа\"\n          type=\"number\"\n\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Юр лицо\"\n          autoComplete=\"off\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"Город\"\n          autoComplete=\"off\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Сумма заказа\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom\n          }}\n          />\n        \n        <TextField\n          label=\"Оплачено\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom\n          }}\n        />\n\n        <TextField\n          label=\"Комментарий\"\n          multiline\n          autoComplete=\"off\"\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n    </form>\n  )\n}\n\nexport default EditableInfo","import {gql} from 'graphql-tag'; \n\nexport const MUTATE_CHECKLIST_UNIT = gql`\nmutation MyMutation($CheckListUnitID: Int!, $IsCompluted: Boolean!) {\n  update_erp_CheckListUnits_by_pk(pk_columns: {CheckListUnitID: $CheckListUnitID}, _set: {IsComplited: $IsCompluted}) {\n    CheckListUnitID\n    IsComplited\n    Point\n  }\n}\n`","import { useMutation } from \"@apollo/client\"\nimport { MUTATE_CHECKLIST_UNIT } from './queries/MutationCheckListUnit'\n\nconst CheckList = ({data}) => {\n\n    const [updateCheckListUnit, { loading }] = useMutation(MUTATE_CHECKLIST_UNIT);\n\n    let propsData = JSON.parse(JSON.stringify(data))\n\n    propsData.sort((a, b) => b.Point < a.Point ? 1 : -1)\n\n    const toggleCheckListUnit = (target, el) => {\n        target.target.classList.toggle('complited')\n        updateCheckListUnit({ variables: { CheckListUnitID: el.CheckListUnitID, IsCompluted: !el.IsComplited } })\n    }\n\n    const units = propsData.map(el => \n            <div className={ el.IsComplited ? \"CheckListUnit complited\" : \"CheckListUnit\"}  \n                key={el.CheckListUnitID} \n                onClick={ target => toggleCheckListUnit(target, el) }>\n                {el.Point}\n            </div>\n        )\n\n   \n    return(\n        <div className=\"CheckList\">\n\n            <div className='partitionHeading'>Чеклист</div>\n\n            {units}\n        </div>\n    )\n}\n\nexport default CheckList","import { useContext, useState, useRef } from 'react';\nimport { Context } from '../../index'\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from './queries/MutationOrderDocs';\n\nimport { Dialog, Button, TextField, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const { store } = useContext(Context)\n\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const onFileDeleteInput = useRef()\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length == 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        \n        if (onFileDeleteInput.current.value == 'Да'){\n            await store.deleteFile(fileOnDelete.Key, deleteFileMutation)\n            refetch()\n        }        \n    }\n\n    const attachedFiles = data.map(\n        file => {\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n\n            <div className='partitionHeading'>Приложения</div>\n\n\n            <div className='filesContainer'>\n                {attachedFiles}\n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='xs'>\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                        Удалить приложение?\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText gutterBottom>\n                            Вы действительно хотите удалить <span>{fileOnDelete?.FileName}</span> ? <br/>\n                            Это действие необратимо.\n                            Пожалуйста, введите \"Да\" для подтверждения.\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            size='small'\n                            variant='outlined'\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete='off'\n                            inputRef={onFileDeleteInput}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={deleteFile} className='dialog-danger-btn'>\n                            Я понимаю последствия, удалить этот файл\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","const Comments = (props) => {\n\n    return(\n        <div>\n            <div className='partitionHeading'>Комментарии</div>\n\n        </div>\n    )\n}\n\nexport default Comments","import { UilCloudUpload } from '@iconscout/react-unicons'\nimport { motion } from \"framer-motion\"\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <motion.div \n            initial={{ y: \"80vh\"  }}\n            animate={{ y: \"40vh\" }} >\n\n             <UilCloudUpload className='inCloudconIcon'/>\n         </motion.div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","import { useContext, useCallback, useState } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_ORDER_BY_ID } from './queries/GetOrderByID'\nimport { PUSH_DOCS_ARRAY } from './queries/MutationOrderDocs'\nimport { useMutation, useQuery } from \"@apollo/client\";\n\n//components\nimport ActionsHeader from \"../BaseHeader/ActionsHeader\";\nimport Composition from \"./Composition\";\nimport Info from \"./Info\";\nimport EditableInfo from \"./EditableComponents/EditableInfo\";\nimport CheckList from './CheckList';\nimport Docs from './Docs';\nimport Comments from \"./Comments\";\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport { Heading } from 'evergreen-ui';\nimport './sass/index.sass';\n\nimport { motion } from \"framer-motion\"\n\n\n\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    const [pushDocs] = useMutation(PUSH_DOCS_ARRAY);\n    const orderID = useParams().id\n\n\n\n    const S3Upload = useCallback(acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        store.uploadFile(acceptedFiles).then(\n            (res) => {\n                if (res.status != 200) console.log('S3 file upload error')\n                else{\n                    let m = []\n                    for (var i=0;  i<res.data.length; i=i+2 ){\n                        m.push({\n                            'Key': res.data[i].key,\n                            'OrderID': orderID,\n                            'FileName': res.data[i].originalname,\n                        })\n                    }\n                    pushDocs({ variables: {'objects': m} })\n                } \n                setOnUploadFiles([])\n                refetch();\n                }\n            \n        )\n      }, [])\n\n    const {loading, error, data = [], refetch } = useQuery(GET_ORDER_BY_ID, {  fetchPolicy: \"no-cache\", variables: { OrderID: orderID}});\n\n    const {getRootProps, isDragActive} = useDropzone({className: 'dropzone', onDrop: S3Upload });\n      \n    console.log();\n\n    return(\n    <motion.div\n    initial={{ scale: .8 }} \n    animate={{ scale: 1 }}\n    transition={{ duration: 0.2 }}\n    > \n\n\n    \n            {isFileOnDropzone(isDragActive)}\n\n        {!loading ? (<>\n\n        <div className=\"page-header\">\n            <Heading>{data.erp_Orders[0].Entity} __  {data.erp_Orders[0].City}</Heading>\n\n            <ActionsHeader \n            accessLevel = {2} \n            setEditState = {setEditState} \n            editState = {editState} />\n            \n        </div>\n\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n                    <div className=\"Main\">\n\n                    <div className=\"Composition\">  \n                        <Composition \n                            data={data.erp_Orders[0].OrderItems} \n                            editState={editState}\n                            refetch={refetch}\n                            orderID= {orderID} /> \n\n                    </div>\n                    \n                        <div className=\"WrapperTwoCol\">\n                            <CheckList data={data.erp_Orders[0].CheckListUnits}/>\n                            <Docs data={data.erp_Orders[0].Docs} \n                                onUpload={onUploadFiles} \n                                editState = {editState} \n                                refetch={refetch} />\n                        </div>\n                        <Comments/>\n                    </div>\n                    \n                    {editState ? <EditableInfo data={data.erp_Orders[0]} orderID={orderID} refetch={refetch}/> : <Info data={data.erp_Orders[0]} editState = {editState} /> }\n                   \n\n       \n\n        </section> \n\n        </>): store.preloader}\n\n    </motion.div>\n    )\n}\n\nexport default OrderLayout","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervalsPools(where: {entrance: {_gte: $gte,  _lte: $lte}}) {\n        entrance\n        exit\n        card\n        interval\n        status\n      }\n    }\n  }\n}  \n`\n\n\n","\nexport function daysInMonth (selectedMonth) {\n    // количество дней в текущем месяце\n      const [month, year] = selectedMonth\n      return new Date(year, month+1, 0).getDate();\n}\n\n\n  \n\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './functions'\nimport sass from './attendance.module.sass'\n\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  let columnsList = [\n      {\n      Header: 'Сотрудник',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'Итого',\n      Cell: row => {\n        var hours = 0;\n        const intervals = row.row.original.intervalsPools\n        intervals.forEach( interval => {\n          hours += interval.interval \n        });\n\n        //вычетаем время на обед\n        hours -= timeDeduction/60 * intervals.length\n\n        return <div>{hours.toFixed(0)}</div>\n      }\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => {\n        const day1 = row.column.Header\n\n        const [entrance, exit, interval, status] = getIntervalData(day1, row.row.original.intervalsPools, timeDeduction)\n        \n        return (\n          <div className={\"status-\"+ status}> \n            <div>{ entrance }</div> \n            <div>{ exit }</div>\n            <div className={sass.interval}>{ interval }</div>\n          \n          </div>\n        )\n      }\n    })\n  }\n  return columnsList\n}\n\n\n\nfunction getIntervalData(day, intervals, timeDeduction){\n\n    // конвертация float в часы и минуты\n    function convertInterval(number, timeDeduction){\n        //вычетаем время на обед\n        number -= timeDeduction/60\n\n        var hour = Math.floor(number);\n        var decpart = number - hour;\n        var min = 1 / 60;\n\n        // Round to nearest minute\n        decpart = min * Math.round(decpart / min);\n        var minute = Math.floor(decpart * 60) + '';\n\n        // Add padding if need\n        if (minute.length < 2) {\n            minute = '0' + minute; \n        }\n\n        return hour + ':' + minute;\n    }\n\n    function getMinutes(t){\n        const minutes = t.getMinutes()\n        return (minutes < 10) ? `0${minutes}` : minutes\n    }\n\n    const e = intervals.find(el =>  new Date(el.entrance).getDate() == day)\n\n    if (e) {\n        const _entr = new Date(e.entrance)\n        const _exit = new Date(e.exit)\n\n        const entrance = _entr.getHours()+':'+ getMinutes(_entr)\n        const exit = _exit.getHours()+':'+ getMinutes(_exit)\n        const interval = convertInterval(e.interval, timeDeduction)\n\n        return [entrance, exit, interval, e.status]\n    }   else return [null, null, null, null]\n}\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nfunction monthAdd(date, month) {\n    // функция используется для корректного вычитания месяцев в chooseMonth\n    var temp = date;\n    temp = new Date(date.getFullYear(), date.getMonth(), 1);\n    temp.setMonth(temp.getMonth() + (month + 1));\n    temp.setDate(temp.getDate() - 1); \n  \n    if (date.getDate() < temp.getDate()) { \n        temp.setDate(date.getDate()); \n    }\n    return temp;    \n  }\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i< 6; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div onClick={selectedMonthHandler} \n                    className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                    date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>обед</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>мин</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>норма</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>ч</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","import { Heading } from 'evergreen-ui';\n\n\nconst BaseHeader = (props) => {\n\n    return(\n           <div className=\"base-container page-header\">\n                    <span>{props.pageParams.icon}</span>\n                    <Heading>{props.pageParams.title}</Heading>                    \n                    {props.children}\n            </div>\n    )\n}\n\nexport default BaseHeader","\nimport  { useContext, useMemo, useEffect, useReducer } from 'react'\nimport { Context } from '../../index'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\n\nimport Table, { generateColumns } from './table'\nimport { getVarsForSubscription } from './functions'\n\n\nimport './index.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport BaseHeader from '../BaseHeader'\nimport { UilSearch } from '@iconscout/react-unicons'\n\nimport sass from './attendance.module.sass'\n\nvar attendanceData = null;\n// учет рабочего времени\nconst Attendance = props => {\n    const date = new Date()\n    const { store } = useContext(Context);\n\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 'filtredData':\n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [date.getMonth()-1, date.getFullYear()],\n    });\n    const { timeDeduction, selectedMonth, filtredData } = state;\n\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n    const { loading } = useQuery(GET_USERS, { variables: { gte, lte }, onCompleted: (options) => {\n        attendanceData = options.attendance_users_aggregate.nodes;\n        dispatch({ type: 'filtredData', payload: attendanceData})\n    } });\n    \n    useEffect(() => {\n        return () => {\n            attendanceData = null\n        };\n    }, []);\n\n    function filteringAlg(user, keyword){\n        if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else return false\n    }\n\n    const onChangeSearch = (e) => {\n        const keyword = e.target.value.trim();\n\n            if (keyword !== '') {\n              const result = attendanceData.filter((user) => filteringAlg(user, keyword))\n              dispatch({ type: 'filtredData', payload: result })\n            } else dispatch({ type: 'filtredData', payload: attendanceData})\n    }\n\n    const columns = useMemo(\n        () => generateColumns(selectedMonth, timeDeduction), [selectedMonth, timeDeduction]\n    )\n\n    return(\n        <>\n            <BaseHeader pageParams = { store.getPageParams(window.location.pathname) } search={onChangeSearch} /> \n            <ReportConfigurator state={state} dispatch={dispatch} />\n\n        <div className={sass.tableWrapper}>\n\n            <div className={sass.tableSearchInput}>\n                <UilSearch/>\n                <input type='text' placeholder=\"поиск (номер счета или организация)\" onChange={ (e) => onChangeSearch(e) } autoFocus/>\n            </div>\n            \n            {filtredData && columns && <Table columns = {columns} data = {filtredData} className={sass.attendanceTable} /> }\n\n             {/* условное обозначение */}\n             <div className={`${sass.tableFooter} legend`}>\n                <div className=\"status-101\">Прерванный рабочий день</div>\n                <div className=\"status-102\">Не отмечен конец смены</div>\n                <span className=\"reportMeta\">\n                    Отчет за {selectedMonth[0] + 1} месяц {selectedMonth[1]} года \n                </span>\n\n            </div>\n\n        </div>\n        </>\n    )\n}\n\nexport default Attendance","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n\n    const [isLoaded, setisLoaded] = useState(undefined);\n    const [isAuth, setisAuth] = useState(undefined);\n\n    const { store } = useContext(Context)\n\n    async function checkAuth() {\n        const res = await store.checkAuth();\n        setisAuth(res.isAuth);\n        setisLoaded(res.isLoaded)\n    }\n\n    useEffect(() => {\n      if (store.inMemoryToken) {\n        setisAuth(true);\n        setisLoaded(true)\n      }\n      else checkAuth()\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n            if (isAuth) return <Component {...props} />\n            else return <Redirect to='/login'/>;\n        }\n        \n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import {Switch, Route, Redirect} from \"react-router-dom\";\n\nimport LoginForm from '../components/LoginForm';\nimport OrderListLayout from \"../components/OrderListLayout\";\nimport OrderLayout from \"../components/OrderLayout\";\nimport Attendance from '../components/Attendance'\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst AppRouter = (props) => {\n\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            #if required route was not found\n            <Redirect     to=\"/\" />\n            {/* <PrivateRoute path='/recently' component={() => <PriorityLayout props={isRecently}/>} store={props.store}/> */}\n        </Switch>\n    )\n    \n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\n\nconst BaseLayout = (props) => {\n    return(\n        <>\n            <div className=\"base-container\">\n                \n                    <AppRouter /> \n                    {props.children}\n            </div>\n        </>\n    )\n}   \n\nexport default BaseLayout;","import { useEffect, useState } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\nimport { UilMoon, UilSun} from '@iconscout/react-unicons';\n\n  const DARK_CLASS = \"dark\";\n\nexport const DarkToggle = (props) => {\n\n    const systemPrefersDark = useMediaQuery(\n        {\n            query: \"(prefers-color-scheme: dark)\"\n        },\n        undefined,\n        prefersDark => {\n        setIsDark(prefersDark);\n        }\n    );\n\n    const [isDark, setIsDark] = useState(systemPrefersDark);\n\n\n    useEffect(() => {\n        if (isDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n        \n    }, [isDark]);\n\n\n    if (props.display == 'none') return null\n    return (<>\n\n        <div  className=\"DarkToggle \" onClick={() => setIsDark(!isDark)} >{isDark? < UilSun/> : <UilMoon/>}</div>\n        \n        </>);\n};\n","// import { observer } from 'mobx-react-lite';\nimport { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Context } from '../../index';\n\nimport { Pane } from 'evergreen-ui';\nimport './index.sass';\nimport { UilSortAmountDown, UilEnvelopeInfo, UilWrench, UilUserCircle, UilSignInAlt, UilConstructor} from '@iconscout/react-unicons';\nimport { DarkToggle } from './DarkToggle';\n\nconst Sidebar = () => {\n    const {store} = useContext(Context);\n\n    return(\n        <>\n        <Pane className='Sidebar'>\n\n            <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"action-icon\"><UilSortAmountDown/></NavLink>\n            {/* <NavLink  to='/recently' activeClassName='sidebar-active' className=\"action-icon\"><UilEnvelopeInfo/></NavLink> */}\n            <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"action-icon\"><UilWrench/></NavLink>\n            <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"action-icon\"><UilConstructor/></NavLink>\n\n\n            <a className=\"action-icon hidden\" ><DarkToggle/></a> \n            <NavLink  className=\"action-icon hidden\" to='/account'><UilUserCircle/></NavLink>\n            <NavLink  className=\"action-icon hidden\" to='/login' onClick={() => store.logout()}><UilSignInAlt/></NavLink>\n           \n            \n\n\n\n        </Pane>\n        </>\n    );\n}\n\nexport default Sidebar;","import { useContext } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport { DarkToggle } from './components/Sidebar/DarkToggle';\n\nfunction App() {  \n  const { store } = useContext(Context);\n\n\n  return (\n    <>\n      <div className=\"App\">\n        \n        {store.isAuth\n        ? <Sidebar/>\n        : null}\n\n          <DarkToggle display='none'/>\n          <BaseLayout/>\n        \n      </div>\n      {/* <ReactTooltip id='global' type=\"light\" place=\"bottom\" delayShow={300} className='tooltip'/> */}\n    </>\n  );\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/s3/upload'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n$api.interceptors.request.use( (config) => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n    return config;\n})\n$api.interceptors.response.use( (config) => {\n    return config;\n}, async (error) => {\n    const originalRequest = error.config;\n    if(error.response.status === 401 && error.config && !error.config._isRetry){\n        originalRequest._isRetry = true;\n        try {\n            const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n            localStorage.setItem('token', response.data.accessToken);\n            return $api.request(originalRequest);\n        } catch (e) {\n            console.log('Авторизация обломилась. Попробуйте снова');\n        }\n    }\n       \n})\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  {email, password})\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport {Pane, Spinner} from 'evergreen-ui';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilSortAmountDown, UilEnvelopeInfo, UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isAuth = false;\n    isLoading = false;\n    inMemoryToken = undefined;\n\n    priorityTab = 0;\n    showPreOrders = false;\n\n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setShowPreOrders(bool){\n        this.showPreOrders = bool\n    }\n    \n    async login(email, password){\n        try {\n            const response = await AuthService.login(email, password);\n            // localStorage.setItem('token', response.data.accessToken);\n\n            this.setInMemoryToken(response.data.accessToken)\n            this.setUser(response.data.user);\n            this.setAuth(true);\n            // window.location.href='/';\n            console.log('store', this.inMemoryToken)\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            localStorage.removeItem('token');\n            this.setAuth(false);\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n            (r) => {\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            console.log('check auth request')\n            const response = await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n            this.setInMemoryToken(response.data.accessToken)\n\n            this.setUser(response.data.user);\n            this.setAuth(true);\n\n            return {\n                'isLoaded': true,\n                'isAuth': this.isAuth, \n                }\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            return {\n                'isLoaded': true,\n                'isAuth': this.isAuth\n            }\n\n        } finally {\n            this.setLoading(false);\n        }\n        \n    }\n\n    async uploadFile(acceptedFiles){\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/s3/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            }\n          });\n        return res\n    }\n\n    async downloadFile(file){\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`)\n    }\n\n    async deleteFile(key, deleteFileMutation){\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/s3/delete/${key}`);\n\n        if (res.status == 200){\n            const hasuraRes = await deleteFileMutation({variables: {\n                'key': key,\n            }})\n            console.log(hasuraRes.data)\n        }\n        // if (res.status != 200) console.log('error during deleting file from S3', res)\n    }\n\n    pageParams = [\n        {\n            'url' : '/',\n            'icon': <UilSortAmountDown/>,\n            'title': 'Очередность выполнения',\n        },\n        {\n            'url' : '/recently',\n            'icon': <UilEnvelopeInfo/>,\n            'title': 'Недавние',\n        },\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Рекламация',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Рабочее время',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n    preloader = <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height='75vh'><Spinner /></Pane>\n}\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport jwt from 'jsonwebtoken'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\n\n//apollo \nimport { WebSocketLink} from 'apollo-link-ws';\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  from,\n} from \"@apollo/client\";\n\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\n\nlet webSocketLink = new WebSocketLink({\n  uri: process.env.REACT_APP_HASURA_WS,\n  options: {\n    reconnect: true,\n    lazy: true,\n    reconnectionAttempts: 5,\n    inactivityTimeout: 1000,\n    connectionCallback: async (error) => { error && console.log(error) },\n    connectionParams: () => ({\n      headers: {\n        'Authorization' : `Bearer ${store.inMemoryToken}`\n      }\n    }),\n    \n  }\n})\n\nconst asyncTokenValidation = setContext( async (_, {headers, ...context}) => {\n  var token = null \n\n  if (Date.now() >= jwt.decode(store.inMemoryToken).exp * 1000 ) {\n    console.log('Existed access token was expired, request for new token..')\n    token = await store.getNewToken()\n  }\n\n  return {\n    headers: {\n      ...headers,\n      ...(token ? {Authorization: `Bearer ${token}`} : {}),\n    },\n    ...context,\n  };\n});\n\n\nconst apolloClient = new ApolloClient({\n  link: from([ asyncTokenValidation, webSocketLink ]),\n  cache: new InMemoryCache()\n})\n\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__1O75u\",\"quantity\":\"composition_quantity__2YtVw\",\"addOrderItem\":\"composition_addOrderItem__2AnFf\",\"MuiFormControl-root\":\"composition_MuiFormControl-root__EpKj4\",\"fullNameInput\":\"composition_fullNameInput__89_5p\",\"quantityInput\":\"composition_quantityInput__2zcBe\",\"pushOrderItemButton\":\"composition_pushOrderItemButton__2NTfr\",\"Unit\":\"composition_Unit__2Fqng\",\"orderItemActions\":\"composition_orderItemActions__AIthU\",\"firstRow\":\"composition_firstRow__2LTDe\",\"fullName\":\"composition_fullName__NObJ0\"};"],"sourceRoot":""}