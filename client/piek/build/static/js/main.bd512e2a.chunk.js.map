{"version":3,"sources":["components/AttendanceLayout/attendance.module.sass","components/OrderListLayout/Archive/archive.module.sass","components/OrderListLayout/Search/search.module.sass","components/OrderLayout/OrderItemActions/index.module.sass","components/OrderListLayout/Recently/recently.module.sass","components/OrderLayout/Shipment/shipment.module.sass","components/Sidebar/SettingsDrawer/index.module.sass","components/OrderListLayout/PreOrders/preorders.module.sass","components/OrderLayout/CheckList/index.module.sass","components/OrderListLayout/main.module.sass","routers/PrivateRoute.js","components/LoginForm/index.js","components/_core/notification.js","components/OrderListLayout/reducer.js","components/OrderListLayout/queries/getOrders.js","hasura-queries/getUsers.js","components/OrderListLayout/UniversalTable/columnList.js","components/OrderListLayout/UniversalTable/TableMarkup.jsx","components/OrderListLayout/Search/index.js","components/OrderListLayout/Search/filter.js","components/OrderListLayout/PreOrders/MutationOrderStatus.js","components/OrderListLayout/PreOrders/index.js","components/OrderListLayout/Priority/index.js","components/OrderListLayout/Recently/index.jsx","components/OrderListLayout/Recently/spreadOrders.js","components/BaseHeader/MutationInsertOrder.js","components/BaseHeader/ActionsHeader.js","components/OrderListLayout/Archive/queries/getArchivedSearchOrders.js","components/OrderListLayout/Archive/TableMarkup.jsx","components/OrderListLayout/Archive/queries/getAllOrdersAmount.js","components/OrderListLayout/Archive/queries/getArchivedLatestOrders.js","components/OrderListLayout/Archive/queries/getArchivedUnpaidOrders.js","components/OrderListLayout/Archive/PreviewTable.jsx","components/OrderListLayout/Archive/index.jsx","components/OrderListLayout/index.jsx","components/OrderLayout/queries/GetOrderByID.js","components/OrderLayout/queries/MutationOrderDocs.js","components/OrderLayout/queries/MutationOrderItem.js","components/OrderLayout/OrderItemActions/index.jsx","components/OrderLayout/Composition.jsx","components/OrderLayout/queries/MutationOrderInfo.js","components/OrderLayout/queries/MutationDeleteOrder.js","components/OrderLayout/Shipment/Shipment.jsx","components/OrderLayout/Info.jsx","components/OrderLayout/queries/MutationPaymentHistory.js","components/OrderLayout/EditableComponents/EditableInfo.jsx","components/OrderLayout/CheckList/mutations.js","components/OrderLayout/CheckList/CheckList.jsx","components/OrderLayout/Docs/Docs.jsx","components/OrderLayout/queries/MutationOrderCommnets.js","components/OrderLayout/queries/SubscriptionComments.js","components/OrderLayout/Comments/Comment.jsx","components/OrderLayout/Comments/CommentsList.jsx","components/OrderLayout/Dropzone.js","components/OrderLayout/index.jsx","components/AttendanceLayout/queries/getUsers.js","components/AttendanceLayout/functions.js","components/AttendanceLayout/table.js","components/AttendanceLayout/ReportConfigurator.jsx","components/BaseHeader/index.js","components/AttendanceLayout/index.js","components/ReclamationLayout/index.js","routers/Router.js","components/BaseLayout/index.js","components/_core/SystemPreferTheme.js","components/Sidebar/SettingsDrawer/SettingsDrawer.jsx","components/Sidebar/Sidebar.js","App.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","index.js","components/OrderLayout/Comments/index.module.sass","components/OrderLayout/sass/composition.module.sass"],"names":["module","exports","PrivateRoute","Component","component","rest","store","useContext","Context","useState","isLoaded","setisLoaded","inMemoryToken","token","setToken","a","checkAuth","then","res","useEffect","getToken","render","props","to","LoginForm","email","setEmail","password","setPassword","history","useHistory","login","status","push","console","error","type","title","message","addNotification","insert","container","dismiss","duration","className","TextField","label","onChange","e","target","value","trim","Button","variant","width","onClick","reducer","state","action","payload","searchKeyword","managerFilter","GetOrdersSubscription","gql","GET_USERS","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","OrderID","map","item","Name","OrderItemID","Quantity","order","ShippingDate","moment","format","sass","customerTableInfo","Entity","City","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","mainsass","tableMain","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","row","awaitingDispatch","original","AwaitingDispatch","getRowProps","cells","cell","getCellProps","useStyles","makeStyles","theme","formControl","minWidth","borderRadius","border","padding","select","fontSize","color","menuItem","Search","dispatch","users","classes","tableSearchInput","placeholder","autoFocus","defaultValue","filter","filterPlaceholder","FormControl","Select","name","disableUnderline","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","filteringAlg","keyword","finded","arg","toLowerCase","includes","array","result","newOrders","ord","ManagerID","MUTATE_ORDER_STATUS","PreOrders","preOrders","useMutation","mutationOrderStatus","onClickTransfer","splice","indexOf","variables","AcceptanceDate","Date","toLocaleString","timeZone","newColumnList","filtredData","tableWrapper","preOrdersTableWrapper","Priority","useMemo","sortedData","orders","sort","b","AccessLevelID","Recently","spreadData","days","subtract","dateCreation","split","date","objs","spread","heading","recentlyTable","INSERT_ORDER","ActionsHeader","userID","createNewOrder","createOrderHandler","insert_erp_Orders","returning","editOrderHandler","setEditState","editState","createOrder","data-for","data-tip","addOrder","accessLevel","editOrderBtn","GET_ARCHIVED_SEARCH_ORDERS","unpaidOrder","unpaid","GET_ALL_ORDERS_AMOUNT","GET_ARCHIVED_LATEST_ORDERS","GET_ARCHIVED_UNPAID_ORDERS","PreviewTable","useQuery","limit","latestOrders","onCompleted","erp_Orders","unpaidIDs","unpaidOrders","previewHeading","ActualShippingDate","archiveTable","Archive","useReducer","InputBase","inputWrapper","setTimeout","OrderListLayout","selectedTab","cachedOrders","cachedPreOrders","initialState","priorityTab","useSubscription","onSubscriptionData","options","subscriptionData","forEach","OrderStatus","ID","setCachedOrders","setCachedPreOrders","fetchPolicy","nextFetchPolicy","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","a11yProps","tabHeight","AntTabs","withStyles","root","borderBottom","minHeight","height","marginBottom","backgroundColor","indicator","display","Tabs","AntTab","textTransform","borderRight","opacity","fontWeight","transition","selected","Tab","disableRipple","event","newValue","setPriorutyTab","aria-label","erp_Users","GET_ORDER_BY_ID","PUSH_DOCS_ARRAY","DELETE_ORDER_FILE","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","UPDATE_ORDER_ITEM","UPDATE_ORDER_ITEM_METADATA","StyledMenuItem","StyledInput","size","InputLabelProps","shrink","OrderItemActions","editItemHandler","deleteItemHandler","updateItem","anchorEl","setAnchorEl","SerialNumber","Fitter","setState","handleClose","serialNumber","fitter","toString","aria-controls","aria-haspopup","currentTarget","moreVertIcon","Menu","keepMounted","open","Boolean","onClose","inputListItem","multiline","prevState","actionsWrapper","deleteButton","Input","autoComplete","InputProps","fullName","quantity","OrderComposition","refetch","orderID","deleteOrderItemMutation","insertOrderItemMutation","updateOrderItemMutation","updateOrderItemMetadataMutation","itemID","orderItemID","FullName","insertOrderItem","parseInt","updateOrderItem","el","Unit","addOrderItem","fullNameInput","quantityInput","pushOrderItemButton","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","UPDATE_ORDER_STATUS","DELETE_ORDER","Shipment","isShown","setIsShown","mutateAwaitingDispatch","mutateOrderStatus","deleteOrder","update_erp_Orders_by_pk","OrderStatusID","delete_erp_Orders_by_pk","btn","appearance","CornerDialog","confirmLabel","onConfirm","cancelLabel","onCloseComplete","Checkbox","checkbox","marginTop","optimisticResponse","__typename","checked","OrderInfoCard","secondaryHeading","Card","OrderMeta","setPaidPercent","Comment","OrderNumber","CreatingDate","aboutOrder","PaymentHistories","INSERT_PAYMENT","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","log","EditableInfo","addField","updateOrderInfo","insertPayment","inputComponent","Autocomplete","getOptionLabel","option","renderInput","params","managerID","find","findSelectedManeger","INSERT_UNIT","UPDATE_UNIT_STATE","CheckList","update","cache","existingUnits","readQuery","query","newcache","JSON","parse","stringify","CheckListUnits","insert_erp_CheckListUnits_one","writeQuery","insertUnitMutation","updateUnitStateMutation","units","motion","div","initial","animate","IsComplited","classList","toggle","CheckListUnitID","IsCompluted","toggleCheckListUnit","Point","unitInput","onKeyUp","keyCode","addUnit","Docs","onUpload","setOpen","fileOnDelete","setFileOnDelete","deleteFileMutation","deleteFile","Key","attachedFiles","file","handleClickOpen","FileName","href","process","rel","files","path","onUploadFiles","intent","INSERT_ORDER_COMMENT","DELETE_ORDER_COMMENT","UPDATE_ORDER_COMMENT","SUBSCRIBTION_ORDER_COMMENT","updateComment","deleteComment","nowEditing","setNowEditing","commentUnit","commentHeader","sender","actions","CommentID","time","Timestamp","timestamp","contentEditable","commentContent","suppressContentEditableWarning","onBlur","innerHTML","onMouseLeave","dangerouslySetInnerHTML","__html","Text","CommentsList","insertOrderCommentMutation","updateOrderCommentMutation","deleteOrderCommentMutation","loading","newText","commentsListWrapper","commentInputForm","commentInput","fullWidth","saveButton","erp_Comments","isFileOnDropzone","isDragActive","document","getElementById","add","remove","orderStatus","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","search","get","pushDocs","useParams","S3Upload","useCallback","acceptedFiles","uploadFile","m","key","originalname","useDropzone","onDrop","getRootProps","Heading","Composition","Comments","Info","daysInMonth","selectedMonth","month","year","getDate","getIntervalData","day","intervals","timeDeduction","getMinutes","t","minutes","entrance","_entr","_exit","exit","getHours","number","hour","Math","floor","decpart","min","round","minute","convertInterval","interval","monthAdd","temp","getFullYear","getMonth","setMonth","setDate","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","BaseHeader","pageParams","icon","attendanceData","Attendance","Error","replace","gte","lte","getVarsForSubscription","attendance_users_aggregate","nodes","onChangeSearch","lastname","startsWith","firstname","Cell","hours","intervalsPools","generateColumns","attendanceLayout","getPageParams","window","location","pathname","attendanceTable","tableFooter","Reclamation","AppRouter","exact","BaseLayout","DARK_CLASS","SystemPreferTheme","systemPrefersDark","useMediaQuery","undefined","parts","cookie","pop","shift","getCookie","setTheme","documentElement","newTheme","expires","setFullYear","StyledToggleButtonGroup","styled","ToggleButtonGroup","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","SettingsDrawer","changeTheme","logout","anchor","themeHandler","toggleDrawer","Drawer","sx","onKeyDown","List","ListItem","themeToggleButtons","exclusive","ToggleButton","logoutButton","Sidebar","activeClassName","darkTheme","createTheme","overrides","MuiInputLabel","MuiOutlinedInput","notchedOutline","borderColor","focused","MuiInputBase","MuiIconButton","MuiAutocomplete","paper","background","listbox","observer","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","axios","create","withCredentials","baseURL","AuthService","post","Store","isLoading","preloader","Pane","alignItems","justifyContent","Spinner","makeAutoObservable","this","bool","isAuth","setInMemoryToken","accessToken","setUser","response","r","setLoading","formData","FormData","append","fetch","hasuraRes","url","createContext","webSocketLink","WebSocketLink","uri","reconnect","lazy","reconnectionAttempts","inactivityTimeout","connectionCallback","connectionParams","asyncTokenValidation","setContext","_","context","now","jwt","decode","exp","getNewToken","Authorization","apolloClient","ApolloClient","link","from","InMemoryCache","typePolicies","keyFields","erp_CheckListUnits","ReactDOM","client","sessionData","dataset","session","Provider"],"mappings":"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","file":"static/js/main.bd512e2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"attendanceLayout\":\"attendance_attendanceLayout__3ZkJT\",\"tableWrapper\":\"attendance_tableWrapper__32pvV\",\"attendanceTable\":\"attendance_attendanceTable__36c11\",\"interval\":\"attendance_interval__3CNBY\",\"status-101\":\"attendance_status-101__3aCi6\",\"tableSearchInput\":\"attendance_tableSearchInput__hHxoD\",\"tableFooter\":\"attendance_tableFooter__3W2nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"archive_inputWrapper__3nHE2\",\"archiveTable\":\"archive_archiveTable__1BwU5\",\"previewHeading\":\"archive_previewHeading__1p_gd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableSearchInput\":\"search_tableSearchInput__mHzTe\",\"filter\":\"search_filter__1BI6Q\",\"filterPlaceholder\":\"search_filterPlaceholder__2NcNB\",\"filterIndicator\":\"search_filterIndicator__Rfc0e\",\"circle\":\"search_circle__2PIMx\",\"pulsate\":\"search_pulsate__pgEiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsWrapper\":\"OrderItemActions_actionsWrapper__1mryM\",\"deleteButton\":\"OrderItemActions_deleteButton__14fyW\",\"moreVertIcon\":\"OrderItemActions_moreVertIcon__3Qdex\",\"inputListItem\":\"OrderItemActions_inputListItem__22HbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"recently_heading__2gRdv\",\"recentlyTable\":\"recently_recentlyTable__3NJpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"shipment_checkbox__2pwPK\",\"btn\":\"shipment_btn__3E_o1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeToggleButtons\":\"SettingsDrawer_themeToggleButtons__hIzSP\",\"user\":\"SettingsDrawer_user__3iVNA\",\"logoutButton\":\"SettingsDrawer_logoutButton__2_Id_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preOrdersTableWrapper\":\"preorders_preOrdersTableWrapper__2ELAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unitInput\":\"CheckList_unitInput__JnH-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderListLayout\":\"main_OrderListLayout__3KzFa\",\"tableWrapper\":\"main_tableWrapper__3lHmG\",\"tableSearchInput\":\"main_tableSearchInput__3VMNw\",\"action-icon\":\"main_action-icon__1owGu\",\"tableFooter\":\"main_tableFooter__1Egk2\",\"tableMain\":\"main_tableMain__GJwKh\",\"awaitingDispatch\":\"main_awaitingDispatch__ZF9uh\",\"unpaidOrder\":\"main_unpaidOrder__22HJx\",\"customerTableInfo\":\"main_customerTableInfo__JKJM7\"};","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const { store } = useContext(Context)\n  const [isLoaded, setisLoaded] = useState(false);\n  const [token, setToken] = useState(store.inMemoryToken);\n\n    async function getToken() {\n      store.checkAuth().then(\n        (res) => {\n          setToken(res)\n          setisLoaded(true)\n        }\n      )\n    }\n\n    useEffect(() => {\n      if (token) setisLoaded(true)\n      else getToken();\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n          if (token) return <Component {...props} />\n          else return <Redirect to='/login'/>;\n        }\n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import { useState, useContext } from 'react';\nimport { Context } from '../../index';\nimport { useHistory } from \"react-router-dom\";\n\nimport ReactNotification from 'react-notifications-component'\nimport { TextField, Button } from '@material-ui/core';\nimport './LoginForm.sass'\nimport { notif } from '../_core/notification'\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    \n    const { store } = useContext(Context);\n    const history = useHistory();\n\n\n    const login = async () => {\n      const res = await store.login(email, password)\n\n      if (res?.status === 200){\n        history.push('/')\n      }\n      else{\n        console.error('Invalig email or password')\n        notif('warning', 'Unauthorized error', 'Invalig email or password')\n      }\n      \n    }\n\n    return(<>\n      <ReactNotification />\n      <div className='loginCard'>\n        <TextField\n        className='loginInput'\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          className='loginInput'\n          onChange={e => setPassword(e.target.value.trim()) }\n        />\n        <Button\n          className=\"Button\"\n          variant=\"outlined\"\n          width='300px'\n          onClick={login}\n        >Войти</Button>\n      </div>\n    </>);\n}\n\nexport default LoginForm\n","import { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\n\nexport const notif = (type, title, message) =>  store.addNotification({\n  title,\n  message,\n  type,\n  insert: \"bottom\",\n  container: \"top-right\",\n  dismiss: {\n    duration: 4000,\n  }\n});\n","export const initialState = (selectedTab, cachedOrders, cachedPreOrders) => ({\n    orders: cachedOrders || [],\n    preOrders: cachedPreOrders || [],\n    selectedTab : selectedTab,\n\n    searchKeyword: '',\n    managerFilter: 0,\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'managerFilter': \n            return {...state, [action.type]: action.payload };\n\n        case 'resetFilters': \n            return {...state, searchKeyword: '', managerFilter: 0}\n        default: \n            return {...state}\n    }\n}","import gql from 'graphql-tag'; \n\n// Выбираем заказы находящиеся только в Прездаказах и в производстве \n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_neq: 3} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems(order_by: {OrderItemID: asc}){\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n        LastName\n      }\n\n    }  \n  }\n`\n","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n    AccessLevelID\n  }\n}\n`","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\nimport sass from '../main.module.sass'\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ' - 0%'\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row, counter) => counter +1\n    },\n    {\n      Header: 'Наим.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length === 0) return <Link to={`/orders/${data.OrderID}`}><div>Нет содержимого</div></Link>\n\n        else return (<Link to={`/orders/${data.OrderID}`}>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </Link>)\n      }\n      \n    },\n    {\n      Header: 'Кол-во',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'Отгрузка',\n      accessor: (order) => \n      <> { order.ShippingDate && moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'Компания / город',\n      accessor: data => \n      <div className={sass.customerTableInfo}>\n        <div>{data.Entity}</div>\n        <div>{data.City}</div>\n      </div>\n    },\n    {\n      Header: 'Счет- оплата',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'Мдж.',\n      accessor: data => <> {data.User?.FirstName[0] || ''} </>\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\n\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return null;\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          const awaitingDispatch = row.original.AwaitingDispatch\n          return (\n               <tr className={awaitingDispatch ? mainsass.awaitingDispatch : ''} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { UilSearch } from '@iconscout/react-unicons'\nimport sass from './search.module.sass'\n\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      minWidth: 70,\n      borderRadius: 'var(--br10)',\n      border: '1px solid var(--border)',\n      padding: '0 10px',\n    },\n    select: {\n        fontSize: '.8rem',\n        color: 'var(--highContrast)',\n    },\n    menuItem: {\n        fontSize: '.8rem',\n        color: 'var(--lowContrast)',\n    },\n  }));\n\nconst Search = ({state, dispatch, users }) => {\n    const classes = useStyles();\n\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter !== 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>Выдача ограничена фильтром</p>\n            </div>\n        ) \n    }\n\n    return (\n        <>\n        <div className={sass.tableSearchInput}>\n            <UilSearch/>\n            <input type='text' placeholder=\"Номер счета или организация\" onChange={searchHandler} autoFocus defaultValue={state.searchKeyword}/>\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl className={classes.formControl}>\n                <Select\n                    name=\"managerFilter\"\n                    value={state.managerFilter}\n                    onChange={managerHandler}\n                    className={classes.select}\n                    disableUnderline={true}\n                >\n                    <MenuItem value={0} className={classes.menuItem} >Все</MenuItem>\n                    { users.map( (user) => \n                    <MenuItem  className={classes.menuItem} value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                    )}\n                \n                </Select>\n                </FormControl>\n            </div>)}\n        </div>\n\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","function filteringAlg(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // применить поиск по ключевому слову\n    if (keyword !== '') {\n        result = array.filter( (order) => filteringAlg(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //применить поиск по фильру\n    if (managerFilter !== 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID === managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n    }\n  }\n\n`;","import { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\nimport Search from '../Search';\nimport { filter } from '../Search/filter'\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport { UilArrowFromRight} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\nimport mainsass from '../main.module.sass'\n\nconst PreOrders = ({ state, dispatch }) => {\n    const data = state.preOrders\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    const onClickTransfer = (order) => {\n        data.splice(data.indexOf(order), 1)\n        dispatch({ type: 'preOrders', payload: data })\n\n        mutationOrderStatus({ variables: { \n            OrderID: order.OrderID, \n            AcceptanceDate: new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"}) } \n        })\n    }\n\n    var newColumnList = [...columnsList];\n    const filtredData = filter(data, state.searchKeyword)\n    \n    newColumnList.push({\n        Header: ' ',\n        accessor: data => \n        <div onClick={() => onClickTransfer(data)} className=\"square-button\"><UilArrowFromRight/></div>\n        ,\n      })\n   \n    return(\n    <div className={`${mainsass.tableWrapper} ${sass.preOrdersTableWrapper}`}>\n        <Search state={state} dispatch={dispatch} />\n        {filtredData && <Table columns = {newColumnList} data = {filtredData} />}\n    </div>\n    )\n}\nexport default PreOrders","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ users, state, dispatch }) => {\n    const columns = useMemo(\n        () => columnsList, []\n    )\n    \n    const sortedData = state.orders .sort(function(a,b){\n        return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n    })\n\n    const filtredData = filter(sortedData, state.searchKeyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            {users && <Search state={state} dispatch={dispatch} users={users.filter(e => [1,2].includes(e?.AccessLevelID))}/>}\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\n\nimport Table from '../UniversalTable/TableMarkup'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport mainsass from '../main.module.sass'\nimport sass from './recently.module.sass'\n\nconst Recently = ({ state, dispatch }) => {\n\n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(b.AcceptanceDate) - new Date(a.AcceptanceDate);\n      });\n\n    const spreadData = spread(sortedData);\n\n    const columns = useMemo(() => columnsList, [] )\n\n    const filtredData = filter(spreadData[2].objs, state.searchKeyword)\n\n    return(\n        <div>\n            { spreadData[0].objs.length ? ( <>\n            <div className={sass.heading}>Сегодня</div>\n            <Table columns={columns} data={spreadData[0].objs} className={sass.recentlyTable} />\n            </>): null}\n\n            { spreadData[1].objs.length ? ( <>\n            <div className={sass.heading}>Вчера</div>\n            <Table columns={columns} data={spreadData[1].objs} className={sass.recentlyTable} />\n            </>): null}\n\n            {/* <div className={sass.heading}>Остальные</div>\n            <div className={mainsass.tableWrapper}>\n                <Search state={state} dispatch={dispatch} incomingOrders={sortedData} />\n                { <Table columns = { columns } data = { filtredData } />}\n            </div> */}\n\n        </div>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Сегодня',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'Вчера',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': '',\n        'objs': [] \n        },\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.AcceptanceDate?.split('T')[0]\n\n        if (dateCreation === days[0].date) days[0].objs.push(order);\n        else if (dateCreation === days[1].date) days[1].objs.push(order);\n        else days[2].objs.push(order);    \n    }\n\n    return days;\n};\n","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!, $isReclamation: Boolean!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID, IsReclamation: $isReclamation}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { useMutation } from '@apollo/client';\nimport { INSERT_ORDER } from './MutationInsertOrder'\n\nimport { UilPlus, UilEditAlt} from '@iconscout/react-unicons';\n\nconst ActionsHeader = (props) => {\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n        'managerID':     props.userID,\n        'orderStatusID': 1,\n        'isReclamation':  false,\n    }})\n\n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            props.history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n\n    const editOrderHandler = () => {\n        props.setEditState(!props.editState)\n    }\n\n    const editOrderBtn = () => {\n        if (props.accessLevel === 2){\n            const editIconClass = () => props.editState ? 'action-icon active': 'action-icon'\n            return <div data-for='global' data-tip=\"Добавить\" className={editIconClass()} onClick={editOrderHandler}><UilEditAlt/></div>\n        }\n    }\n\n    const addOrder = () => {\n        if (props.createOrder){\n            return <div data-for='global' data-tip=\"Добавить\" onClick={createOrderHandler} className=\"action-icon\"><UilPlus/></div>\n        }\n    }\n    return(\n        <div className=\"action-block noprint\">\n            {/* <div data-for='global' data-tip=\"Распечатать\" className=\"action-icon\"><UilPrint/></div> */}\n            {addOrder()}\n            {editOrderBtn()}\n            {/* <div data-for='global' data-tip=\"Уведомления\" className=\"action-icon\"><UilBell/></div> */}\n        </div>\n    )\n}\n\nexport default ActionsHeader","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_SEARCH_ORDERS = gql`\n  query ($keyword: String!){\n  erp_Orders(where: {\n    _or: [\n      { Entity: {_ilike: $keyword} }, \n      { InvoiceNumber: {_ilike: $keyword} }\n\n      ],\n    OrderStatusID: {_eq: 3}\n    }) {\n      ActualShippingDate\n      AwaitingDispatch\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n  }\n}\n`\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\n\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return '-> ничего не найдено';\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          const unpaidOrder = row.original.unpaid\n          return (\n               <tr className={unpaidOrder ? mainsass.unpaidOrder : ''} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { gql } from \"graphql-tag\"\n\nexport const GET_ALL_ORDERS_AMOUNT = gql`\nquery{\n  erp_Orders(\n    where: {OrderStatusID: {_eq: 3}},\n    order_by: {OrderID: desc},\n    limit: 1000,\n    ){\n\t\tOrderID\n    PaidAmount\n    TotalAmount\n  }\n}\n`\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_LATEST_ORDERS = gql`\nquery($limit: Int!){\n  erp_Orders(\n    where: { OrderStatusID: {_eq: 3} } \n    limit: $limit\n    ){\n    ActualShippingDate\n    AwaitingDispatch\n    OrderID\n    Entity\n    InvoiceNumber\n    City\n    ShippingDate\n    PaidAmount\n    TotalAmount\n    CreatingDate\n    ManagerID\n    OrderItems {\n      Quantity\n      OrderItemID\n      Name\n    } \n    User {\n      FirstName\n    }\n  }\n}\n`","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_UNPAID_ORDERS = gql`\nquery MyQuery($unpaidIDs: [Int!]) {\n    erp_Orders(where: { OrderStatusID: {_eq: 3}, OrderID: {_in: $unpaidIDs } } ) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      ActualShippingDate\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n    }\n  }\n`","//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ALL_ORDERS_AMOUNT } from './queries/getAllOrdersAmount'\nimport { GET_ARCHIVED_LATEST_ORDERS } from './queries/getArchivedLatestOrders'\nimport { GET_ARCHIVED_UNPAID_ORDERS } from './queries/getArchivedUnpaidOrders'\n\nimport Table from './TableMarkup'\nimport sass from './archive.module.sass'\n\n\nconst PreviewTable = (props) => {\n  const { state, dispatch, columns } = props\n\n  const { data : latestOrders = [] } = useQuery(GET_ARCHIVED_LATEST_ORDERS, {variables:{ limit: 10 }});\n\n  useQuery(GET_ALL_ORDERS_AMOUNT, { onCompleted: (res) => {\n    dispatch({ type: 'unpaidIDs', payload: res.erp_Orders.filter(e => e.PaidAmount / e.TotalAmount < .999).map(e => e.OrderID)})\n  }})\n\n  const { data : unpaidOrders = [] } = useQuery(GET_ARCHIVED_UNPAID_ORDERS, { variables: {unpaidIDs: state.unpaidIDs } })\n\n  const previewData = () => {\n    if (!unpaidOrders.erp_Orders || !latestOrders.erp_Orders) return []\n    return ([\n      ...unpaidOrders.erp_Orders.map(e => ({...e, unpaid: true})),\n      // проверяем есть ли в последних заказах неоплаченный, если есть, то убираем из их заказ из latestOrders\n      ...latestOrders.erp_Orders\n      .filter(e => !state.unpaidIDs.includes(e.OrderID))\n      .sort(function(a,b){\n        return new Date(b.ActualShippingDate) - new Date(a.ActualShippingDate);\n      })\n      ])\n  }\n\n  return (<>\n      <p className={sass.previewHeading}>Недавно отгруженные</p>\n      <Table columns = {columns} data = {previewData()} className={sass.archiveTable}/>\n  </>)\n}\nexport default PreviewTable","import { useMemo, useReducer } from 'react';\n\n//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ARCHIVED_SEARCH_ORDERS } from './queries/getArchivedSearchOrders'\n\n//ui\nimport { InputBase } from '@material-ui/core';\nimport sass from './archive.module.sass'\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from './TableMarkup'\n\nimport PreviewTable from './PreviewTable';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n      case 'searchKeyword': \n      case 'unpaidIDs': \n          return {...state, [action.type]: action.payload };\n      default: \n          return {...state}\n  }\n}\n\nconst Archive = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    //заказы которые отгружено, но еще не оплачены\n    unpaidIDs: [],\n    searchKeyword: '',\n  });\n\n  const { data = [] } = useQuery(GET_ARCHIVED_SEARCH_ORDERS, { variables: {\n    keyword: '%' + state.searchKeyword + '%'\n  }})\n\n  const columns = useMemo(\n    () => columnsList, []\n  )\n  \n  const searchHandler = (e) => {\n    setTimeout(() => {\n      dispatch({ type: 'searchKeyword', payload: e.target.value})\n    }, 400)\n  }\n\n  return(\n    <div>\n      <InputBase\n        className={sass.inputWrapper}\n        autoFocus\n        onChange={searchHandler}\n        placeholder='номер счета или юрлицо'/>\n\n      {!state.searchKeyword && <PreviewTable state={state} dispatch={dispatch} columns={columns} /> }\n\n      {state.searchKeyword &&  data.erp_Orders && <>\n          <p className={sass.previewHeading}>Результат поиска по архиву</p>\n          <Table columns = {columns} data = {data.erp_Orders} className={sass.archiveTable}/>\n      </>}\n\n    </div>\n  )\n}\nexport default Archive;","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n// apollo\nimport { useSubscription, useQuery } from '@apollo/client'\nimport { GetOrdersSubscription } from './queries/getOrders'\nimport { GET_USERS } from '../../hasura-queries/getUsers'\n\n// ui \nimport {Tabs, Tab, Box} from '@material-ui/core';\nimport mainsass from './main.module.sass'\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport ActionsHeader from '../BaseHeader/ActionsHeader'\nimport Archive from './Archive/';\n\nconst OrderListLayout = (props) => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState( store.priorityTab, store.cachedOrders, store.cachedPreOrders ));\n    const { selectedTab } = state; \n\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n  \n        options.subscriptionData.data.erp_Orders.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n          });\n\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID === 1) preOrders.push(order)\n            else if (order.OrderStatus.ID === 2) orders.push(order)\n        })\n        store.setCachedOrders(orders)\n        store.setCachedPreOrders(preOrders)\n\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    \n    useSubscription(GetOrdersSubscription, { onSubscriptionData,  fetchPolicy: \"cache-first\", nextFetchPolicy: \"cache-first\" });\n    const { data: users = []} = useQuery(GET_USERS);\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        dispatch({ type: 'resetFilters'})\n        store.setPriorutyTab(newValue)\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n    const tabHeight = '50px'\n    const AntTabs = withStyles({\n        root: {\n            borderBottom: '1px solid var(--border)',\n            minHeight: tabHeight,\n            height: tabHeight,\n            marginBottom: '2rem',\n            backgroundColor: 'var(--L0)',\n        },\n        indicator: {  \n            display: 'none'\n        },\n      })(Tabs);\n      \n      const AntTab = withStyles((theme) => ({\n        root: {\n          minWidth: '10%',\n          fontSize: '.9rem',\n          textTransform: 'none',\n          color: 'var(--lowContrast)',\n          borderRight: '1px solid var(--border)',\n          padding: 0,\n          opacity: 1,\n          fontWeight: 500,\n          minHeight: tabHeight,\n          height: tabHeight,\n          transition: 'color .3s ease',\n          '&:hover': {\n            color: 'var(--highContrast)',\n          },\n          '&$selected': {\n                // color: 'var(--accent)',\n                backgroundColor: 'var(--L1)',\n          }\n        },\n        selected: {},\n      }))((props) => <Tab disableRipple {...props} />);\n\n    return(\n        <div className={mainsass.OrderListLayout}>\n        <AntTabs value={selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\" className='orderListLayoutTabs'>\n            <AntTab label=\"Предзаказы\" {...a11yProps(0)} />\n            <AntTab label=\"Очередость\" {...a11yProps(1)} />\n            <AntTab label=\"Недавние\"   {...a11yProps(2)} />\n            <AntTab label='Архив'      {...a11yProps(3)} />\n\n\n            <ActionsHeader createOrder={1} userID={store.user.UserID} history={history}/>\n        </AntTabs>\n\n\n        <TabPanel value={selectedTab} index={0}>\n            <PreOrders state={state} dispatch={dispatch}/>\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={1} >\n            <Priority state={state} dispatch={dispatch} users={users.erp_Users} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={2}>\n            <Recently state={state} dispatch={dispatch} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={3}>\n            <Archive state={state} dispatch={dispatch} />\n        </TabPanel>\n\n      </div>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    AwaitingDispatch\n    ActualShippingDate\n    AcceptanceDate\n    OrderID\n    ManagerID\n    OrderStatusID\n    City\n    ShippingDate\n    CreatingDate\n    Comment\n    Entity\n    InvoiceNumber\n    OrderNumber\n    PaidAmount\n    TotalAmount\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems(order_by: {OrderItemID: asc}) {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialNumber\n    }\n    CheckListUnits(order_by: {CheckListUnitID: desc}) {\n      CheckListUnitID\n      OrderID\n      IsComplited\n      Point\n    }\n    Docs {\n      Key\n      FileName\n    }\n    PaymentHistories(\n      where: {PaidAmount: {_neq: 0}}\n    ){\n      PaidAmount\n      Date\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;\n\n\nexport const UPDATE_ORDER_ITEM = gql`\nmutation($OrderItemID: Int!, $FullName: String!, $Name: String!, $Quantity: Int!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n    _set: {FullName: $FullName, Name: $Name, Quantity: $Quantity}) {\n    Name\n    FullName\n    OrderItemID\n    Quantity\n  }\n}\n\n`;\nexport const UPDATE_ORDER_ITEM_METADATA = gql`\nmutation($OrderItemID: Int!, $Fitter: String!, $SerialNumber: String!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n     _set: {Fitter: $Fitter, SerialNumber: $SerialNumber}\n  ){\n    OrderItemID\n  }\n}\n`","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu, MenuItem, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UilEllipsisV } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        fontSize: '.8rem',\n        color: 'var(--highContrast)',\n    },\n  }))( (props) => (\n    <MenuItem disableRipple={true} {...props} /> \n  ));\n\n  const StyledInput = withStyles((theme) => ({\n    root: {\n        fontSize: '.8rem',\n    },\n  }))( (props) => (\n      <TextField\n        size='small' \n        variant='outlined' \n        InputLabelProps={{shrink: true}} \n        {...props} />\n  ));\n\n  \nconst OrderItemActions = ({ editState, item, editItemHandler, deleteItemHandler, updateItem }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    'serialNumber': item.SerialNumber,\n    'fitter': item.Fitter\n  });\n\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n\n      if (item.SerialNumber !== state.serialNumber || item.Fitter !== state.fitter){\n        updateItem({ variables: {\n          'OrderItemID': item.OrderItemID,\n          'Fitter': state.fitter,\n          'SerialNumber': state.serialNumber.toString()\n        } })\n      }\n    };\n    \n    return (\n        <div className='noprint'>\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size='small'>\n            <UilEllipsisV className={sass.moreVertIcon}/>\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n\n\n            <StyledMenuItem className={sass.inputListItem} >\n              <StyledInput \n                type=\"number\"\n                label=\"Серийный номер\" \n                multiline\n                onChange={(e) => setState(prevState => ({\n                ...prevState,\n                'serialNumber': e.target.value\n                }))}\n                defaultValue={state.serialNumber}\n                />\n            </StyledMenuItem>\n\n            <StyledMenuItem className={sass.inputListItem} >\n              <StyledInput \n                label=\"Сборщик\"  \n                onChange={(e) => setState(prevState => ({\n                ...prevState,\n                'fitter': e.target.value\n                }))}\n                defaultValue={state.fitter}\n              />\n            </StyledMenuItem>\n\n\n            {editState && (\n              <div className={sass.actionsWrapper}>\n                <StyledMenuItem onClick={ (e) => {\n                    handleClose();\n                    editItemHandler(e, item);\n                }}>Изменить</StyledMenuItem>\n\n                <StyledMenuItem \n                  className={sass.deleteButton}\n                  onClick={ ()=> {\n                    handleClose();\n                    deleteItemHandler(item.OrderItemID);\n                }}>Удалить</StyledMenuItem>\n              </div>\n            )}\n\n          </Menu>\n        </div>\n      );\n}\n\nOrderItemActions.propTypes = { \n    editState: PropTypes.bool,\n    item:      PropTypes.object,\n    editItemHandler:  PropTypes.func, \n    deleteItemHandler: PropTypes.func,\n    updateItem: PropTypes.func\n}\n\nexport default OrderItemActions\n\n","import { useReducer, useEffect } from 'react'\n\n//apollo \nimport { useMutation } from \"@apollo/client\"\nimport { \nDELETE_ORDER_ITEM, \nINSERT_ORDER_ITEM, \nUPDATE_ORDER_ITEM, \nUPDATE_ORDER_ITEM_METADATA \n} from \"./queries/MutationOrderItem\"\n\n// ui \nimport { TextField, Button } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport sass from './sass/composition.module.sass'\n\nimport OrderItemActions from './OrderItemActions'\n\n\nconst Input = withStyles({\n  root: {\n  }\n})((props) => \n  <TextField \n    size='small' \n    autoComplete='off'\n    InputProps={{ disableUnderline: true }}\n    {...props} \n  />);\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n    id: null,\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                id: action.payload[0],\n                name: action.payload[1],\n                fullName: action.payload[2],\n                quantity: action.payload[3]\n            }\n        default: \n            return {...state}\n    }\n\n}\n\nconst OrderComposition = ({ data, editState, refetch, orderID }) => {\n    const [ deleteOrderItemMutation ]         = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ]         = useMutation(INSERT_ORDER_ITEM);\n    const [ updateOrderItemMutation ]         = useMutation(UPDATE_ORDER_ITEM);\n    const [ updateOrderItemMetadataMutation ] = useMutation(UPDATE_ORDER_ITEM_METADATA);\n    const [state, dispatch ] = useReducer(reducer, initialState)\n    \n    const deleteItemHandler = (itemID) => {\n        deleteOrderItemMutation({ variables: { orderItemID: itemID} })\n        refetch()    \n    }\n    const editItemHandler = (e, item) => {\n        dispatch({ type: 'editItem', payload: [item.OrderItemID, item.Name, item.FullName, item.Quantity] })\n\n        // deleteItem(item.OrderItemID)\n    }\n\n    useEffect(() => {\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n    const insertOrderItem = () => {\n        if (state.quantity === '' || state.name === '') return null\n\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const updateOrderItem = () => {\n      if (state.quantity === '' || state.name === '') return null\n      updateOrderItemMutation({variables: { \n          OrderItemID: state.id,\n          Name: state.name, \n          Quantity: parseInt(state.quantity),\n          FullName: state.fullName, }}).then( () => { dispatch({ type: 'reset'}); refetch() })    \n  }\n  \n    const addItemForm = () => {\n      if (!editState) return null\n      return(\n        <div className={sass.addOrderItem}>\n            <Input\n                label=\"Наименование\"\n                value={state.name}\n                onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n              />\n           <Input\n                label=\"Полное наименование\"\n                multiline\n                className={sass.fullNameInput}\n                value={state.fullName}\n                onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n                />\n            <Input\n                label=\"Кол-во\"\n                type=\"number\"\n                className={sass.quantityInput}\n                value={state.quantity}\n                onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n               />\n\n              {!state.id \n              ? <Button className={sass.pushOrderItemButton} onClick={insertOrderItem}>Добавить</Button> \n              : <Button className={sass.pushOrderItemButton} onClick={updateOrderItem}>Изменить</Button> }\n        </div>\n        )\n      }\n\n    return(<>     \n        {data.map( (el, index) => \n        \n        <div\n          key={el.OrderItemID}\n          className={sass.Unit} \n        >\n              <span className={sass.index}>{index+1}</span>\n              <div className={sass.name}> {el.Name} </div>\n              <span  className={sass.quantity}> {el.Quantity}</span>\n              <OrderItemActions \n                  editState={editState} \n                  item={el}\n                  editItemHandler={editItemHandler}\n                  deleteItemHandler={deleteItemHandler}\n                  updateItem={updateOrderItemMetadataMutation}\n              />\n\n              <div  className={sass.fullName}> { el.FullName }</div>\n\n        </div>\n        )}\n        \n      {addItemForm()}\n    </>)\n}\n\nexport default OrderComposition","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($orderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $orderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($orderID: Int!, $awaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $orderID},\n   _set: { AwaitingDispatch: $awaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;\n\nexport const UPDATE_ORDER_STATUS = gql`\n  mutation MyMutation($OrderID: Int!, $ActualShippingDate: timestamptz!) {\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID}, \n      _set: {\n        OrderStatusID: 3,\n        AwaitingDispatch: false,\n        ActualShippingDate: $ActualShippingDate,\n        }){\n      OrderID\n      OrderStatusID\n    }\n  }\n`;","import {gql} from 'graphql-tag'; \n\nexport const DELETE_ORDER = gql`\nmutation MyMutation($OrderID: Int!) {\n  delete_erp_Orders_by_pk(OrderID: $OrderID) {\n    OrderID\n  }\n}\n`;","import { useState } from 'react'\nimport sass from './shipment.module.sass'\nimport { CornerDialog, Button, Checkbox } from 'evergreen-ui'\nimport { useMutation } from \"@apollo/client\"\nimport { useHistory } from \"react-router-dom\";\n\nimport { \n  UPDATE_AWAITING_DISPATCH,\n  UPDATE_ORDER_STATUS } from '../queries/MutationOrderInfo'\nimport { DELETE_ORDER } from '../queries/MutationDeleteOrder';\n\nconst Shipment = (props) => {\n  const { data, orderID } = props\n  const [isShown, setIsShown] = useState(false)\n  const history = useHistory();\n  const [mutateAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n  const [mutateOrderStatus] = useMutation(UPDATE_ORDER_STATUS);\n  const [deleteOrder] = useMutation(DELETE_ORDER);\n\n  function deleteOrderHandler(){\n    deleteOrder({ variables: {\n      OrderID: orderID\n    }}).then( res => {\n      if (res.data.delete_erp_Orders_by_pk.OrderID){\n        history.push(\"/\")\n      }\n    })\n  }\n  function awaitingDispatchHandler(){\n    mutateAwaitingDispatch({\n      variables: {orderID, awaitingDispatch: !data.AwaitingDispatch },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: orderID,\n            AwaitingDispatch: !data.AwaitingDispatch\n          }\n        }\n    })\n  }\n  async function TransferOrder(){\n    mutateOrderStatus({ variables: { \n      OrderID: orderID,\n      ActualShippingDate: new Date()\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderStatusID === 3){\n          history.push(\"/\")\n        }\n      }\n    )\n  }\n\n  if (data.OrderStatusID === 3) return null\n  if (data.OrderStatusID === 1) return (\n    <div>\n        <Button onClick={deleteOrderHandler} className={sass.btn} appearance=\"minimal\">Удалить предзаказ</Button>\n    </div>\n  )\n  return (\n    <div>\n        <CornerDialog\n          title=\"Перенести в архив?\"\n          isShown={isShown}\n          confirmLabel='Перенести'\n          onConfirm={TransferOrder}\n          cancelLabel='Не нужно'\n          onCloseComplete={() => setIsShown(false)}\n        >\n          Заказ удалится из очередности, но его в любое время можно будет найти в архиве по номеру счета, юрлицу, маркировке привода.\n        </CornerDialog>\n        <Checkbox className={sass.checkbox} marginTop={0} label=\"Ожидает отгрузки\" onChange={awaitingDispatchHandler} checked={data.AwaitingDispatch}/>\n        <Button onClick={() => setIsShown(true)} className={sass.btn} appearance=\"primary\">Отгружен</Button>\n    </div>\n  )\n}\nexport default Shipment","import  moment  from 'moment'\nimport { Card, Pane} from \"evergreen-ui\";\nimport \"./sass/order-meta.sass\";\n\nimport Shipment from \"./Shipment/Shipment\";\n\nconst OrderInfoCard = (props) => {\n  const { heading, secondaryHeading } = props;\n  return (\n    <Card className=\"OrderInfoCard\">\n    <div className='row'>\n      <div className='heading'>\n        {heading}\n      </div>\n      <div className='secondaryHeading'>\n        {secondaryHeading}\n      </div>\n    </div>\n\n    <div className='body'>\n      {props.children}\n    </div>\n  </Card>\n  )\n}\n\nconst OrderMeta = (props) => {\n   const { data } = props;\n    \n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ''\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n    const cells = [\n      {\n        'heading': \"План. отгрузка\",\n        'data': data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY'),\n        'className': 'bold',\n      },\n      {\n        'heading': \"Счет / оплата\",\n        'data': <div> {\"№ \"+ data.InvoiceNumber+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n              </div>,\n        'className': 'bold',\n      },\n      {\n        'heading': \"Юр Лицо\",\n        'data': data.Entity,\n      },\n      {\n        'heading': \"Город\",\n        'data': data.City,\n      },\n      {\n        'heading': \"\",\n        'data': data.Comment,\n        'className': 'OrderComment',\n      },      \n    ]\n\n    const orderInfo = cells.map( (el) =>  \n      <div key={el.heading} className={el.className}>\n        <pre>{el.heading}</pre>\n        {el.data}\n      </div>\n    )\n   \n    const paidVisualization = () => {\n      if (data.PaymentHistories.length == 0) return null\n\n      return (\n        <OrderInfoCard className='noprint' heading=\"Платежи\" secondaryHeading={`${data.TotalAmount} ₽`}>\n           <table className='paidVisualization'>\n            {data.PaymentHistories.map(e => (\n              <tr>\n                <td>{(e.PaidAmount / data.TotalAmount * 100).toFixed(0)} % </td>\n                <td>{moment(e.Date).format('DD.MM.YY')}</td>\n              </tr>\n            ))}\n          </table>\n        </OrderInfoCard>\n      )\n    }\n    \n    const aboutOrder = () => {\n      const columns = [\n        {\n          'heading': \"Менеджер\",\n          'data': `${data.User?.FirstName} ${data.User?.LastName || 'undefined'}`, \n        },\n        {\n          'heading': \"Создан\",\n          'data': moment(data.CreatingDate).format('DD.MM.YY'),\n        },\n        {\n          'heading': \"В очередности\",\n          'data': moment(data.AcceptanceDate).format('DD.MM.YY'), \n        },\n        {\n          'heading': \"Факт. отгрузка\",\n          'data': moment(data.ActualShippingDate).format('DD.MM.YY'), \n        }\n      ]\n\n      return (\n        <OrderInfoCard heading=\"О заказе\">\n          <table>\n             {columns.map(el => {\n                if (!el.data || el.data === 'Invalid date') return null\n                return <tr>\n                  <td>{el.heading}</td>\n                  <td>{el.data}</td>\n                </tr>\n                }\n              )}\n          </table>\n        </OrderInfoCard>\n      )\n    }\n\n  return (<>\n      <div className=\"wrap\">\n\n          <div className='significantInfo'>\n            <div className='bold'>\n              <pre>План. отгузка</pre>\n              {data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY')}\n            </div>\n            <div className='bold'>\n              <pre>Номер заказа</pre>\n              {data.OrderNumber}\n            </div>\n            <div className='bold'>\n              <pre>Счет / оплата</pre>\n              {\"№ \"+ data.InvoiceNumber+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n            </div>\n          </div>\n\n          <div className='OrderComment'>\n              <pre>Комментарий</pre>\n              {data.Comment}\n          </div>\n\n        {aboutOrder()}\n        {paidVisualization()}\n      </div>\n      <div className=\"actions noprint\">\n        <Shipment {...props} />\n      </div>\n  </>)\n}\n\nexport default OrderMeta\n","import {gql} from 'graphql-tag'; \n\nexport const INSERT_PAYMENT = gql`\n  mutation($PaidAmount: numeric!, $Date: timestamptz!, $OrderID: Int!) {\n    insert_erp_PaymentHistory_one(object: {PaidAmount: $PaidAmount, OrderID: $OrderID, Date: $Date}) {\n      ID\n      OrderID\n    }\n}\n`;","import { useEffect } from 'react';\nimport {TextField} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport './EditableInfo.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\nimport { INSERT_PAYMENT } from '../queries/MutationPaymentHistory'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nconsole.log(fields)\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'₽ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch, users }) => {  \n  \n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n    const [insertPayment] = useMutation(INSERT_PAYMENT)\n  \n    function saveChanges(){\n      console.log('doing mutation for order', orderID, fields)\n      updateOrderInfo({variables: {\n        orderID,\n        fields,\n      }})\n\n      if (fields.PaidAmount) insertPayment({ variables: {\n          Date: new Date,\n          OrderID: orderID,\n          PaidAmount: fields.PaidAmount\n        }})\n      \n      refetch()\n    }\n    useEffect(() => {\n        fields = {};\n        return () => {\n            saveChanges()\n        };\n    }, []);\n\n    function findSelectedManeger(users, managerID){\n      if (!users) return null\n      const index = users.indexOf(users.find(user => user.UserID === managerID))\n      return users[index]\n    }\n\n  return(\n    <form className=\"Info EditableInfo\">  \n      <div className=\"wrap\">\n       <TextField\n          label=\"План. отгрузка\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          autoComplete=\"off\"\n          InputProps={{\n            inputComponent: DateFormatCustom\n          }}\n        />\n\n        <TextField\n          label=\"Номер счета\"\n          type=\"number\"\n\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"Номер заказа\"\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={users.filter( (user) => user.AccessLevelID != 3)}\n          getOptionLabel={(option) => `${option.FirstName} ${option.LastName}`}\n          renderInput={(params) => <TextField {...params} label=\"Менеджер\"/>}\n          defaultValue={() => findSelectedManeger(users, data.ManagerID)}\n          onChange={(event, newValue) => {\n            fields['ManagerID'] = (newValue?.UserID || null)\n          }}\n        />\n\n         <TextField\n          label=\"Юр лицо\"\n          autoComplete=\"off\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"Город\"\n          autoComplete=\"off\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Сумма заказа\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom\n          }}\n          />\n        \n        <TextField\n          label=\"Оплачено\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom\n          }}\n        />\n\n        <TextField\n          label=\"Комментарий\"\n          multiline\n          autoComplete=\"off\"\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n       </div>\n    </form>\n  )\n}\n\nexport default EditableInfo","import {gql} from 'graphql-tag'; \n\nexport const INSERT_UNIT = gql`\nmutation($OrderID: Int!, $Point: String!) {\n  insert_erp_CheckListUnits_one(\n    object: {OrderID: $OrderID, Point: $Point}){\n      CheckListUnitID\n      Point\n      IsComplited\n    }\n}\n`\n\nexport const UPDATE_UNIT_STATE = gql`\nmutation MyMutation($CheckListUnitID: Int!, $IsCompluted: Boolean!) {\n  update_erp_CheckListUnits_by_pk(\n    pk_columns: {CheckListUnitID: $CheckListUnitID}, _set: {IsComplited: $IsCompluted})\n    {\n    CheckListUnitID\n    IsComplited\n    Point\n    }\n}\n`","import { useMutation } from \"@apollo/client\"\nimport { UPDATE_UNIT_STATE, INSERT_UNIT } from './mutations'\nimport { GET_ORDER_BY_ID } from \"../queries/GetOrderByID\";\n\nimport sass from './index.module.sass'\nimport { motion } from \"framer-motion\"\n\nconst CheckList = ({ data, OrderID }) => {\n    const [insertUnitMutation] = useMutation(INSERT_UNIT, {\n        update(cache, { data }){\n            const existingUnits = cache.readQuery({ query: GET_ORDER_BY_ID, variables: { OrderID } })\n            var newcache = JSON.parse(JSON.stringify(existingUnits))\n            newcache.erp_Orders[0].CheckListUnits.push(data.insert_erp_CheckListUnits_one)\n            cache.writeQuery({\n                query: GET_ORDER_BY_ID,\n                variables: { OrderID },\n                data: newcache\n            })\n        }\n      });\n    const [updateUnitStateMutation] = useMutation(UPDATE_UNIT_STATE);\n\n    function addUnit(e){\n        if (e.keyCode !== 13 || !e.target.value) return null\n        insertUnitMutation({ \n            variables: {\n             OrderID,\n             'Point': e.target.value },\n            optimisticResponse: {\n                insert_erp_CheckListUnits_one: {\n                    __typename: \"erp_CheckListUnits\",\n                    CheckListUnitID: 'temp-id',\n                    Point: e.target.value,\n                    IsComplited: false,\n                    OrderID\n                }\n              }\n        })\n        e.target.value = '';\n    } \n\n    const toggleCheckListUnit = (target, el) => {\n        target.target.classList.toggle('complited')\n        updateUnitStateMutation({ variables: { CheckListUnitID: el.CheckListUnitID, IsCompluted: !el.IsComplited } })\n    }\n\n    const units = data.map(el => \n        <motion.div\n            initial={{ opacity: .3 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: .4}}\n            key={el.CheckListUnitID} \n            className={ el.IsComplited ? \"CheckListUnit complited\" : \"CheckListUnit\"}\n            onClick={ target => toggleCheckListUnit(target, el) }\n            >\n            {el.Point}\n        </motion.div>\n        )\n\n    return(\n        <div className=\"CheckList noprint\">\n            <input \n            className={sass.unitInput} \n            type=\"text\" \n            placeholder='Опишите задачу и нажмите enter' \n            onKeyUp={(e) => addUnit(e) }\n            />\n            {units}\n        </div>\n    )\n}\n\n\nexport default CheckList","import { useContext, useState, useEffect } from 'react';\nimport { Context } from '../../../index'\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from '../queries/MutationOrderDocs';\n\nimport './docs.sass'\n\nimport { CornerDialog } from 'evergreen-ui'\n\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const { store } = useContext(Context)\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length === 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n    useEffect(() => {\n        setOpen(false)\n    }, [editState]);\n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        await store.deleteFile(fileOnDelete.Key, deleteFileMutation)\n        refetch()\n    }\n\n    const attachedFiles = data.map(\n        file => {\n            // delite file\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n             // opne file\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    rel=\"noreferrer\"\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n            <div className='filesContainer'>\n                {attachedFiles}\n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n\n                    <CornerDialog\n                        title={fileOnDelete?.FileName}\n                        isShown={open}\n                        confirmLabel='Удалить навсегда'\n                        onConfirm={deleteFile}\n                        cancelLabel='Не нужно'\n                        intent='danger'\n                        onCloseComplete={handleClose}\n                        >\n                        Вы действительно хотите удалить этот файл? <br/>\n                        Это действие необратимо.\n                    </CornerDialog>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_COMMENT = gql`\nmutation($OrderID: Int!, $Text: String!, $UserID: Int!) {\n  insert_erp_Comments_one(\n    object: {OrderID: $OrderID, Text: $Text, UserID: $UserID}) \n    {\n    CommentID\n    OrderID\n    Text\n    Timestamp\n    UserID\n  }\n}\n`;\n\nexport const DELETE_ORDER_COMMENT = gql`\n mutation($CommentID: Int!) {\n  delete_erp_Comments_by_pk(CommentID: $CommentID) {\n    CommentID\n  }\n}\n`;\n\nexport const UPDATE_ORDER_COMMENT = gql`\nmutation($CommentID: Int!, $Text: String!, $Timestamp: timestamptz!) {\n  update_erp_Comments_by_pk(\n    pk_columns: {CommentID: $CommentID},\n    _set: {Text: $Text, Timestamp: $Timestamp}) \n    {\n    OrderID\n    Text\n    Timestamp\n    UserID\n    CommentID\n  }\n  }\n`;","import gql from 'graphql-tag'\n\nexport const SUBSCRIBTION_ORDER_COMMENT = gql`\n  subscription MySubscritp($OrderID: Int!) {\n    erp_Comments(where: {OrderID: {_eq: $OrderID}}, order_by: {CommentID: desc}) {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n  }\n`\n","import sass from './index.module.sass'\nimport moment from 'moment'\nimport { TextField } from '@mui/material/';\n\nconst Comment = (props) => {\n  const { data, userID, updateComment, deleteComment, nowEditing, setNowEditing } = props\n\n  function sender(){\n    if (userID === data.User.UserID) return 'Вы'\n    else return `${data.User.FirstName} ${data.User.LastName}`\n  }\n  function actions(){\n    if (userID === data.User.UserID && nowEditing?.CommentID !== data.CommentID ) return (\n        <div onClick={()=> deleteComment(data.CommentID)}>Удалить</div>\n    )\n  }\n  function timestamp(){\n    const date = moment(data.Timestamp)\n    return date.format('MMM D') +' at '+ date.format('hh:mm')\n  }\n\n  function getCommentContent(){\n    if (userID === data.User.UserID) return <div contentEditable=\"true\"\n    key={data.CommentID}\n    className={sass.commentContent}\n    suppressContentEditableWarning=\"true\"\n    onBlur={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n    }}\n    onMouseLeave={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n      setNowEditing(null)\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text}}></div>\n\n    else return <div className={sass.commentContent}>{data.Text}</div>\n\n  }\n\n  return (\n    <div className={sass.commentUnit}>\n\n      <div className={sass.commentHeader}>\n        <div className={sass.sender}> {sender()} </div>\n        <div className={sass.actions}>{actions()}</div>\n        <div className={sass.time}> {timestamp()} </div>\n      </div>\n      {getCommentContent()}\n\n    </div>\n  )\n}\nexport default Comment ","import { useState } from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { INSERT_ORDER_COMMENT, UPDATE_ORDER_COMMENT, DELETE_ORDER_COMMENT } from '../queries/MutationOrderCommnets'\nimport { SUBSCRIBTION_ORDER_COMMENT } from '../queries/SubscriptionComments'\nimport sass from './index.module.sass'\n\nimport { TextField } from '@mui/material/';\nimport Comment from './Comment'\nconst CommentsList = (props) => {\n  const { orderID, user } = props\n  const [ insertOrderCommentMutation ] = useMutation(INSERT_ORDER_COMMENT);\n  const [ updateOrderCommentMutation ] = useMutation(UPDATE_ORDER_COMMENT);\n  const [ deleteOrderCommentMutation ] = useMutation(DELETE_ORDER_COMMENT);\n  const [state, setState]           = useState('');\n  const [nowEditing, setNowEditing] = useState();\n  const { data = [], loading } = useSubscription(SUBSCRIBTION_ORDER_COMMENT, { variables: { OrderID: orderID }});\n\n  function insertComment(){\n    if (!state) return null\n    insertOrderCommentMutation({ variables: {\n      OrderID: orderID,\n      UserID: user.UserID,\n      Text: state\n      }\n    })\n    setState('')\n  }\n\n  function updateComment(id, newText){\n    updateOrderCommentMutation({ variables: {\n      CommentID: id,\n      Text: newText,\n      Timestamp: new Date()\n    }})\n  }\n\n  function deleteComment(id){\n    deleteOrderCommentMutation({ variables: {\n      CommentID: id\n    }\n  })\n  }\n  \n  return(\n    <div className={sass.commentsListWrapper}>\n     <div className={sass.commentInputForm}>\n     <TextField\n        variant='standard'\n        placeholder='Введите комментарий' \n        className={sass.commentInput}\n        multiline\n        fullWidth\n        size='small'\n        autoComplete=\"off\"\n        InputProps={{ disableUnderline: true }}\n        value={state}\n        onChange={(e) => setState(e.target.value) }\n        />\n      {state &&\n      <div \n      onClick={insertComment} \n      className={sass.saveButton}>\n        Сохранить\n      </div>\n      }\n    </div>\n\n     {!loading && data.erp_Comments.map( (data) => <Comment \n      data={data} \n      key={data.CommentID}\n      userID={user.UserID}\n      deleteComment={deleteComment}\n      updateComment={updateComment}\n      nowEditing={nowEditing}\n      setNowEditing={setNowEditing}\n      />)}\n    </div>\n  )\n}\n\nexport default CommentsList","import { UilCloudUpload } from '@iconscout/react-unicons'\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <div >\n             <UilCloudUpload className='inCloudconIcon'/>\n         </div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","import { useContext, useCallback, useState } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_USERS } from '../../hasura-queries/getUsers';\nimport { GET_ORDER_BY_ID } from './queries/GetOrderByID'\nimport { PUSH_DOCS_ARRAY } from './queries/MutationOrderDocs'\nimport { useMutation, useQuery } from \"@apollo/client\";\n\n//components\nimport ActionsHeader from \"../BaseHeader/ActionsHeader\";\nimport Composition from \"./Composition\";\nimport Info from \"./Info\";\nimport EditableInfo from \"./EditableComponents/EditableInfo\";\nimport CheckList from './CheckList/CheckList';\nimport Docs from './Docs/Docs';\nimport CommentsList from \"./Comments/CommentsList\";\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport { Heading } from 'evergreen-ui';\nimport './sass/index.sass';\n\nfunction orderStatus(data){\n    // add a note to the title if this is a pre-order\n    if (data.OrderStatusID === 1) return ' | Предзаказ';\n    if (data.OrderStatusID === 3) return ' | В архиве';\n}\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    const [pushDocs] = useMutation(PUSH_DOCS_ARRAY);\n    const orderID = useParams().id\n\n    const S3Upload = useCallback(acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        store.uploadFile(acceptedFiles).then(\n            (res) => {\n                if (res.status !== 200) console.log('S3 file upload error')\n                else{\n                    let m = []\n                    for (var i=0;  i<res.data.length; i=i+2 ){\n                        m.push({\n                            'Key': res.data[i].key,\n                            'OrderID': orderID,\n                            'FileName': res.data[i].originalname,\n                        })\n                    }\n                    pushDocs({ variables: {'objects': m} })\n                } \n                setOnUploadFiles([])\n                refetch();\n                }\n            \n        )\n      }, [])\n\n    const { data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID} });\n    const { data: users = []} = useQuery(GET_USERS);\n    const {getRootProps, isDragActive} = useDropzone({className: 'dropzone', onDrop: S3Upload });\n      \n    return(\n    <div> \n        {isFileOnDropzone(isDragActive)}\n        { data.erp_Orders ? (<>\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n                <div className='LeftSideContent'>\n\n                    <div className=\"page-header\">\n                        <Heading>\n                            {data.erp_Orders[0].Entity} __ {data.erp_Orders[0].City} \n                            <span className=\"preorderTitle\">{orderStatus(data.erp_Orders[0])}</span>\n                        </Heading>\n\n                        <ActionsHeader \n                        accessLevel = {2} \n                        setEditState = {setEditState} \n                        editState = {editState} />\n                        \n                    </div>\n\n                    <div className=\"Composition\">  \n                      <Composition \n                          data={data.erp_Orders[0].OrderItems} \n                          editState={editState}\n                          refetch={refetch}\n                          orderID= {orderID} /> \n                    </div>\n\n                    <CommentsList \n                    orderID={orderID} \n                    user={store.user} \n                    data={data.erp_Orders[0].Comments}/> \n\n                    <Docs data={data.erp_Orders[0].Docs} \n                    onUpload={onUploadFiles} \n                    editState = {editState} \n                    refetch={refetch} />\n\n                    <CheckList data={data.erp_Orders[0].CheckListUnits} OrderID={orderID} />\n                     \n                </div>\n                <div className=\"Info\">\n                  {editState? <EditableInfo data={data.erp_Orders[0]} orderID={orderID} refetch={refetch} users={users.erp_Users} /> : (\n                              <Info data={data.erp_Orders[0]} editState = {editState} orderID={orderID} />)}\n                </div>\n        </section> \n\n        </>): null }\n\n    </div>\n    )\n}\n\nexport default OrderLayout","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervalsPools(where: {entrance: {_gte: $gte,  _lte: $lte}}) {\n        entrance\n        exit\n        card\n        interval\n        status\n      }\n    }\n  }\n}  \n`\n\n\n","\nexport function daysInMonth (selectedMonth) {\n    // количество дней в текущем месяце\n      const [month, year] = selectedMonth\n      return new Date(year, month+1, 0).getDate();\n}\n\n\n  \n\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './functions'\nimport sass from './attendance.module.sass'\n\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  let columnsList = [\n      {\n      Header: 'Сотрудник',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'Итого',\n      Cell: row => {\n        var hours = 0;\n        const intervals = row.row.original.intervalsPools\n        intervals.forEach( interval => {\n          hours += interval.interval \n        });\n\n        //вычетаем время на обед\n        hours -= timeDeduction/60 * intervals.length\n\n        return <div>{hours.toFixed(0)}</div>\n      }\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => {\n        const day1 = row.column.Header\n\n        const [entrance, exit, interval, status] = getIntervalData(day1, row.row.original.intervalsPools, timeDeduction)\n        \n        return (\n          <div className={\"status-\"+ status}> \n            <div>{ entrance }</div> \n            <div>{ exit }</div>\n            <div className={sass.interval}>{ interval }</div>\n          \n          </div>\n        )\n      }\n    })\n  }\n  return columnsList\n}\n\n\n\nfunction getIntervalData(day, intervals, timeDeduction){\n\n    // конвертация float в часы и минуты\n    function convertInterval(number, timeDeduction){\n        //вычетаем время на обед\n        number -= timeDeduction/60\n\n        var hour = Math.floor(number);\n        var decpart = number - hour;\n        var min = 1 / 60;\n\n        // Round to nearest minute\n        decpart = min * Math.round(decpart / min);\n        var minute = Math.floor(decpart * 60) + '';\n\n        // Add padding if need\n        if (minute.length < 2) {\n            minute = '0' + minute; \n        }\n\n        return hour + ':' + minute;\n    }\n\n    function getMinutes(t){\n        const minutes = t.getMinutes()\n        return (minutes < 10) ? `0${minutes}` : minutes\n    }\n\n    const e = intervals.find(el =>  new Date(el.entrance).getDate() == day)\n\n    if (e) {\n        const _entr = new Date(e.entrance)\n        const _exit = new Date(e.exit)\n\n        const entrance = _entr.getHours()+':'+ getMinutes(_entr)\n        const exit = _exit.getHours()+':'+ getMinutes(_exit)\n        const interval = convertInterval(e.interval, timeDeduction)\n\n        return [entrance, exit, interval, e.status]\n    }   else return [null, null, null, null]\n}\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nfunction monthAdd(date, month) {\n    // функция используется для корректного вычитания месяцев в chooseMonth\n    var temp = date;\n    temp = new Date(date.getFullYear(), date.getMonth(), 1);\n    temp.setMonth(temp.getMonth() + (month + 1));\n    temp.setDate(temp.getDate() - 1); \n  \n    if (date.getDate() < temp.getDate()) { \n        temp.setDate(date.getDate()); \n    }\n    return temp;    \n  }\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i< 6; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div onClick={selectedMonthHandler} \n                    className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                    date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>обед</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>мин</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>норма</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>ч</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","import { Heading } from 'evergreen-ui';\n\n\nconst BaseHeader = (props) => {\n\n    return(\n           <div className=\"page-header\">\n                    <span>{props.pageParams.icon}</span>\n                    <Heading>{props.pageParams.title}</Heading>                    \n                    {props.children}\n            </div>\n    )\n}\n\nexport default BaseHeader","\nimport  { useContext, useMemo, useEffect, useReducer } from 'react'\nimport { Context } from '../../index'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\n\nimport Table, { generateColumns } from './table'\nimport { getVarsForSubscription } from './functions'\n\n\nimport './index.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport BaseHeader from '../BaseHeader'\nimport { UilSearch } from '@iconscout/react-unicons'\n\nimport sass from './attendance.module.sass'\n\nvar attendanceData = null;\n// учет рабочего времени\nconst Attendance = props => {\n    const date = new Date()\n    const { store } = useContext(Context);\n\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 'filtredData':\n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [date.getMonth()-1, date.getFullYear()],\n    });\n    const { timeDeduction, selectedMonth, filtredData } = state;\n\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n    const { loading } = useQuery(GET_USERS, { variables: { gte, lte }, onCompleted: (options) => {\n        attendanceData = options.attendance_users_aggregate.nodes;\n        dispatch({ type: 'filtredData', payload: attendanceData})\n    } });\n    \n    useEffect(() => {\n        return () => {\n            attendanceData = null\n        };\n    }, []);\n\n    function filteringAlg(user, keyword){\n        if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else return false\n    }\n\n    const onChangeSearch = (e) => {\n        const keyword = e.target.value.trim();\n\n            if (keyword !== '') {\n              const result = attendanceData.filter((user) => filteringAlg(user, keyword))\n              dispatch({ type: 'filtredData', payload: result })\n            } else dispatch({ type: 'filtredData', payload: attendanceData})\n    }\n\n    const columns = useMemo(\n        () => generateColumns(selectedMonth, timeDeduction), [selectedMonth, timeDeduction]\n    )\n\n    return(\n    <div className={sass.attendanceLayout}>\n            <BaseHeader pageParams = { store.getPageParams(window.location.pathname) } search={onChangeSearch} /> \n            <ReportConfigurator state={state} dispatch={dispatch} />\n\n        <div className={sass.tableWrapper}>\n\n            <div className={sass.tableSearchInput}>\n                <UilSearch/>\n                <input type='text' placeholder=\"поиск (номер счета или организация)\" onChange={ (e) => onChangeSearch(e) } autoFocus/>\n            </div>\n            \n            {filtredData && columns && <Table columns = {columns} data = {filtredData} className={sass.attendanceTable} /> }\n\n             {/* условное обозначение */}\n             <div className={`${sass.tableFooter} legend`}>\n                <div className=\"status-101\">Прерванный рабочий день</div>\n                <div className=\"status-102\">Не отмечен конец смены</div>\n                <span className=\"reportMeta\">\n                    Отчет за {selectedMonth[0] + 1} месяц {selectedMonth[1]} года \n                </span>\n\n            </div>\n\n        </div>\n    </div>\n    )\n}\n\nexport default Attendance","import { Button } from 'evergreen-ui'\nimport sass from './index.module.sass'\n\nconst Reclamation = (props) => {\n\n    return(\n        <div></div>\n        \n    )\n}\nexport default Reclamation","import {Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport LoginForm from '../components/LoginForm';\nimport OrderListLayout from \"../components/OrderListLayout\";\nimport OrderLayout from \"../components/OrderLayout\";\nimport Attendance from '../components/AttendanceLayout'\nimport Reclamation from \"../components/ReclamationLayout\";\n\nconst AppRouter = () => {\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/reclamation' component={Reclamation}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            #if required route was not found\n            <Redirect     to=\"/\" />\n            {/* <PrivateRoute path='/recently' component={() => <PriorityLayout props={isRecently}/>} store={props.store}/> */}\n        </Switch>\n    )\n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\nconst BaseLayout = (props) => {\n    return(\n        <div className=\"base-container\">\n                <AppRouter/> \n                {props.children}\n        </div>\n    )\n}   \n\nexport default BaseLayout;","import { useEffect, useState } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DARK_CLASS = \"dark\";\n\nfunction getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport const SystemPreferTheme = () => {\n    const systemPrefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\"}, undefined);\n    const [theme, setTheme] = useState(() => getCookie('theme'));\n\n    function changeTheme(newTheme){\n        var expires = new Date()\n        expires.setFullYear(expires.getFullYear()+1)\n        document.cookie = `theme=${newTheme}; expires=${expires}; path=/`\n        setTheme(newTheme)\n    }\n\n    useEffect(() => {\n      if (theme === 'dark') document.documentElement.classList.add(DARK_CLASS)\n      else if (theme === 'light') document.documentElement.classList.remove(DARK_CLASS)\n\n      else if (theme === 'system'){\n        if (systemPrefersDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n      }\n    }, [theme, systemPrefersDark]);\n\n    return [theme, changeTheme]\n};","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../../../index';\nimport { useHistory } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { styled } from '@mui/material/styles';\n\nimport { UilSun, UilMoon, UilDesktop, UilSetting } from '@iconscout/react-unicons'\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n  Divider\n} from '@mui/material/';\n\nimport sass from './index.module.sass'\nimport { SystemPreferTheme } from '../../_core/SystemPreferTheme';\n\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    border: '1px solid var(--border)',\n    padding: 8,\n    textTransform: 'none',\n    '&:not(:first-of-type)': {\n\n    },\n    '&:first-of-type': {\n      borderTopLeftRadius: 'var(--br)',\n      borderBottomLeftRadius: 'var(--br)',\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 'var(--br)',\n      borderBottomRightRadius: 'var(--br)',\n    },\n  },\n}));\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function SettingsDrawer() {\n  const {store} = useContext(Context);\n  const [state, setState] = useState(false);\n  const history = useHistory()\n  const [theme, changeTheme] = SystemPreferTheme()\n\n  async function logout(){\n    await store.logout(); \n    history.push('/login')\n  }\n\n  const themeHandler = (event, newTheme) => {\n    changeTheme(newTheme);\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open);\n  };\n  \n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 400 }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n    >\n\n      <List>\n        <ListItem className={sass.user}>\n        <div>Добро пожаловать, {store.user.FirstName} {store.user.LastName}!</div>\n        </ListItem>\n\n        <ListItem >\n          <StyledToggleButtonGroup\n            className={sass.themeToggleButtons}\n            color=\"primary\"\n            value={getCookie('theme')}\n            exclusive\n            fullWidth\n            onChange={themeHandler}\n            >\n            <ToggleButton value=\"light\"> <UilSun/> Light</ToggleButton>\n            <ToggleButton value=\"system\"> <UilDesktop/>System</ToggleButton>\n            <ToggleButton value=\"dark\"> <UilMoon/> Dark</ToggleButton>\n          </StyledToggleButtonGroup>\n        </ListItem>\n\n      </List>\n      \n      <div className={sass.logoutButton}>\n        <button onClick={logout}>Выйти</button>\n      </div>\n    </Box>\n  );\n\n  return (\n    <div>\n          <div onClick={toggleDrawer(true)}>\n            <UilSetting/>\n          </div>\n          <Drawer\n            open={state}\n            onClose={toggleDrawer(false)}\n          >\n            {list('left')}\n          </Drawer>\n    </div>\n  );\n}","// import { observer } from 'mobx-react-lite';\nimport { useContext } from 'react';\nimport { NavLink} from 'react-router-dom';\nimport { Context } from '../../index';\nimport './index.sass';\n\nimport { UilSortAmountDown, UilWrench, UilConstructor} from '@iconscout/react-unicons';\nimport SettingsDrawer from './SettingsDrawer/SettingsDrawer';\n\nconst Sidebar = () => {\n    const {store} = useContext(Context);\n    return(\n        <div className='Sidebar noprint'>\n\n            <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"action-icon\"><UilSortAmountDown/></NavLink>\n            <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"action-icon\"><UilWrench/></NavLink>\n            <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"action-icon\"><UilConstructor/></NavLink>\n                \n            <div className=\"action-icon settings\">\n                <SettingsDrawer/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Sidebar;","import { useContext } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst darkTheme = createTheme({\n});\n\ndarkTheme.overrides = {\n  MuiInputLabel: {\n    root: {\n      color: 'var(--lowContrast)',\n      fontSize: '.8rem',\n    },\n  },\n  MuiOutlinedInput: {\n    notchedOutline: {\n      borderColor: 'var(--border)',\n    },\n    focused:{\n      borderColor: 'var(--border) !important',\n    }\n  },\n  MuiInputBase: {\n    root: {\n      borderBottom: 'none',\n      color: 'var(--highContrast)',\n      '&::before': {\n        borderColor: 'var(--border) !important',\n      }\n    },\n  },\n  MuiIconButton:{\n    root: {\n      color: 'var(--lowContrast)',\n      opacity: .5\n    }\n  },\n  MuiAutocomplete: {\n    paper: {\n      background: 'var(--L0) !important',\n      border: '1px solid var(--border)',\n    },\n    listbox: {\n      color: 'var(--highContrast)',\n      fontSize: '.8rem',\n    },\n  },\n}\n\n\nfunction App() {  \n  const { store } = useContext(Context);\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        \n        { store.inMemoryToken && <Sidebar/> }\n\n          <BaseLayout/>\n        \n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/s3/upload'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n// $api.interceptors.request.use( (config) => {\n//     config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n//     return config;\n// })\n// $api.interceptors.response.use( (config) => {\n//     return config;\n// }, async (error) => {\n//     const originalRequest = error.config;\n//     if(error.response.status === 401 && error.config && !error.config._isRetry){\n//         originalRequest._isRetry = true;\n//         try {\n//             const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n//             localStorage.setItem('token', response.data.accessToken);\n//             return $api.request(originalRequest);\n//         } catch (e) {\n//             console.log('Авторизация не прошла. Попробуйте снова');\n//         }\n//     }\n       \n// })\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  { email, password })\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport {Pane, Spinner} from 'evergreen-ui';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isLoading = false;\n    inMemoryToken = undefined;\n\n    priorityTab = 1;\n\n    cachedOrders = [];\n    cachedPreOrders = [];\n\n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setCachedOrders(array){\n        this.cachedOrders = array\n    }\n    setCachedPreOrders(array){\n        this.cachedPreOrders = array\n    }\n\n    async login(email, password){\n        try {\n            const res = await AuthService.login(email, password)\n            if (res.status === 200){\n              this.setInMemoryToken(res.data.accessToken)\n              this.setUser(res.data.user);\n              return res\n            }\n            \n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            this.setInMemoryToken(null)\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n            (r) => {\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            await axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n              (res) => {\n                if (res.status === 200){\n                  console.log(res)\n                  this.setUser(res.data.user);\n                  this.setInMemoryToken(res.data.accessToken)      \n                  console.log('token validation complited')  \n                }\n              }\n            )\n        } catch (e) {\n            console.log(e)\n        } finally {\n            this.setLoading(false);\n            return this.inMemoryToken\n        }\n    }\n\n    async uploadFile(acceptedFiles){\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/s3/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            }\n          });\n        return res\n    }\n\n    async downloadFile(file){\n        await fetch(`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`)\n    }\n\n    async deleteFile(key, deleteFileMutation){\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/s3/delete/${key}`);\n\n        if (res.status === 200){\n            const hasuraRes = await deleteFileMutation({variables: {\n                'key': key,\n            }})\n            console.log(hasuraRes.data)\n        }\n        // if (res.status != 200) console.log('error during deleting file from S3', res)\n    }\n\n    pageParams = [\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Рекламация',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Рабочее время',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n    preloader = <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height='75vh'><Spinner /></Pane>\n}\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport jwt from 'jsonwebtoken'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\nimport './materialUI.sass';\n\n\n//apollo \nimport { WebSocketLink} from 'apollo-link-ws';\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  from,\n} from \"@apollo/client\";\n\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\n\nlet webSocketLink = new WebSocketLink({\n  uri: process.env.REACT_APP_HASURA_WS,\n  options: {\n    reconnect: true,\n    lazy: true,\n    reconnectionAttempts: 5,\n    inactivityTimeout: 10000000,\n    connectionCallback: async (error) => { error && console.log(error) },\n    connectionParams: () => ({\n      headers: {\n        'Authorization' : `Bearer ${store.inMemoryToken}`\n      }\n    }),\n    \n  }\n})\n\nconst asyncTokenValidation = setContext( async (_, {headers, ...context}) => {\n  var token = null \n\n  if (Date.now() >= jwt.decode(store.inMemoryToken).exp * 1000 ) {\n    console.log('Existed access token was expired, request for new token..')\n    token = await store.getNewToken()\n  }\n\n  return {\n    headers: {\n      ...headers,\n      ...(token ? {Authorization: `Bearer ${token}`} : {}),\n    },\n    ...context,\n  };\n});\n\n\nconst apolloClient = new ApolloClient({\n  link: from([ asyncTokenValidation, webSocketLink ]),\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n        erp_CheckListUnits: {\n          keyFields: ['CheckListUnitID']\n        },\n        erp_Comments: {\n          keyFields: ['CommentID']\n        }\n    },\n  })\n})\n\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsListWrapper\":\"Comments_commentsListWrapper__25Ylk\",\"commentInputForm\":\"Comments_commentInputForm__2W6Of\",\"saveButton\":\"Comments_saveButton__FkrZB\",\"commentUnit\":\"Comments_commentUnit__1L_o5\",\"actions\":\"Comments_actions__2pxUd\",\"commentContent\":\"Comments_commentContent__EsGgq\",\"commentHeader\":\"Comments_commentHeader__3aEgO\",\"sender\":\"Comments_sender__3ld3S\",\"time\":\"Comments_time__2egg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__1O75u\",\"quantity\":\"composition_quantity__2YtVw\",\"addOrderItem\":\"composition_addOrderItem__2AnFf\",\"quantityInput\":\"composition_quantityInput__2zcBe\",\"pushOrderItemButton\":\"composition_pushOrderItemButton__2NTfr\",\"Unit\":\"composition_Unit__2Fqng\",\"index\":\"composition_index__2aXz6\",\"fullName\":\"composition_fullName__NObJ0\"};"],"sourceRoot":""}