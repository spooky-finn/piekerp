{"version":3,"sources":["pages/OrderListPage/Archive/archive.module.sass","pages/OrderListPage/Search/search.module.sass","pages/OrderDetailPage/OrderItemActions/index.module.sass","pages/Settings/styles.module.sass","components/Sidebar/SettingsDrawer/index.module.sass","components/TableSearch/table_search.module.sass","pages/OrderListPage/PreOrders/preorders.module.sass","routers/PrivateRoute.js","utils/notification.js","pages/LoginPage/index.js","pages/OrderListPage/reducer.js","pages/OrderListPage/queries/getOrders.js","hasura-queries/getUsers.js","pages/OrderListPage/queries/MutationInsertOrder.js","pages/OrderListPage/UniversalTable/columnList.js","pages/OrderListPage/UniversalTable/TableMarkup.jsx","components/TableSearch/index.jsx","pages/OrderListPage/Search/filter.js","pages/OrderListPage/Search/index.js","pages/OrderListPage/PreOrders/MutationOrderStatus.js","pages/OrderListPage/PreOrders/index.js","pages/OrderListPage/Priority/index.js","pages/OrderListPage/Recently/index.jsx","pages/OrderListPage/Recently/spreadOrders.js","pages/OrderListPage/Archive/queries/getArchivedSearchOrders.js","pages/OrderListPage/Archive/queries/getAllOrdersAmount.js","pages/OrderListPage/Archive/queries/getArchivedLatestOrders.js","pages/OrderListPage/Archive/queries/getArchivedUnpaidOrders.js","pages/OrderListPage/Archive/PreviewTable.jsx","utils/OrderStatus.js","pages/OrderListPage/Archive/index.jsx","pages/OrderListPage/index.jsx","pages/OrderDetailPage/queries/GetOrderByID.js","pages/OrderDetailPage/queries/MutationOrderItem.js","pages/OrderDetailPage/OrderItemActions/index.jsx","pages/OrderDetailPage/Composition.jsx","pages/OrderDetailPage/RightInfoPanel/index.jsx","pages/OrderDetailPage/queries/MutationOrderInfo.js","pages/OrderDetailPage/queries/MutationPaymentHistory.js","pages/OrderDetailPage/RightInfoPanel/EditRightInfoPanel.jsx","pages/OrderDetailPage/queries/MutationOrderDocs.js","pages/OrderDetailPage/Docs/ConfirmDialog.jsx","services/S3Service.js","pages/OrderDetailPage/Docs/Docs.jsx","pages/OrderDetailPage/queries/MutationOrderCommnets.js","pages/OrderDetailPage/queries/MutationNotification.js","pages/OrderDetailPage/queries/SubscriptionComments.js","pages/OrderDetailPage/Comments/Comment.jsx","pages/OrderDetailPage/queries/GetAllUsers.js","pages/OrderDetailPage/Comments/Ð¡ommandsPopover.jsx","pages/OrderDetailPage/Comments/UserListPopover.jsx","utils/placeCaretAtEnd.js","pages/OrderDetailPage/Comments/InputForm.js","pages/OrderDetailPage/Comments/CommentsList.jsx","utils/UserStatus.js","pages/OrderDetailPage/queries/MutationDeleteOrder.js","pages/OrderDetailPage/OrderActions/Dialogs/TransferOrderConfirmDialog.jsx","pages/OrderDetailPage/OrderActions/Actions/OrderActions.jsx","pages/OrderDetailPage/OrderActions/Actions/PreOrderActions.jsx","pages/OrderDetailPage/OrderActions/Actions/OrderStatusesActions.jsx","pages/OrderDetailPage/OrderActions/Actions/ReclamationActions.jsx","pages/OrderDetailPage/OrderActions/OrderActionsMenu.jsx","pages/OrderDetailPage/OrderHeader.jsx","pages/OrderDetailPage/Dropzone.js","pages/OrderDetailPage/index.jsx","pages/ReclamationPage/reducer.js","pages/ReclamationPage/queries.js","pages/ReclamationPage/index.js","utils/SystemPreferTheme.js","pages/Settings/index.jsx","pages/AttendancePage/queries/getUsers.js","pages/AttendancePage/time_ helpers.js","pages/AttendancePage/functions.js","pages/AttendancePage/Table.jsx","pages/AttendancePage/ReportConfigurator.jsx","pages/AttendancePage/index.js","routers/Router.js","components/BaseLayout/index.js","components/muiCustom/mui/CustomDrawer.js","components/Sidebar/NotificationCenter/getNotifications.js","components/Sidebar/NotificationCenter/index.js","components/Sidebar/SettingsDrawer/SettingsDrawer.jsx","components/Sidebar/Sidebar.js","App.js","materialStyles.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","http/apollo/wsLinks.js","http/apollo/httpLinks.js","http/apollo/apolloClient.js","index.js","pages/OrderDetailPage/Comments/index.module.sass","pages/OrderListPage/main.module.sass","pages/ReclamationPage/index.module.sass","components/Sidebar/NotificationCenter/index.module.sass","pages/AttendancePage/sass/attendance.module.sass","pages/OrderDetailPage/sass/composition.module.sass"],"names":["module","exports","PrivateRoute","Component","component","rest","store","useContext","Context","useState","isLoaded","setisLoaded","inMemoryToken","token","setToken","a","checkAuth","then","res","useEffect","getToken","render","props","to","notif","type","title","message","duration","Store","addNotification","insert","container","dismiss","slidingExit","LoginForm","email","setEmail","password","setPassword","history","useHistory","login","status","push","className","TextField","variant","label","onChange","e","target","value","trim","Button","width","onClick","reducer","state","action","payload","searchKeyword","managerFilter","search","keyword","brief","GetOrdersSubscription","gql","GET_USERS","INSERT_ORDER","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","OrderID","map","item","Name","OrderItemID","Quantity","order","ShippingDate","moment","format","sass","customerTableInfo","Entity","City","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","statusHighlighting","showUnpaid","unpaid","mainsass","unpaidOrder","NeedAttention","split","needAttention","AwaitingDispatch","awaitingDispatch","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","tableMain","table","thead","headerGroup","i","tr","getHeaderGroupProps","headers","column","th","getHeaderProps","tbody","row","original","tableRow","getRowProps","cells","cell","td","getCellProps","TableSearch","placeholder","defaultValue","disableAutoFocus","table_search_wrapper","autoFocus","compare","finded","arg","toLowerCase","includes","filter","array","result","newOrders","ord","ManagerID","Search","dispatch","users","Box","sx","display","breifname","arr","selectedTab","orders","preOrders","adjacentSearch","breif","showonTab","el","briefOnClick","adjacentSearchWrap","filterPlaceholder","FormControl","Select","name","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","MUTATE_ORDER_STATUS","PreOrders","useMutation","newColumnList","filtredData","tableWrapper","preOrdersTableWrapper","Priority","useMemo","sortedData","sort","b","Date","AccessLevelID","styles","heading","flexDirection","padding","secondary","color","fontSize","textTransform","borderTop","Recently","spreadData","days","subtract","dateCreation","AcceptanceDate","date","objs","spread","ifNothing","Typography","style","m","GET_ARCHIVED_SEARCH_ORDERS","GET_ALL_ORDERS_AMOUNT","GET_ARCHIVED_LATEST_ORDERS","GET_ARCHIVED_UNPAID_ORDERS","PreviewTable","useQuery","variables","limit","OrderStatus","reqOrderStatus","fetchPolicy","latestOrders","loading","onCompleted","erp_Orders","unpaidIDs","unpaidOrders","ActualShippingDate","archiveTable","ordRegistration","ordProduction","ordArchived","reclInbox","reclDecision","reclProduction","reclArchived","Archive","useReducer","OS","error","console","setTimeout","filterFormControl","InputLabel","labelId","filterInputBase","event","marginTop","StyledTabs","styled","Tabs","theme","background","minHeight","StyledTab","Tab","fontWeight","typography","pxToRem","borderRight","borderLeft","boxShadow","opacity","backgroundColor","OrderListLayout","cachedOrders","cachedPreOrders","reclamations","archived","initialState","priorityTab","useSubscription","onSubscriptionData","options","subscriptionData","forEach","ID","setCachedOrders","setCachedPreOrders","createNewOrder","TabPanel","children","index","other","role","hidden","aria-labelledby","mb","a11yProps","newValue","setPriorutyTab","aria-label","marginLeft","marginRight","alignSelf","insert_erp_Orders","returning","erp_Users","GET_ORDER_BY_ID","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","UPDATE_ORDER_ITEM","UPDATE_ORDER_ITEM_METADATA","OrderItemActions","editState","editItemHandler","deleteItemHandler","setOIDialog","updateItem","anchorEl","setAnchorEl","SerialNumber","Fitter","handleClose","minWidth","aria-controls","aria-haspopup","currentTarget","size","moreVertIcon","Menu","keepMounted","open","Boolean","onClose","actionsWrapper","deleteButton","fullName","quantity","OrderComposition","refetch","orderID","OIDialog","deleteOrderItemMutation","insertOrderItemMutation","updateOrderItemMutation","updateOrderItemMetadataMutation","itemID","orderItemID","FullName","closeOIDialog","insertOrderItem","parseInt","Unit","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","addOrderItem","multiline","fullNameInput","quantityInput","DialogActions","justifyContent","OrderInfoCard","secondaryHeading","Pre","palette","text","OrderMeta","OrderNumber","Comment","CreatingDate","aboutOrder","PaymentHistories","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","UPDATE_NEED_ATTENTION","MOVE_ORDER_TO_ARCHIVE","MOVE_ORDER_TO_PRIORITY","INSERT_PAYMENT","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","insertPayment","log","InputProps","inputComponent","Autocomplete","getOptionLabel","option","renderInput","params","managerID","indexOf","find","findSelectedManeger","DELETE_ORDER_FILE","ConfirmDialog","filename","onConfirmF","aria-describedby","DialogContentText","S3Service","acceptedFiles","formData","FormData","file","append","axios","put","process","key","deleteFileMutation","delete","Docs","onUpload","setOpen","fileOnDelete","setFileOnDelete","deleteFile","Key","attachedFiles","handleClickOpen","FileName","href","rel","files","path","onUploadFiles","INSERT_ORDER_COMMENT","DELETE_ORDER_COMMENT","UPDATE_ORDER_COMMENT","INSERT_NOTIFICATION","SUBSCRIBTION_ORDER_COMMENT","userID","updateComment","deleteComment","nowEditing","setNowEditing","commentUnit","commentHeader","sender","actions","CommentID","time","Timestamp","timestamp","contentEditable","commentContent","suppressContentEditableWarning","onBlur","innerHTML","onMouseLeave","dangerouslySetInnerHTML","__html","Text","toString","checklistUnit","GET_ALL_USERS","Ð¡ommandsPopover","setAnchorULP","root","document","getElementById","elem","createElement","classList","add","appendChild","insertTodoinDOM","current","UserListPopover","getAttribute","inputform","innerText","slice","join","mentionedUserHiglight","dataset","mentionedUser","focus","window","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","select","placeCaretAtEnd","space","userid","InputForm","insertComment","anchorULP","commentInputForm","ref","data-ph","onInput","onKeyUp","ctrlKey","metaKey","keyCode","saveButton","CommentsList","insertOrderCommentMutation","updateOrderCommentMutation","deleteOrderCommentMutation","insertNotificationMutation","useRef","comments","newText","switchTodo","toggle","checklistUnit_complited","els","querySelectorAll","addEventListener","once","removeEventListener","line","erp_Comments","commentListThread","commentsListWrapper","mentioned","insert_erp_Comments_one","MentionedUser","comment","UserStatus","general","management","bookkeeping","manufacture","DELETE_ORDER","TransferOrderConfirmDialog","React","ListItemIcon","ListItemText","transferOrderTo","OrderActions","OrderStatusID","PreOrderActions","transferOrderToPriority","mutationDeleteOrderHandler","OrderStatusesActions","needAttentionHandler","awaitingDispatchHandler","ReclamationActions","transferOrderToArchive","ifInproduction","ifInbox","OrderActionsMenu","OAMenu","setOAMenu","OAMenuRef","mutationAwaitingDispatch","mutationNeedAttention","mutationMoveOrderToArchive","mutationMoveOrderToPriority","mutationDeleteOrder","baseurl","update_erp_Orders_by_pk","delete_erp_Orders_by_pk","optimisticResponse","__typename","curDate","toISOString","nd","orderStatus","OrderHeader","setEditState","ml","US","isFileOnDropzone","isDragActive","remove","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","get","useParams","fileUploader","useCallback","uploadFile","useDropzone","onDrop","getRootProps","Composition","Comments","RightInfoPanel","inbox","decision","inproduction","SUBSCRIPTION_RECLAMATION_ORDERS","UPDATE_ORDER_STATUS","Reclamation","getState","columnName","droppableId","orderStatusID","mutateOrderStatusID","insertOrder","col","getOrderStatus","reclatationLayout","onDragEnd","source","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","movedObj","move","Object","entries","columnWrapper","reclColumn","provided","snapshot","innerRef","draggableWrapper","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","orderItem","customerInfo","DARK_CLASS","SystemPreferTheme","appTheme","setAppTheme","systemPrefersDark","useMediaQuery","query","undefined","mode","documentElement","changeTheme","newTheme","expires","setFullYear","getFullYear","cookie","Settings","UItheme","logout","GridCard","gridCard","grid","Email","selectThemeWrapper","each","convertInterval","t","hour","Math","floor","decpart","min","round","minute","monthAdd","month","temp","getMonth","setMonth","setDate","getDate","getTimedelta","time1","time2","mtime1","mtime2","diff","abs","asSeconds","daysInMonth","selectedMonth","year","fill_columns","timeDeduction","columnDay","intervals","ent","ext","total_duration","intervalgrid","interval","intervalred","generateColumns","lastname","firstname","Cell","total_t","with_human_mistakes","day","findedIntervalsForCurrentDay","property","dur","parseFloat","human_mistakes","calc_hours_for_mounth","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","Attendance","defaultDate","Error","s_keyword","replace","gte","lte","getVarsForSubscription","searchResult","dt","attendance_users_aggregate","nodes","startsWith","search_alg","attendanceTable","AppRouter","exact","BaseLayout","CustomDrawer","icon","toggleDrawer","Drawer","PaperProps","backdropFilter","onKeyDown","GET_NOTIFICATIONS","UPDATE_VIEWED","NotificationCenter","notifications","setNotifications","updateViewedMutration","erp_Notifications","unviewed","Viewed","viewed","_eq","setState","notificationUnit","notificationHeader","item1","normal","item2","Order","item3","Badge","badgeContent","unviewedCounter","wrapper","unreadedWrapper","ToggleButtonGroup","border","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","Sidebar","wrap","activeClassName","observer","parts","pop","shift","getCookie","setUItheme","createTheme","primary","main","light","fontFamily","subtitle1","letterSpacing","subtitle2","subtitle3","getDesignTokens","components","MuiDialog","styleOverrides","paper","borderRadius","MuiDialogTitle","borderBottom","MuiDialogContent","MuiDialogActions","MuiMenu","MuiMenuItem","defaultProps","disableRipple","MuiListItemText","MuiListItemIcon","MuiButton","textInfo","iconic","strokeWidth","stroke","disableElevation","MuiToggleButton","MuiTextField","autoComplete","MuiAutocomplete","MuiInputLabel","transform","position","shrink","MuiFilledInput","disableUnderline","MuiInput","MuiInputBase","MuiOutlinedInput","notchedOutline","MuiPopover","MuiSelect","boxSizing","outline","MuiTab","MuiCheckbox","MuiDrawer","muicomponents","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","create","withCredentials","baseURL","AuthService","post","isLoading","pageParams","makeAutoObservable","this","bool","isAuth","number","setInMemoryToken","accessToken","setUser","response","r","setLoading","url","wsRetryLink","RetryLink","delay","initial","max","Infinity","jitter","attempts","retryIf","_operation","wsErrorLink","onError","graphQLErrors","networkError","operation","forward","locations","webSocketLink","WebSocketLink","uri","ws_protocol","reconnect","lazy","connectionParams","getInMemoryToken","subscriptionClient","onReconnecting","getNewInMemoryToken","newToken","close","connect","reinitWSConnection","httpErrorLink","Observable","setContext","Authorization","subscriber","next","bind","complete","subscribe","catch","httpAuthLink","_","httpLink","HttpLink","http_protocol","splitLink","definition","getMainDefinition","kind","apolloClient","ApolloClient","link","cache","InMemoryCache","typePolicies","keyFields","erp_CheckListUnits","createContext","getNewToken","ReactDOM","client","sessionData","session","Provider"],"mappings":"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","file":"static/js/main.f8a45303.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterFormControl\":\"archive_filterFormControl__1uVNU\",\"filterInputBase\":\"archive_filterInputBase__1-l5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"search_filter__F_ZsO\",\"filterPlaceholder\":\"search_filterPlaceholder__1WCV5\",\"filterIndicator\":\"search_filterIndicator__33hWx\",\"circle\":\"search_circle__28B_G\",\"pulsate\":\"search_pulsate__c8CLI\",\"adjacentSearchWrap\":\"search_adjacentSearchWrap__1v790\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"OrderItemActions_deleteButton__366_d\",\"moreVertIcon\":\"OrderItemActions_moreVertIcon__1nfZK\",\"inputListItem\":\"OrderItemActions_inputListItem__2r1Lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"styles_grid__2B7og\",\"gridCard\":\"styles_gridCard__Zz1TM\",\"selectThemeWrapper\":\"styles_selectThemeWrapper__2JWIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeToggleButtons\":\"SettingsDrawer_themeToggleButtons__hIzSP\",\"user\":\"SettingsDrawer_user__3iVNA\",\"logoutButton\":\"SettingsDrawer_logoutButton__2_Id_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_search_wrapper\":\"table_search_table_search_wrapper__2YVA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preOrdersTableWrapper\":\"preorders_preOrdersTableWrapper__28dMd\"};","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const { store } = useContext(Context)\n  const [isLoaded, setisLoaded] = useState(false);\n  const [token, setToken] = useState(store.inMemoryToken);\n\n    async function getToken() {\n      store.checkAuth().then(\n        (res) => {\n          setToken(res)\n          setisLoaded(true)\n        }\n      )\n    }\n\n    useEffect(() => {\n      if (token) setisLoaded(true)\n      else getToken();\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n          if (token) return <Component {...props} />\n          else return <Redirect to='/login'/>;\n        }\n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import { Store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\nexport const notif = (type, title, message = '', duration = 2000 ) =>  Store.addNotification({\n  title,\n  message,\n  type,\n  insert: \"bottom\",\n  container: \"top-right\",\n  dismiss: {\n    duration,\n  },\n  slidingExit: {\n    duration: 50, \n  }\n});\n","import { useState, useContext } from 'react';\nimport { Context } from '../../index';\nimport { useHistory } from \"react-router-dom\";\n\nimport { TextField, Button } from '@mui/material';\nimport './LoginForm.sass'\nimport { notif } from '../../utils/notification'\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    \n    const { store } = useContext(Context);\n    const history = useHistory();\n\n\n    const login = async () => {\n      const res = await store.login(email, password)\n      if (res?.status === 200){\n        history.push('/')\n      }\n      else{\n        notif('warning', 'Unauthorized error', 'Invalig email or password')\n      }\n      \n    }\n\n    return(<>\n      <div className='loginCard'>\n        <TextField\n        className='loginInput'\n        variant='filled'\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          variant='filled'\n          className='loginInput'\n          onChange={e => setPassword(e.target.value.trim()) }\n        />\n        <Button\n          className=\"Button\"\n          variant=\"outlined\"\n          width='300px'\n          onClick={login}\n        >ÐÐ¾Ð¹ÑÐ¸</Button>\n      </div>\n    </>);\n}\n\nexport default LoginForm\n","export const initialState = (selectedTab, cachedOrders, cachedPreOrders) => ({\n    orders: cachedOrders || [],\n    preOrders: cachedPreOrders || [],\n    selectedTab : selectedTab,\n\n    searchKeyword: '',\n    managerFilter: 0,\n\n\n    search : {\n        // search in adjacent groups as an additional information\n        // Ð¿Ð¾Ð¸ÑÐº Ð² ÑÐ¼ÐµÐ¶Ð½ÑÑ ÑÐ°Ð·Ð´ÐµÐ»Ð°Ñ Ð´Ð»Ñ Ð²ÑÐ²Ð¾Ð´Ð°, ÐºÐ°Ðº ÑÐ¿ÑÐ°Ð²Ð¾ÑÐ½Ð¾Ð¹ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸\n        keyword: '',\n        brief: {\n            orders : 0,\n            preOrders: 0,\n            reclamations: 0,\n            archived: 0,\n        }\n    }\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'searchResult': \n        case 'managerFilter': \n            return {...state, [action.type]: action.payload };\n\n        case 'resetFilters': \n            return {...state, searchKeyword: '', managerFilter: 0, search: { ...state.search, keyword: '' }}\n\n\n        case 'search.brief': \n            return {...state, search: {\n                ...state.search,\n                brief: action.payload\n            }}\n        case 'search.keyword':\n            return {...state, search: {\n                ...state.search,\n                keyword: action.payload\n            }  }\n\n\n        default: \n            return {...state}\n    }\n}","import gql from 'graphql-tag'; \n\n// ÐÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð·Ð°ÐºÐ°Ð·Ñ Ð½Ð°ÑÐ¾Ð´ÑÑÐ¸ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð² ÐÑÐµÐ·Ð´Ð°ÐºÐ°Ð·Ð°Ñ Ð¸ Ð² Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ \n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [1,2]} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      NeedAttention\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems(order_by: {OrderItemID: asc}){\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n        LastName\n      }\n\n    }  \n  }\n`\n","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n    AccessLevelID\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\nimport sass from '../main.module.sass'\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ' - 0%'\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row, counter) => counter +1\n    },\n    {\n      Header: 'ÐÐ°Ð¸Ð¼.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length === 0) return <Link to={`/orders/${data.OrderID}`}><div>ÐÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ð¼Ð¾Ð³Ð¾</div></Link>\n\n        else return (<>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </>)\n      }\n      \n    },\n    {\n      Header: 'ÐÐ¾Ð»-Ð²Ð¾',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'ÐÑÐ³ÑÑÐ·ÐºÐ°',\n      accessor: (order) => \n      <> { order.ShippingDate && moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'ÐÐ¾Ð¼Ð¿Ð°Ð½Ð¸Ñ / Ð³Ð¾ÑÐ¾Ð´',\n      accessor: data => \n      <div className={sass.customerTableInfo}>\n        <div>{data.Entity}</div>\n        <div>{data.City}</div>\n      </div>\n    },\n    {\n      Header: 'Ð¡ÑÐµÑ- Ð¾Ð¿Ð»Ð°ÑÐ°',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'ÐÐ´Ð¶.',\n      accessor: data => <> {data.User?.FirstName[0] || ''} </>\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\nimport { Link } from 'react-router-dom'\n\nfunction statusHighlighting(order, showUnpaid){\n  if (showUnpaid && order.unpaid) return mainsass.unpaidOrder\n\n  // ÐÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð¾Ð² ÑÑÐµÐ±ÑÑÑÐ¸Ñ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ Ð¸Ð¼ÐµÑÑ Ð¿ÑÐ¸Ð¾ÑÐ¸ÑÐµÑ\n  if (order.NeedAttention?.split(',')[0] === 'true') return mainsass.needAttention\n  else if (order.AwaitingDispatch) return mainsass.awaitingDispatch\n  else return ''\n}\nexport default function Table({columns, data, className, showUnpaid }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return null;\n   return (\n     <>\n    <div className={`${mainsass.tableMain} ${className} ${mainsass.table}`} {...getTableProps()}>\n      <div className={mainsass.thead}>\n        {headerGroups.map((headerGroup, i) => (\n          <div className={mainsass.tr} key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <div  className={mainsass.th} {...column.getHeaderProps()}>{column.render('Header')}</div>\n            ))}\n          </div>\n        ))}\n      </div>\n      <div {...getTableBodyProps()} className={mainsass.tbody}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n\n          const { OrderID } = row.original\n          return (\n              <Link to={`/orders/${OrderID}`} className={`${statusHighlighting(row.original, showUnpaid)} ${mainsass.tableRow}`} {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <div  className={mainsass.td} {...cell.getCellProps()}>{cell.render('Cell')}</div>\n                })}\n              </Link>\n          )\n        })}\n      </div>\n    </div>\n    </>\n  )\n}","import { UilSearch } from '@iconscout/react-unicons'\nimport PropTypes from 'prop-types';\nimport sass from './table_search.module.sass'\n\n\nconst TableSearch = (props) => {\n  const {placeholder, onChange, defaultValue, disableAutoFocus} = props\n   return (\n    <div className={sass.table_search_wrapper}>\n      <UilSearch/>\n      \n      <input \n      type='text' \n      placeholder={placeholder} \n      onChange={onChange} \n      autoFocus={disableAutoFocus? false : true} \n      defaultValue={defaultValue}\n      />\n    </div>\n   )\n}\n\nTableSearch.propTypes = { \n  placeholder: PropTypes.string,\n  onChange:    PropTypes.func,\n  defaultValue:  PropTypes.string, \n  disableAutoFocus: PropTypes.bool,\n}\n\nexport default TableSearch","function compare(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // Ð¿ÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ Ð¿Ð¾Ð¸ÑÐº Ð¿Ð¾ ÐºÐ»ÑÑÐµÐ²Ð¾Ð¼Ñ ÑÐ»Ð¾Ð²Ñ\n    if (keyword !== '') {\n        result = array.filter( (order) => compare(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //Ð¿ÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ Ð¿Ð¾Ð¸ÑÐº Ð¿Ð¾ ÑÐ¸Ð»ÑÑÑ\n    if (managerFilter !== 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID === managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}\n\n\nexport const search_alg = (array, keyword) => {\n    return array.filter( (order) => compare( keyword, order.InvoiceNumber, order.Entity )) \n}","import sass from './search.module.sass'\nimport { FormControl, Select, MenuItem, Box } from '@mui/material';\nimport TableSearch from '../../..//components/TableSearch'\n\nimport { search_alg } from '../Search/filter';\n\nconst Search = ({ state, dispatch, users  }) => {\n    const searchHandler = (e) => {\n\n        var arr = [];\n        var breifname;\n\n        if (state.selectedTab === 0){\n            arr = state.orders;\n            breifname = 'orders'\n        }\n        else if (state.selectedTab === 1) {\n            arr = state.preOrders;\n            breifname = 'preOrders'\n        }\n       \n\n        const adjacentSearch = search_alg(arr, e.target.value)\n       \n        dispatch({ \n            type: 'search.brief', payload: {\n                ...state.search.breif,\n                [breifname]: adjacentSearch.length\n            }\n        })\n\n        dispatch({ type: 'searchKeyword', payload: e.target.value }) \n        dispatch({ type: 'search.keyword', payload: e.target.value }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter !== 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>ÐÑÐ´Ð°ÑÐ° Ð¾Ð³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð° ÑÐ¸Ð»ÑÑÑÐ¾Ð¼</p>\n            </div>\n        ) \n    }\n\n    function briefOnClick(dispatch, brief){\n        dispatch({\n            type: 'selectedTab',\n            payload: brief.showonTab,\n        })\n    }\n\n    const briefSearch = () => ([\n        {\n            showonTab: 1,\n            data: state.search.brief.orders,\n            title: 'Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸' ,\n        },\n        {\n            showonTab: 0,\n            data: state.search.brief.preOrders,\n            title: 'Ð² Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ð°Ñ' ,\n        }\n    ].map( el => {\n        if (!state.search.keyword || !el.data) return null\n        if (el.showonTab === state.selectedTab) return null;\n\n        return ( <div \n            onClick={() => briefOnClick(dispatch, el) } \n            className={sass.adjacentSearchWrap }>\n                {el.data} {el.title} \n            </div> )\n        })\n    )\n\n    return (\n        <>\n        <Box sx={{ display: 'flex' }}>\n            <TableSearch placeholder=\"Ð¡ÑÐµÑ, ÐºÐ¾Ð½ÑÑÐ°Ð³ÐµÐ½Ñ\" onChange={searchHandler} defaultValue={state.searchKeyword}/>\n            {briefSearch()}\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl>\n                  <Select\n                  name    = \"managerFilter\"\n                  value    = {state.managerFilter}\n                  onChange = {managerHandler}\n                  >\n                      <MenuItem value={0}>ÐÑÐµ</MenuItem>\n                      { users.map( (user) => \n                      <MenuItem value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                      )}\n                  </Select>\n                </FormControl>\n            </div>)}\n        </Box>\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n    }\n  }\n\n`;","import { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\nimport Search from '../Search';\nimport { filter } from '../Search/filter'\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport { UilFileCheck} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\nimport mainsass from '../main.module.sass'\nimport { Button } from '@mui/material';\n\nconst PreOrders = ({ state, dispatch }) => {\n    const data = state.preOrders\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    // const onClickTransfer = (order) => {\n    //     data.splice(data.indexOf(order), 1)\n    //     dispatch({ type: 'preOrders', payload: data })\n\n    //     const res = mutationOrderStatus({ variables: { \n    //         OrderID: order.OrderID, \n    //         AcceptanceDate: new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"}) } \n    //     })\n    //     console.log(res);\n    // }\n\n    var newColumnList = [...columnsList];\n    const filtredData = filter(data, state.searchKeyword)\n    \n    // newColumnList.push({\n    //     Header: 'ÐÑÐ¸Ð½ÑÑÑ',\n    //     accessor: data => \n    //     <Button onClick={() => onClickTransfer(data)} variant='iconic'><UilFileCheck/></Button>\n    //     ,\n    //   })\n   \n    return(\n    <div className={`${mainsass.tableWrapper} ${sass.preOrdersTableWrapper}`}>\n        <Search state={state} dispatch={dispatch} />\n        {filtredData && <Table columns = {newColumnList} data = {filtredData} />}\n    </div>\n    )\n}\nexport default PreOrders","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ users, state, dispatch }) => {\n    const columns = useMemo(\n        () => columnsList, []\n    )\n    \n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n    })\n\n    const filtredData = filter(sortedData, state.search.keyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            {users && <Search state={state} dispatch={dispatch} users={ users.filter(e => [1,2].includes(e?.AccessLevelID)) }/>}\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\nimport Table from '../UniversalTable/TableMarkup'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport { Typography } from '@mui/material'\n\nconst styles = {\n  heading :{\n    display: 'flex',\n    flexDirection: 'row',\n    padding: '0 10px'\n  },\n  secondary: {\n    color: 'var(--lowContrast)',\n    fontSize: '.8rem',\n    padding: '0 8px',\n    textTransform: 'none'\n  },\n  table: {\n    borderTop: 'var(--border)'\n  }\n}\n\nconst Recently = ({ state }) => {\n\n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(b.AcceptanceDate) - new Date(a.AcceptanceDate);\n      });\n\n    const spreadData = spread(sortedData);\n\n    const columns = useMemo(() => columnsList, [] )\n\n   \n\n    function ifNothing(data){\n        if (data.length === 0) return <Typography style={styles.secondary}>Ð½Ð¸ÑÐµÐ³Ð¾ Ð½Ðµ Ð±ÑÐ»Ð¾ Ð´Ð¾Ð±Ð°Ð²Ð»ÐµÐ½Ð¾</Typography>\n    } \n\n    return(\n        <>\n            <Typography \n            style   = {styles.heading} \n            variant = \"subtitle1\" \n            m       = '10px 0'>\n            Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ {ifNothing(spreadData[0].objs)} \n            </Typography>\n\n            { spreadData[0].objs.length ? ( <>\n              <Table \n              columns = {columns} \n              data    = {spreadData[0].objs} \n              style   = {styles.table} />\n              </>): \n            null}\n\n\n            <Typography  \n            style={styles.heading} \n            variant=\"subtitle1\" \n            m='10px 0'>\n            ÐÑÐµÑÐ° {ifNothing(spreadData[1].objs)} \n            </Typography>\n\n            { spreadData[1].objs.length ? ( <>\n              <Table \n                columns = {columns} \n                data    = {spreadData[1].objs} \n                style   = {styles.table} />\n            </>): null}\n        </>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'ÐÑÐµÑÐ°',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.AcceptanceDate?.split('T')[0]\n\n        if (dateCreation === days[0].date) days[0].objs.push(order);\n        else if (dateCreation === days[1].date) days[1].objs.push(order);  \n    }\n\n    return days;\n};\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_SEARCH_ORDERS = gql`\n    query ($keyword: String!, $OrderStatus: Int!){\n    erp_Orders(\n      order_by: {ActualShippingDate: desc_nulls_last},\n      where: {\n      _or: [\n        { Entity: {_ilike: $keyword} }, \n        { InvoiceNumber: {_ilike: $keyword} },\n        { OrderItems: {_and: [{SerialStarts: {_lte: $keyword}}, {SerialEnds: {_gte: $keyword }}] } },\n\n        ],\n      OrderStatusID: {_eq: $OrderStatus}\n      }) {\n        ActualShippingDate\n        AwaitingDispatch\n        OrderID\n        Entity\n        InvoiceNumber\n        City\n        ShippingDate\n        PaidAmount\n        TotalAmount\n        CreatingDate\n        ManagerID\n        OrderItems {\n          Quantity\n          OrderItemID\n          Name\n        } \n        User {\n          FirstName\n        }\n    }\n  }\n`\n\n\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ALL_ORDERS_AMOUNT = gql`\nquery{\n  erp_Orders(\n    where: {OrderStatusID: {_eq: 3}},\n    order_by: {OrderID: desc},\n    limit: 1000,\n    ){\n\t\tOrderID\n    PaidAmount\n    TotalAmount\n  }\n}\n`\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_LATEST_ORDERS = gql`\nquery($limit: Int!, $OrderStatus: Int!){\n  erp_Orders(\n    order_by: {ActualShippingDate: desc_nulls_last}\n    where: { OrderStatusID: {_eq: $OrderStatus } } \n    limit: $limit\n    ){\n    ActualShippingDate\n    ShippingDate\n    AwaitingDispatch\n    OrderID\n    Entity\n    InvoiceNumber\n    City\n    PaidAmount\n    TotalAmount\n    CreatingDate\n    ManagerID\n    OrderItems {\n      Quantity\n      OrderItemID\n      Name\n    } \n    User {\n      FirstName\n    }\n  }\n}\n`","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_UNPAID_ORDERS = gql`\nquery MyQuery($unpaidIDs: [Int!], $OrderStatus: Int!) {\n    erp_Orders(where: { OrderStatusID: {_eq: $OrderStatus}, OrderID: {_in: $unpaidIDs } } ) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      ActualShippingDate\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n    }\n  }\n`","//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ALL_ORDERS_AMOUNT } from './queries/getAllOrdersAmount'\nimport { GET_ARCHIVED_LATEST_ORDERS } from './queries/getArchivedLatestOrders'\nimport { GET_ARCHIVED_UNPAID_ORDERS } from './queries/getArchivedUnpaidOrders'\n\nimport Table from '../UniversalTable/TableMarkup'\nimport sass from './archive.module.sass'\nimport { Typography } from '@mui/material/';\n\nconst PreviewTable = (props) => {\n  const { state, dispatch, columns } = props\n\n  const { data : latestOrders = [], loading: latestOrdersloading } = useQuery(GET_ARCHIVED_LATEST_ORDERS, { variables: {\n     limit: 15, \n     OrderStatus: state.reqOrderStatus\n    },\n    fetchPolicy: \"cache-and-network\"\n    });\n\n  const { loading } = useQuery(GET_ALL_ORDERS_AMOUNT, { onCompleted: (res) => {\n    dispatch({ type: 'unpaidIDs', payload: res.erp_Orders.filter(e => e.PaidAmount / e.TotalAmount < .999).map(e => e.OrderID)})\n  }})\n\n  const { data : unpaidOrders = [], loading: unpaidOrdersLoading } = useQuery(GET_ARCHIVED_UNPAID_ORDERS, { variables: {\n    unpaidIDs: state.unpaidIDs,\n    OrderStatus: state.reqOrderStatus\n  } })\n\n  const previewData = () => {\n    if (!unpaidOrders.erp_Orders || !latestOrders.erp_Orders) return []\n    return ([\n      ...unpaidOrders.erp_Orders.map(e => ({...e, unpaid: true})),\n      // Ð¿ÑÐ¾Ð²ÐµÑÑÐµÐ¼ ÐµÑÑÑ Ð»Ð¸ Ð² Ð¿Ð¾ÑÐ»ÐµÐ´Ð½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð°Ñ Ð½ÐµÐ¾Ð¿Ð»Ð°ÑÐµÐ½Ð½ÑÐ¹, ÐµÑÐ»Ð¸ ÐµÑÑÑ, ÑÐ¾ ÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð¸Ð· Ð¸Ñ Ð·Ð°ÐºÐ°Ð· Ð¸Ð· latestOrders\n      ...latestOrders.erp_Orders\n      .filter(e => !state.unpaidIDs.includes(e.OrderID))\n      .sort(function(a,b){\n        return new Date(b.ActualShippingDate) - new Date(a.ActualShippingDate);\n      })\n      ])\n  }\n\n  return (<>\n    <Typography color='textSecondary' variant=\"subtitle1\" m='10px 1rem'>\n      ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 15 Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½Ð½ÑÑ  \n    </Typography>\n\n      <Table columns = {columns} data = {previewData()} className={sass.archiveTable} showUnpaid/>\n  </>)\n}\nexport default PreviewTable","export default class OrderStatus {\n  static ordRegistration = 1 // Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ñ\n  static ordProduction = 2\n  static ordArchived = 3\n\n  static reclInbox = 10\n  static reclDecision = 11\n  static reclProduction = 12\n  static reclArchived = 13\n}","import { useMemo, useReducer } from 'react';\n\n//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ARCHIVED_SEARCH_ORDERS } from './queries/getArchivedSearchOrders'\n\n//ui\nimport sass from './archive.module.sass'\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\nimport { Typography } from '@mui/material/';\n\nimport PreviewTable from './PreviewTable';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport OS from '../../../utils/OrderStatus'\nimport moment from 'moment'\n\nimport TableSearch from '../../..//components/TableSearch'\nimport { Box } from '@mui/system';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n      case 'reqOrderStatus': \n      case 'searchKeyword': \n      case 'unpaidIDs': \n          return {...state, [action.type]: action.payload };\n      default: \n          return {...state}\n  }\n}\nconst Archive = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    //Ð·Ð°ÐºÐ°Ð·Ñ ÐºÐ¾ÑÐ¾ÑÑÐµ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½Ð¾, Ð½Ð¾ ÐµÑÐµ Ð½Ðµ Ð¾Ð¿Ð»Ð°ÑÐµÐ½Ñ\n    reqOrderStatus: OS.ordArchived,\n    unpaidIDs: [],\n    searchKeyword: '',\n  });\n\n  const handleChange = (event) => {\n    dispatch({ type: 'reqOrderStatus', payload: event.target.value })\n  };\n\n  const { data = [], error } = useQuery(GET_ARCHIVED_SEARCH_ORDERS, { variables: {\n    keyword: '%' + state.searchKeyword + '%',\n    OrderStatus: state.reqOrderStatus\n  }})\n\n  if (error) console.error(error);\n\n  var columns = useMemo(\n    () => [...columnsList], []\n  )\n  \n  columns[3] = {\n    Header: 'Ð¤Ð°ÐºÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ°',\n    accessor: order => \n    <> { order.ActualShippingDate && moment(order.ActualShippingDate).format('DD.MM.YY') }\n    </>\n  }\n\n  const searchHandler = (e) => {\n    setTimeout(() => {\n      dispatch({ type: 'searchKeyword', payload: e.target.value})\n    }, 400)\n  }\n\n  return(\n    <>\n      <TableSearch\n      placeholder='CÑÐµÑ, ÐºÐ¾Ð½ÑÑÐ°Ð³ÐµÐ½Ñ'\n      onChange={searchHandler}\n      />\n\n      <FormControl className={sass.filterFormControl}>\n        <InputLabel variant=\"filter\">ÐÑÐ±ÑÐ°ÑÑ ÑÐ¾Ð»ÑÐºÐ¾ </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={state.reqOrderStatus}\n          label=\"Age\"\n          className={sass.filterInputBase}\n          onChange={handleChange}\n        >\n          <MenuItem value={OS.ordArchived}>ÐÐ°ÐºÐ°Ð·Ñ</MenuItem>\n          <MenuItem value={OS.reclArchived}>Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ð¸</MenuItem>\n        </Select>\n      </FormControl>\n\n    <Box marginTop={6}>\n    {!state.searchKeyword && < PreviewTable \n          state    = {state} \n          dispatch = {dispatch} \n          columns  = {columns} \n          /> }\n\n      {state.searchKeyword &&  data.erp_Orders && <>\n          <Typography color='textSecondary' variant=\"subtitle1\" m='10px 1rem'>\n            Ð ÐµÐ·ÑÐ»ÑÑÐ°Ñ Ð¿Ð¾Ð¸ÑÐºÐ° Ð¿Ð¾ Ð°ÑÑÐ¸Ð²Ñ\n          </Typography>\n          <Table columns = {columns} data = {data.erp_Orders} className={sass.archiveTable}/>\n          {!data.erp_Orders.length && \n            <Typography color='textPrimary'  m={2} variant=\"subtitle2\">-> Ð½Ð¸ÑÐµÐ³Ð¾ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð¾</Typography>\n          }  \n      </>}\n    </Box>\n\n    </>\n  )\n}\nexport default Archive;","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\n\n// apollo\nimport { useSubscription, useQuery, useMutation } from '@apollo/client'\nimport { GetOrdersSubscription } from './queries/getOrders'\nimport { GET_USERS } from '../../hasura-queries/getUsers'\nimport { INSERT_ORDER } from './queries/MutationInsertOrder';\n\n// ui \nimport {Tabs, Tab, Box, Button} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { UilPlusCircle } from '@iconscout/react-unicons';\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport Archive from './Archive/';\n\nconst StyledTabs = styled((props) => <Tabs {...props} />)(\n  ({ theme }) => ({\n    background: 'var(--LI)',\n    minHeight: '10px',\n    '& .MuiTabs-indicator': {\n      display: 'none'\n    },\n  }),\n  );\n\nconst StyledTab = styled((props) => <Tab {...props} />)(\n    ({ theme }) => ({\n      textTransform: 'none',\n      fontWeight: 500,\n      fontSize: theme.typography.pxToRem(14),\n      borderRight: '1px solid transparent',\n      borderLeft: '1px solid transparent',\n      minHeight: '10px',\n      color: 'var(--lowContrast)',\n      '&.Mui-selected': {\n        boxShadow: '0 0 15px 0px var(--shadow-color)',\n        opacity: 1,\n        backgroundColor: 'var(--L0)',\n        color: 'var(--accent) !important',\n        borderRight: 'var(--border)',\n        borderLeft: 'var(--border)',\n      },\n      '&:first-of-type':{\n        borderLeft: 'none !important',\n      },\n      '&.Mui-selected:first-of-type': {\n        borderLeft: 'none !important',\n      }\n    }),\n  );\n\n\nconst OrderListLayout = (props) => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState( store.priorityTab, store.cachedOrders, store.cachedPreOrders ));\n    const { selectedTab } = state; \n\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n  \n        options.subscriptionData.data.erp_Orders.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n          });\n\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID === 1) preOrders.push(order)\n            else if (order.OrderStatus.ID === 2) orders.push(order)\n        })\n        store.setCachedOrders(orders)\n        store.setCachedPreOrders(preOrders)\n\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    \n    const { error, loading } = useSubscription(GetOrdersSubscription, { onSubscriptionData });\n    if (error) console.error(error)\n    \n    const { data: users = []} = useQuery(GET_USERS);\n\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n      'managerID':     store.user.UserID,\n      'orderStatusID': 1,\n    }})\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        dispatch({ type: 'resetFilters'})\n        store.setPriorutyTab(newValue)\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box mb='30px'>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n  \n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n  \n    const styles = {\n      adddtn: {\n        marginLeft: 'auto',\n        marginRight: '10px',\n        display: 'flex',\n        alignSelf: 'center',\n      }\n    }\n    return(\n        <>\n        <StyledTabs value={selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\">\n            <StyledTab label=\"ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ñ\" {...a11yProps(0)} />\n            <StyledTab label=\"ÐÑÐµÑÐµÐ´Ð¾ÑÑÑ\" {...a11yProps(1)} />\n            <StyledTab label=\"ÐÐµÐ´Ð°Ð²Ð½Ð¸Ðµ\"   {...a11yProps(2)} />\n            <StyledTab label='ÐÑÑÐ¸Ð²'      {...a11yProps(3)} />\n\n           <Box style={styles.adddtn}>\n            <Button onClick={createOrderHandler} variant='iconic'><UilPlusCircle /></Button>\n           </Box>\n        </StyledTabs>\n\n\n        <TabPanel value={selectedTab} index={0}>\n            <PreOrders state={state} dispatch={dispatch}/>\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={1} >\n            <Priority state={state} dispatch={dispatch} users={users.erp_Users} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={2}>\n            <Recently state={state} dispatch={dispatch} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={3}>\n            <Archive state={state} dispatch={dispatch} />\n        </TabPanel>\n\n      </>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    AwaitingDispatch\n    ActualShippingDate\n    AcceptanceDate\n    OrderID\n    ManagerID\n    OrderStatusID\n    City\n    ShippingDate\n    CreatingDate\n    Comment\n    Entity\n    InvoiceNumber\n    NeedAttention\n    OrderNumber\n    PaidAmount\n    TotalAmount\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems(order_by: {OrderItemID: asc}) {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialStarts\n      SerialEnds\n    }\n    CheckListUnits(order_by: {CheckListUnitID: desc}) {\n      CheckListUnitID\n      OrderID\n      IsComplited\n      Point\n    }\n    Docs {\n      Key\n      FileName\n    }\n    PaymentHistories(\n      where: {PaidAmount: {_neq: 0}}\n    ){\n      PaidAmount\n      Date\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;\n\n\nexport const UPDATE_ORDER_ITEM = gql`\nmutation($OrderItemID: Int!, $FullName: String!, $Name: String!, $Quantity: Int!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n    _set: {FullName: $FullName, Name: $Name, Quantity: $Quantity}) {\n    Name\n    FullName\n    OrderItemID\n    Quantity\n  }\n}\n\n`;\nexport const UPDATE_ORDER_ITEM_METADATA = gql`\nmutation($OrderItemID: Int!, $Fitter: String!, $SerialNumber: String!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n     _set: {Fitter: $Fitter, SerialNumber: $SerialNumber}\n  ){\n    OrderItemID\n  }\n}\n`","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu, MenuItem, TextField } from '@mui/material';\nimport { UilEllipsisV } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n  \nconst OrderItemActions = ({ editState, item, editItemHandler, deleteItemHandler, updateItem, setOIDialog }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    'serialNumber': item.SerialNumber,\n    'fitter': item.Fitter\n  });\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n\n    // if (item.SerialNumber !== state.serialNumber || item.Fitter !== state.fitter){\n    //   updateItem({ variables: {\n    //     'OrderItemID': item.OrderItemID,\n    //     'Fitter': state.fitter,\n    //     'SerialNumber': state.serialNumber.toString()\n    //   } })\n    // }\n  };\n    \n  return (\n  <div className='noprint'>\n    <Button sx={{\n      minWidth: '20px'\n    }} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size='small'>\n      <UilEllipsisV className={sass.moreVertIcon}/>\n    </Button>\n    <Menu\n      id       = \"simple-menu\"\n      anchorEl = {anchorEl}\n      keepMounted\n      open     = {Boolean(anchorEl)}\n      onClose  = {handleClose}\n    >\n      {/* <div className={sass.inputListItem} >\n        <TextField \n          type=\"number\"\n          label=\"Ð¡ÐµÑÐ¸Ð¹Ð½ÑÐ¹ Ð½Ð¾Ð¼ÐµÑ\" \n          multiline\n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'serialNumber': e.target.value\n          }))}\n          // defaultValue={state.serialNumber}\n          />\n      </div>\n\n      <div className={sass.inputListItem} >\n        <TextField \n          label=\"Ð¡Ð±Ð¾ÑÑÐ¸Ðº\"  \n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'fitter': e.target.value\n          }))}\n          defaultValue={state.fitter}\n        />\n      </div> */}\n\n\n      {editState && (\n        <div className={sass.actionsWrapper}>\n          <MenuItem onClick={ (e) => {\n              setOIDialog(true)\n              handleClose();\n              editItemHandler(e, item);\n          }}>Ð ÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°ÑÑ</MenuItem>\n\n          <MenuItem \n            className={sass.deleteButton}\n            onClick={ ()=> {\n              handleClose();\n              deleteItemHandler(item.OrderItemID);\n          }}>Ð£Ð´Ð°Ð»Ð¸ÑÑ</MenuItem>\n        </div>\n      )}\n\n    </Menu>\n  </div>\n  );\n}\n\nOrderItemActions.propTypes = { \n    editState: PropTypes.bool,\n    item:      PropTypes.object,\n    editItemHandler:  PropTypes.func, \n    deleteItemHandler: PropTypes.func,\n    updateItem: PropTypes.func\n}\n\nexport default OrderItemActions\n\n","import { useReducer, useEffect, useState } from 'react'\n\n//apollo \nimport { useMutation } from \"@apollo/client\"\nimport { \nDELETE_ORDER_ITEM, \nINSERT_ORDER_ITEM, \nUPDATE_ORDER_ITEM, \nUPDATE_ORDER_ITEM_METADATA \n} from \"./queries/MutationOrderItem\";\n\n// ui \nimport { Button, TextField, Box, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport sass from './sass/composition.module.sass'\nimport OrderItemActions from './OrderItemActions'\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n    id: null,\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                id: action.payload[0],\n                name: action.payload[1],\n                fullName: action.payload[2],\n                quantity: action.payload[3]\n            }\n        default: \n            return {...state}\n    }\n\n}\n\nconst OrderComposition = props => {\n    const { data, editState, refetch, orderID, OIDialog, setOIDialog } = props\n    const [ deleteOrderItemMutation ]         = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ]         = useMutation(INSERT_ORDER_ITEM);\n    const [ updateOrderItemMutation ]         = useMutation(UPDATE_ORDER_ITEM);\n    const [ updateOrderItemMetadataMutation ] = useMutation(UPDATE_ORDER_ITEM_METADATA);\n    const [state, dispatch ] = useReducer(reducer, initialState)\n    \n    const deleteItemHandler = (itemID) => {\n        deleteOrderItemMutation({ variables: { orderItemID: itemID} })\n        refetch()    \n    }\n    const editItemHandler = (e, item) => {\n        dispatch({ type: 'editItem', payload: [item.OrderItemID, item.Name, item.FullName, item.Quantity] })\n    }\n\n    const closeOIDialog = () => {\n      setOIDialog(false);\n    };\n\n    useEffect(() => {\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n    const insertOrderItem = () => {\n        closeOIDialog();\n        if (state.quantity === '' || state.name === '') return null\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const updateOrderItem = () => {\n      if (state.quantity === '' || state.name === '') return null\n      closeOIDialog();\n      updateOrderItemMutation({variables: { \n        OrderItemID: state.id,\n        Name: state.name, \n        Quantity: parseInt(state.quantity),\n        FullName: state.fullName, }}).then( () => { dispatch({ type: 'reset'}); refetch() })    \n  }\n  \n    return(<div className='Composition'>     \n        {data.map( (el, index) => \n        <div\n          key={el.OrderItemID}\n          className={sass.Unit} \n        >\n              <span className={sass.index}>{index+1}</span>\n              <Typography color='textPrimary' className={sass.name}> {el.Name} </Typography>\n              <span  className={sass.quantity}> {el.Quantity}</span>\n\n              {editState && \n              <OrderItemActions\n                  {...props}\n                  item={el}\n                  editItemHandler={editItemHandler}\n                  deleteItemHandler={deleteItemHandler}\n                  updateItem={updateOrderItemMetadataMutation}\n               />\n               }\n\n              <div className={sass.fullName}> { el.FullName }</div>\n\n        </div>\n        )}\n        \n      <Dialog maxWidth='sm' fullWidth={true} open={OIDialog} onClose={closeOIDialog}>\n        <DialogTitle>ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ñ</DialogTitle>\n        <DialogContent>\n        <Box className={sass.addOrderItem}>\n          <TextField\n            label=\"ÐÐ°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ\"\n            value={state.name}\n            variant='filled'\n            sx={{mb: '8px'}}\n            onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"ÐÐ¾Ð»Ð½Ð¾Ðµ Ð½Ð°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ\"\n            multiline\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.fullNameInput}\n            value={state.fullName}\n            onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"ÐÐ¾Ð»-Ð²Ð¾\"\n            type=\"number\"\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.quantityInput}\n            value={state.quantity}\n            onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n            />\n        </Box>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'start'}} >\n            {state.name && state.quantity && (!state.id \n            ? <Box><Button variant='contained' onClick={insertOrderItem}>ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ</Button> </Box>\n            : <Box><Button variant='contained' onClick={updateOrderItem}>ÐÐ·Ð¼ÐµÐ½Ð¸ÑÑ</Button></Box> )}\n              <Box  ><Button onClick={() => {\n                  closeOIDialog();\n                  dispatch({type: 'reset'});\n              }}>ÐÐ°ÐºÑÑÑÑ</Button></Box>\n        </DialogActions>\n      </Dialog>\n    </div>)\n}\n\nexport default OrderComposition","import  moment  from 'moment'\nimport \"./rightPanel.sass\";\nimport { Typography, Box } from '@mui/material/';\n\nimport { styled } from '@mui/material/styles';\n\nconst OrderInfoCard = (props) => {\n  const { heading, secondaryHeading } = props;\n  return (\n    <Box className=\"OrderInfoCard\" sx={{ color: 'text.primary' }}>\n    <div className='row'>\n      <div className='heading'>\n        {heading}\n      </div>\n      <div className='secondaryHeading noprint'>\n        {secondaryHeading}\n      </div>\n    </div>\n\n    <div className='body'>\n      {props.children}\n    </div>\n  </Box>\n  )\n}\nconst Pre = styled((props) => <Typography {...props} />)(\n  ({ theme }) => ({\n    color: theme.palette.text.secondary,\n    fontSize: '.7rem'\n  }),\n  );\n\nconst OrderMeta = (props) => {\n   const { data } = props;\n    \n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ' '\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n   \n    const paidVisualization = () => {\n      if (data.PaymentHistories.length === 0 || !data.PaidAmount || !data.TotalAmount) return null\n\n      return (\n        <OrderInfoCard className='noprint' heading=\"ÐÐ»Ð°ÑÐµÐ¶Ð¸\" secondaryHeading={`${data.TotalAmount} â½`}>\n           <table className='paidVisualization'>\n           <tbody>\n            {data.PaymentHistories.map(e => (\n                <tr key={e.Date}>\n                  <td>{(e.PaidAmount / data.TotalAmount * 100).toFixed(0)} % </td>\n                  <td>{moment(e.Date).format('DD.MM.YY')}</td>\n              </tr>\n            ))}\n          </tbody>\n          </table>\n        </OrderInfoCard>\n      )\n    }\n    \n    const aboutOrder = () => {\n      const columns = [\n        {\n          'heading': \"ÐÐµÐ½ÐµÐ´Ð¶ÐµÑ\",\n          'data': `${data.User?.FirstName} ${data.User?.LastName || 'undefined'}`, \n        },\n        {\n          'heading': \"Ð¡Ð¾Ð·Ð´Ð°Ð½\",\n          'data': moment(data.CreatingDate).format('DD.MM.YY'),\n        },\n        {\n          'heading': \"Ð Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸\",\n          'data': moment(data.AcceptanceDate).format('DD.MM.YY'), \n        },\n        {\n          'heading': \"Ð¤Ð°ÐºÑ. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°\",\n          'data': moment(data.ActualShippingDate).format('DD.MM.YY'), \n        }, \n        {\n          'heading': 'ÐÑÐ¾Ð±Ð»ÐµÐ¼ÐºÐ¸ Ñ',\n          'data': moment(data.NeedAttention?.split(',')[1] || null).format('DD.MM.YY hh:mm')\n        }\n      ]\n      return (\n        <OrderInfoCard heading=\"Ð Ð·Ð°ÐºÐ°Ð·Ðµ\">\n          <table><tbody>\n             {columns.map(el => {\n                if (!el.data || el.data === 'Invalid date') return null\n                return <tr key={`${el.heading} ${el.data}`}>\n                  <td>{el.heading}</td>\n                  <td>{el.data}</td>\n                </tr>\n                }\n              )}\n          </tbody></table>\n        </OrderInfoCard>\n      )\n    }\n  return (<>\n      <div className=\"wrap\">\n\n          <Box className='significantInfo' sx={{ color: 'text.primary' }}>\n            <div className='bold'>\n              <Pre>ÐÐ»Ð°Ð½. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°</Pre>\n              {data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY')}\n            </div>\n            <div className='bold'>\n              <Pre>ÐÐ¾Ð¼ÐµÑ Ð·Ð°ÐºÐ°Ð·Ð°</Pre>\n              {data.OrderNumber}\n            </div>\n            <div className='bold'>\n              <Pre>Ð¡ÑÐµÑ / Ð¾Ð¿Ð»Ð°ÑÐ°</Pre>\n              {\"â \"+ (data.InvoiceNumber || '')+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n            </div>\n          </Box>\n\n          <Box className='OrderComment'>\n              <Pre>ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹</Pre>\n              {data.Comment}\n          </Box>\n\n        {aboutOrder()}\n        {paidVisualization()}\n      </div>\n  </>)\n}\n\nexport default OrderMeta\n","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($OrderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $OrderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($OrderID: Int!, $AwaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { AwaitingDispatch: $AwaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;\nexport const UPDATE_NEED_ATTENTION = gql`\nmutation MyMutation($OrderID: Int!, $NeedAttention: String! ) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { NeedAttention: $NeedAttention }\n  ) {\n\t\tOrderID\n    NeedAttention\n  }\n}\n`\n\nexport const MOVE_ORDER_TO_ARCHIVE = gql`\n  mutation MyMutation($OrderID: Int!, $ActualShippingDate: timestamptz!, $OrderStatusID: Int!) {\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID}, \n      _set: {\n        OrderStatusID: $OrderStatusID,\n        AwaitingDispatch: false,\n        ActualShippingDate: $ActualShippingDate,\n        }){\n      OrderID\n      OrderStatusID\n    }\n  }\n`;\n\nexport const MOVE_ORDER_TO_PRIORITY = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_PAYMENT = gql`\n  mutation($PaidAmount: numeric!, $Date: timestamptz!, $OrderID: Int!) {\n    insert_erp_PaymentHistory_one(object: {PaidAmount: $PaidAmount, OrderID: $OrderID, Date: $Date}) {\n      ID\n      OrderID\n    }\n}\n`;","import { useEffect } from 'react';\nimport './EditRightInfoPanel.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\nimport { INSERT_PAYMENT } from '../queries/MutationPaymentHistory'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nimport { TextField, Autocomplete } from '@mui/material';\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'â½ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch, users }) => {  \n  \n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n    const [insertPayment] = useMutation(INSERT_PAYMENT)\n  \n    function saveChanges(){\n      console.log('doing mutation for order', orderID, fields)\n      updateOrderInfo({variables: {\n        OrderID: orderID,\n        fields,\n      }})\n\n\n      if (fields.PaidAmount) insertPayment({ variables: {\n          Date: new Date(),\n          OrderID: orderID,\n          PaidAmount: fields.PaidAmount\n        }})\n      \n      refetch()\n    }\n    useEffect(() => {\n        fields = {};\n        return () => {\n            saveChanges()\n        };\n    }, []);\n\n    function findSelectedManeger(users, managerID){\n      if (!users) return null\n      const index = users.indexOf(users.find(user => user.UserID === managerID))\n      return users[index]\n    }\n\n  return(\n    <form className=\"EditableInfo\">  \n      <div className=\"wrap\">\n       <TextField\n          label=\"ÐÐ»Ð°Ð½. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            if (e.target.value === 'Invalid date') e.target.value=null\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          InputProps={{\n            inputComponent: DateFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼ÐµÑ ÑÑÐµÑÐ°\"\n          type=\"number\"\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼ÐµÑ Ð·Ð°ÐºÐ°Ð·Ð°\"\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={users.filter( (user) => user.AccessLevelID != 3)}\n          getOptionLabel={(option) => `${option.FirstName} ${option.LastName}`}\n          renderInput={(params) => <TextField {...params} label=\"ÐÐµÐ½ÐµÐ´Ð¶ÐµÑ\"/>}\n          defaultValue={() => findSelectedManeger(users, data.ManagerID)}\n          onChange={(event, newValue) => {\n            fields['ManagerID'] = (newValue?.UserID || null)\n          }}\n        />\n\n         <TextField\n          label=\"ÐºÐ¾Ð½ÑÑÐ°Ð³ÐµÐ½Ñ\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"ÐÐ¾ÑÐ¾Ð´\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Ð¡ÑÐ¼Ð¼Ð° Ð·Ð°ÐºÐ°Ð·Ð°\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n          />\n        \n        <TextField\n          label=\"ÐÐ¿Ð»Ð°ÑÐµÐ½Ð¾\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹\"\n          multiline\n          InputProps={{\n            sx: {fontSize: '.9rem !important'}\n          }}\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n       </div>\n    </form>\n  )\n}\n\nexport default EditableInfo","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nexport default function ConfirmDialog(props) {\n  const { filename, open, handleClose, onConfirmF} = props\n  return (\n    <div>\n      <Dialog\n        open={open}\n        minWidth='xs'\n\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" sx={{\n          color: 'var(--lowContrast) !important',\n          'span': {\n            color: 'var(--highContrast) !important'\n          }\n        }}>\n            Ð£Ð´Ð°Ð»Ð¸ÑÑ <span>{filename}</span> ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>ÐÑÐ¼ÐµÐ½Ð¸ÑÑ</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Ð£Ð´Ð°Ð»Ð¸ÑÑ \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import axios from 'axios';\n\nexport default class S3Service {\n    \n    static async uploadFile(acceptedFiles, OrderID){\n\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/s3`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              \"orderid\": OrderID\n            }\n          });\n        return res\n    }\n\n    // static async downloadFile(file){\n    //     return await axios.get(`${process.env.REACT_APP_API_URL}/s3/${file.Key}`)\n    // }\n\n    static  async deleteFile(key, deleteFileMutation){\n        const res = await axios.delete(`${process.env.REACT_APP_API_URL}/s3/${key}`);\n\n        if (res.status !== 200) return 'server error during delete file'\n\n        return await deleteFileMutation({variables: {\n            'key': key,\n        }})\n    }\n\n}","import { useState, useEffect } from 'react';\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from '../queries/MutationOrderDocs';\n\nimport './docs.sass'\n\nimport ConfirmDialog from './ConfirmDialog';\nimport S3Service from '../../../services/S3Service';\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length === 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n    useEffect(() => {\n        setOpen(false)\n    }, [editState]);\n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        await S3Service.deleteFile(fileOnDelete.Key, deleteFileMutation)\n        refetch()\n    }\n\n    const attachedFiles = data.map(\n        file => {\n            // delite file\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n             // opne file\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    rel=\"noreferrer\"\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n            <div className='filesContainer'>\n                {attachedFiles}\n                \n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n\n                <ConfirmDialog \n                filename={fileOnDelete?.FileName} \n                open={open}  \n                handleClose={handleClose}\n                onConfirmF={deleteFile}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_COMMENT = gql`\nmutation($OrderID: Int!, $Text: String!, $UserID: Int!) {\n  insert_erp_Comments_one(\n    object: {OrderID: $OrderID, Text: $Text, UserID: $UserID}) \n    {\n    CommentID\n    OrderID\n    Text\n    Timestamp\n    UserID\n  }\n}\n`;\n\nexport const DELETE_ORDER_COMMENT = gql`\n mutation($CommentID: Int!) {\n  delete_erp_Comments_by_pk(CommentID: $CommentID) {\n    CommentID\n  }\n}\n`;\n\nexport const UPDATE_ORDER_COMMENT = gql`\nmutation($CommentID: Int!, $Text: String!) {\n  update_erp_Comments_by_pk(\n    pk_columns: {CommentID: $CommentID},\n    _set: {Text: $Text}) \n    {\n    OrderID\n    Text\n    Timestamp\n    UserID\n    CommentID\n  }\n  }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_NOTIFICATION = gql`\nmutation($CommentID: Int!, $MentionedUser: Int!, $OrderID: Int!){\n  insert_erp_Notifications(objects: \n    { CommentID: $CommentID, MentionedUser: $MentionedUser, OrderID: $OrderID }\n    ){\n    returning {\n      MentionedUser\n      ID\n    }\n  }\n}\n`;\n\n\n","import gql from 'graphql-tag'\n\nexport const SUBSCRIBTION_ORDER_COMMENT = gql`\n  subscription MySubscritp($OrderID: Int!) {\n    erp_Comments(where: {OrderID: {_eq: $OrderID}}, order_by: {CommentID: desc}) {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n  }\n`\n","import sass from './index.module.sass'\nimport moment from 'moment'\n\nconst Comment = (props) => {\n  const { data, userID, updateComment, deleteComment, nowEditing, setNowEditing } = props\n\n  function sender(){\n    return `${data.User.FirstName} ${data.User.LastName}`\n  }\n  \n  function actions(){\n    if (userID === data.User.UserID && nowEditing?.CommentID !== data.CommentID ) return (\n        <div onClick={()=> deleteComment(data.CommentID)}>Ð£Ð´Ð°Ð»Ð¸ÑÑ</div>\n    )\n  }\n  function timestamp(){\n    const date = moment(data.Timestamp)\n    return date.format('MMM D') +' at '+ date.format('hh:mm')\n  }\n\n  function getCommentContent(){\n    if (userID === data.User.UserID) return <div \n    contentEditable = \"true\"\n    key             = {data.CommentID}\n    className       = {sass.commentContent}\n    suppressContentEditableWarning = \"true\"\n    onBlur={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n    }}\n    onMouseLeave={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n      setNowEditing(null)\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text}}>\n    </div>\n\n    else return <div \n    onClick={(e) => {\n      // ÐµÑÐ»Ð¸ ÐºÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ ÑÐµÐº-Ð»Ð¸ÑÑ Ð²ÑÐ¿Ð¾Ð»Ð½ÑÐµÐ¼ Ð¼ÑÑÐ°ÑÐ¸Ñ Ð½Ð° Ð¾Ð±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ðµ ÑÐ¾ÑÑÐ¾ÑÐ½Ð¸Ñ\n      if (e.currentTarget.innerHTML.toString().includes(sass.checklistUnit, 0)){\n        updateComment(data.CommentID, e.currentTarget.innerHTML)\n      }\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text }} \n    className={sass.commentContent}>\n    </div>\n\n  }\n\n  return (\n    <div className={sass.commentUnit}>\n\n      <div className={sass.commentHeader}>\n        <div className={sass.sender}> {sender()} </div>\n        <div className={sass.actions}>{actions()}</div>\n        <div className={sass.time}> {timestamp()} </div>\n      </div>\n      {getCommentContent()}\n\n    </div>\n  )\n}\nexport default Comment ","import gql from 'graphql-tag'\n\nexport const GET_ALL_USERS = gql`\nquery MyQuery {\n  erp_Users {\n    FirstName\n    LastName\n    UserID\n  }\n}\n\n`\n","import { Menu, MenuItem } from '@mui/material/';\nimport sass from './index.module.sass'\n\nconst Ð¡ommandsPopover = props => {\n  const {anchorEl, open, handleClose, setAnchorULP, inputRef} = props\n\n  function insertTodoinDOM (){\n    const root = document.getElementById('Comments_InputForm')\n    const elem = document.createElement('div')\n    elem.classList.add(sass.checklistUnit)\n    root.appendChild(elem)\n  }\n\n  function mentionHandler(){\n    handleClose();\n    setAnchorULP(inputRef.current)\n  }\n  return (\n    <Menu\n        id=\"Comments__commandMenu\"\n        aria-labelledby=\"Comments_InputForm\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => {\n          handleClose();\n          insertTodoinDOM();\n        }}>Ð§ÐµÐºÐ»Ð¸ÑÑ</MenuItem>\n        <MenuItem onClick={mentionHandler}>Ð£Ð¿Ð¾Ð¼ÑÐ½ÑÑÑ</MenuItem>\n    </Menu>\n  )\n}\n\nexport default Ð¡ommandsPopover\n","import { Menu, MenuItem } from '@mui/material/';\nimport sass from './index.module.sass'\nimport placeCaretAtEnd from '../../../utils/placeCaretAtEnd'\n\n\nconst UserListPopover = props => {\n  const { anchorEl, open, handleClose, users, inputRef } = props;\n\n  const onClick = (e) => {\n    handleClose();\n    const userID = e.target.getAttribute('userid')\n    const user = users.find(e => e.UserID == userID)\n    const inputform = document.getElementById('Comments_InputForm')\n    const elem = document.createElement('span')\n    inputRef.current.innerText = inputRef.current.innerText.slice(0, -1)\n\n    elem.innerHTML= '@' + [user.FirstName, user.LastName].join(' ') + ', '\n    elem.classList.add(sass.mentionedUserHiglight)\n    elem.dataset.mentionedUser = user.UserID\n    elem.contentEditable = 'false'\n    inputform.appendChild(elem)\n\n    placeCaretAtEnd(inputform)\n\n    const space = document.createElement('span')\n    inputform.appendChild(space)\n  }\n\n  return (\n    <Menu\n    id=\"Comments__userListMenu\"\n    aria-labelledby=\"Comments_InputForm\"\n    anchorEl={anchorEl}\n    open={open}\n    onClose={handleClose}\n  >\n  \n    { users && users.map( (user) => (\n      <MenuItem \n      sx      = {{\n        padding: '4px 10px',\n      }}\n      userid  = {user.UserID} \n      key     = {user.UserID} \n      onClick = {onClick}>\n        {user.FirstName} {user.LastName}\n      </MenuItem>\n    ))}\n \n  </Menu>\n  )\n}\nexport default UserListPopover","export default function placeCaretAtEnd(el) {\n  el.focus();\n  if (typeof window.getSelection != \"undefined\"\n          && typeof document.createRange != \"undefined\") {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n  } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n  }\n}","import { useState } from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../queries/GetAllUsers';\n\n//ui\nimport { Box } from '@mui/material/';\nimport { UilMessage } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n\n// components\nimport Ð¡ommandsPopover from './Ð¡ommandsPopover'\nimport UserListPopover from './UserListPopover';\n\nconst InputForm = props => {\n  const { insertComment, inputRef } = props\n\n  const { data: users = [] } = useQuery(GET_ALL_USERS)\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  // User List Popover\n  const [anchorULP, setAnchorULP] = useState(null)\n\n  function inputHandler(e){\n    if (e.target.innerText.trim() === '/'){\n      setAnchorEl(e.target)\n      e.target.innerHTML = ''\n    }\n    if (e.target.innerText.trim() === '@'){\n      setAnchorULP(e.target)\n    }\n  }\n\n  function keyPressHandler(e){\n    if ((e.ctrlKey || e.metaKey) && (e.keyCode === 13 || e.keyCode === 10)) {\n      insertComment()\n    }\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleCloseUserListPopover = () => {\n    setAnchorULP(null)\n  }\n\n  return (\n    <div className={`${sass.commentInputForm} noprint`}>\n      \n      <Ð¡ommandsPopover \n      setAnchorULP = {setAnchorULP} \n      anchorEl     = {anchorEl} \n      open         = {Boolean(anchorEl)} \n      handleClose  = {handleClose}\n      inputRef     = {inputRef} />\n      <UserListPopover \n      anchorEl    = {anchorULP} \n      open        = {Boolean(anchorULP)} \n      handleClose = {handleCloseUserListPopover}\n      users       = {users.erp_Users}\n      inputRef    = {inputRef} />\n\n      <Box id=\"Comments_InputForm\"\n        aria-controls=\"Comments__commandMenu\"\n        aria-haspopup=\"true\"\n        contentEditable='true'\n        ref={inputRef}\n        sx={{ minHeight: 20, padding: '10px 5px'}}\n        data-ph=\"ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹ Ð¸Ð»Ð¸ ' / ' Ð´Ð»Ñ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ\"\n        suppressContentEditableWarning={true}\n        onInput={inputHandler}\n        onKeyUp={keyPressHandler}\n        >\n      </Box>\n    \n      <div onClick={insertComment} className={sass.saveButton}><UilMessage/></div>\n    </div>\n  )\n}\nexport default InputForm","import { useState, useRef, useEffect } from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { \n  INSERT_ORDER_COMMENT,\n  UPDATE_ORDER_COMMENT,\n  DELETE_ORDER_COMMENT \n} from '../queries/MutationOrderCommnets'\nimport { INSERT_NOTIFICATION } from '../queries/MutationNotification';\nimport { SUBSCRIBTION_ORDER_COMMENT } from '../queries/SubscriptionComments'\nimport sass from './index.module.sass'\n\nimport Comment from './Comment'\nimport InputForm from './InputForm';\nimport { Typography } from '@mui/material';\n\nconst CommentsList = (props) => {\n  const { orderID, user } = props\n  const [ insertOrderCommentMutation ] = useMutation(INSERT_ORDER_COMMENT);\n  const [ updateOrderCommentMutation ] = useMutation(UPDATE_ORDER_COMMENT);\n  const [ deleteOrderCommentMutation ] = useMutation(DELETE_ORDER_COMMENT);\n  const [ insertNotificationMutation ] = useMutation(INSERT_NOTIFICATION);\n\n  var   inputRef = useRef();\n  const [nowEditing, setNowEditing] = useState();\n  \n  const { data: comments = [], loading } = useSubscription(SUBSCRIBTION_ORDER_COMMENT, { variables: { OrderID: orderID }});\n\n  function insertComment(){\n    const text = inputRef.current.innerHTML\n    if (!text) return null\n    \n    const root = document.getElementById('Comments_InputForm')\n    const mentioned = root.querySelectorAll(`.${sass.mentionedUserHiglight}`)\n    insertOrderCommentMutation({ variables: {\n      OrderID: orderID,\n      UserID: user.UserID,\n      Text: text\n      }\n    }).then((res) => {\n      const { CommentID, OrderID } = res.data.insert_erp_Comments_one\n        mentioned.forEach( el => {\n          const MentionedUser = el.dataset.mentionedUser\n          insertNotificationMutation({ variables: {\n            CommentID, OrderID, MentionedUser\n          }})\n    \n        })\n      }\n    )\n    inputRef.current.innerText = ''\n  }\n\n  function updateComment(id, newText){\n    updateOrderCommentMutation({ variables: {\n      CommentID: id,\n      Text: newText,\n    }})\n  }\n\n  function deleteComment(id){\n    deleteOrderCommentMutation({ variables: {\n      CommentID: id\n    }\n  })\n  }\n  \n  function switchTodo(e) {\n    e.target.classList.toggle(sass.checklistUnit_complited)\n  }\n\n  useEffect(() => {\n    const els = [...document.querySelectorAll(`div.${sass.commentUnit} div.${sass.checklistUnit}`)]\n    els.forEach( el => {\n      el.addEventListener('click', switchTodo, false);\n    }, {once : true})\n    return () => {\n      els.forEach( el => {\n        el.removeEventListener('click', switchTodo, false);\n      })\n    }\n  }, [comments])\n\n  const line = comments?.erp_Comments?.length ? sass.commentListThread : ''\n  \n  return(\n    <div className={`${sass.commentsListWrapper} ${line}`}>\n      <InputForm \n      insertComment={insertComment} \n      inputRef={inputRef} \n      />\n\n     {!loading ?\n      comments?.erp_Comments?.map( (comment) => <Comment \n        data={comment} \n        key={comment.CommentID}\n        userID={user.UserID}\n        deleteComment={deleteComment}\n        updateComment={updateComment}\n        nowEditing={nowEditing}\n        setNowEditing={setNowEditing}\n      />): (\n        <Typography m=\"10px\" variant='subtitle2'>Ð·Ð°Ð³ÑÑÐ·ÐºÐ°..</Typography>\n      )}\n    </div>\n  )\n}\n\nexport default CommentsList","export default class UserStatus {\n  static general    = 1 \n  static management = 2\n  static bookkeeping = 4\n  static manufacture = 3\n}","import {gql} from 'graphql-tag'; \n\nexport const DELETE_ORDER = gql`\nmutation MyMutation($OrderID: Int!) {\n  delete_erp_Orders_by_pk(OrderID: $OrderID) {\n    OrderID\n  }\n}\n`;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilArchive,\n } from '@iconscout/react-unicons'\n\nexport default function TransferOrderConfirmDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (<>\n\n  <MenuItem onClick={handleClickOpen}>\n    <ListItemIcon>\n      <UilArchive/>\n    </ListItemIcon>\n    <ListItemText>\n          ÐÑÐ³ÑÑÐ¶ÐµÐ½\n    </ListItemText>\n  </MenuItem>\n\n\n    <Dialog\n      open={open}\n      maxWidth='xs'\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        ÐÐµÑÐµÐ½ÐµÑÑÐ¸ Ð² Ð°ÑÑÐ¸Ð²?\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          ÐÐ°ÐºÐ°Ð· ÑÐ´Ð°Ð»Ð¸ÑÑÑ Ð¸Ð· Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸, Ð½Ð¾ ÐµÐ³Ð¾ Ð² Ð»ÑÐ±Ð¾Ðµ Ð²ÑÐµÐ¼Ñ Ð¼Ð¾Ð¶Ð½Ð¾ Ð±ÑÐ´ÐµÑ Ð½Ð°Ð¹ÑÐ¸ Ð² Ð°ÑÑÐ¸Ð²Ðµ Ð¿Ð¾ Ð½Ð¾Ð¼ÐµÑÑ ÑÑÐµÑÐ°, ÑÑÐ»Ð¸ÑÑ, Ð¼Ð°ÑÐºÐ¸ÑÐ¾Ð²ÐºÐµ Ð¿ÑÐ¸Ð²Ð¾Ð´Ð°.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color='info' onClick={handleClose} >ÐÑÐ¼ÐµÐ½Ð¸ÑÑ</Button>\n        <Button color='secondary' onClick={()=> {\n          handleClose()\n          props.transferOrderTo()\n        }}>\n          ÐÐµÑÐµÐ½ÐµÑÑÐ¸ \n        </Button>\n      </DialogActions>\n    </Dialog>\n\n\n  </>);\n}","import TransferOrderConfirmDialog from '../Dialogs/TransferOrderConfirmDialog'\nimport OS from '../../../../utils/OrderStatus';\n\nconst OrderActions = (props) => {\n  const { order, transferOrderTo} = props\n\n  if ( [OS.ordProduction].includes(order.OrderStatusID) ) return (\n    <TransferOrderConfirmDialog transferOrderTo={() => transferOrderTo(3) }/>  \n  )\n\n  return null\n}\nexport default OrderActions","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilTrashAlt, \n  UilFileCheck,\n } from '@iconscout/react-unicons'\n\nimport OS from '../../../../utils/OrderStatus';\n\n\nconst PreOrderActions = (props) => {\n  const { order, transferOrderToPriority, mutationDeleteOrderHandler} = props\n\n  if ( [OS.ordRegistration].includes(order.OrderStatusID)) return (\n    <div>\n        <MenuItem onClick={transferOrderToPriority}>\n        <ListItemIcon>\n          <UilFileCheck/> \n        </ListItemIcon>\n        <ListItemText >\n            Ð Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ\n        </ListItemText>\n      </MenuItem>\n      <MenuItem sx={{ color: 'var(--danger)', 'svg': {\n        color: 'var(--danger)'\n        }}}\n        onClick={mutationDeleteOrderHandler}\n        >\n        <ListItemIcon>\n          <UilTrashAlt/>\n        </ListItemIcon>\n        <ListItemText>Ð£Ð´Ð°Ð»Ð¸ÑÑ Ð¿ÑÐµÐ´Ð°Ð·ÐºÐ°Ð·</ListItemText>\n      </MenuItem>\n    </div>\n  )\n  return null\n}\nexport default PreOrderActions","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilExclamationTriangle, \n  UilClock,\n } from '@iconscout/react-unicons'\nimport OS from '../../../../utils/OrderStatus';\n\nconst OrderStatusesActions = (props) => {\n  const { order, needAttentionHandler, awaitingDispatchHandler} = props\n\n  const needAttention = ( order.NeedAttention?.split(',')[0] === 'true' )\n\n  if ( [OS.ordProduction, OS.reclInbox, OS.reclDecision, OS.reclProduction].includes(order.OrderStatusID) ) return (\n    <div>\n      <MenuItem \n        className={ order.AwaitingDispatch? 'awaitingDispatch': ''}\n        onClick={awaitingDispatchHandler}>\n        <ListItemIcon>\n          <UilClock/>\n        </ListItemIcon>\n        <ListItemText>ÐÐ¶Ð¸Ð´Ð°ÐµÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ¸</ListItemText>\n      </MenuItem>\n      \n      <MenuItem \n        className={ needAttention ? 'needAttention': ''}\n        onClick={needAttentionHandler}>\n        <ListItemIcon>\n          <UilExclamationTriangle/>\n        </ListItemIcon>\n        <ListItemText>Ð¢ÑÐµÐ±ÑÐµÑ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ</ListItemText>\n      </MenuItem>\n    </div>\n  )\n  return null\n}\nexport default OrderStatusesActions","import { MenuItem, ListItemIcon, ListItemText } from '@mui/material/';\n\nimport { UilTrashAlt } from '@iconscout/react-unicons'\n\nimport TransferOrderConfirmDialog from '../Dialogs/TransferOrderConfirmDialog';\nimport OS from '../../../../utils/OrderStatus';\n\nconst ReclamationActions = (props) => {\n  const { order, transferOrderToArchive, mutationDeleteOrderHandler } = props\n  const ifInbox = () => {\n    if (order.OrderStatusID === OS.reclInbox) return true\n  }\n\n  // const ifDecision = () => {\n  //   if (order.OrderStatusID === OS.reclDecision) return true\n  // }\n\n  const ifInproduction = () => {\n    if (order.OrderStatusID === OS.reclProduction) return true\n  }\n\n return (<>\n  {ifInproduction() && \n        <TransferOrderConfirmDialog transferOrderTo={() => transferOrderToArchive(13)}/>  \n  }\n  {ifInbox() && \n      <MenuItem sx={{ color: 'var(--danger)', 'svg': {\n        color: 'var(--danger)'\n      }}}\n      onClick={mutationDeleteOrderHandler}\n      >\n      <ListItemIcon>\n        <UilTrashAlt/>\n      </ListItemIcon>\n      <ListItemText >Ð£Ð´Ð°Ð»Ð¸ÑÑ</ListItemText>\n      </MenuItem>\n    }\n\n </>)\n}\nexport default ReclamationActions","import { useHistory } from \"react-router-dom\";\nimport { notif } from \"../../../utils/notification\";\n\nimport {\n  Menu\n} from '@mui/material/';\n\nimport { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\n\n//apollo\nimport { useMutation } from \"@apollo/client\"\nimport { \n  UPDATE_AWAITING_DISPATCH,\n  UPDATE_NEED_ATTENTION,\n  MOVE_ORDER_TO_ARCHIVE,\n  MOVE_ORDER_TO_PRIORITY\n} from '../queries/MutationOrderInfo'\nimport { DELETE_ORDER } from '../queries/MutationDeleteOrder';\n\nimport OrderActions from \"./Actions/OrderActions\";\nimport PreOrderActions from \"./Actions/PreOrderActions\";\nimport OrderStatusesActions from \"./Actions/OrderStatusesActions\";\n\nimport ReclamationActions from \"./Actions/ReclamationActions\";\n\nconst OrderActionsMenu = props => {\n  const OrderID = props.order.OrderID \n  const { OAMenu, setOAMenu, OAMenuRef, order, refetch} = props\n\n  const [mutationAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n  const [mutationNeedAttention] = useMutation(UPDATE_NEED_ATTENTION);\n  const [mutationMoveOrderToArchive] = useMutation(MOVE_ORDER_TO_ARCHIVE);\n  const [mutationMoveOrderToPriority] = useMutation(MOVE_ORDER_TO_PRIORITY);\n  const [mutationDeleteOrder] = useMutation(DELETE_ORDER);\n\n  const history = useHistory();\n\n  const baseurl = () => {\n    if ( [1,2].includes(order.OrderStatusID) ) return '/'\n    if ( [10,11,12].includes(order.OrderStatusID) ) return '/reclamation'\n  }\n\n  // ÐÑÐ¸ ÑÑÐ°ÑÑÑÐµ \"ÑÑÐµÐ±ÑÐµÑ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ\" Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð° ÐºÑÐ°ÑÐ½ÑÐ¼ ÑÐ²ÐµÑÐ¾Ð¼ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸. \n  // Ð Ð»ÐµÐ²Ð¾Ð¼ Ð¼ÐµÐ½Ñ Ð² Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸ Ð¾ Ð·Ð°ÐºÐ°Ð·Ðµ ÑÐ¸ÐºÑÐ¸ÑÑÐµÑÑÑ  Ð´Ð°ÑÐ° Ð²ÐºÐ»ÑÑÐµÐ½Ð¸Ñ ÑÑÐ¾Ð³Ð¾ ÑÑÐ°ÑÑÑÐ°.  \n  // ÐÐµÐ»Ð°ÑÐµÐ»ÑÐ½Ð¾ ÑÑÐ¾Ð±Ñ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÑ ÑÐ½ÑÑÐ¸Ñ Ð±ÑÐ»Ð° ÑÐ¾Ð»ÑÐºÐ¾ Ñ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð½ÑÑ Ð°ÐºÐºÐ°ÑÐ½ÑÐ¾Ð² .  \n  // Ð­ÑÐ¾ Ð½ÐµÐ¾Ð±ÑÐ¾Ð´Ð¸Ð¼Ð¾ ÐºÐ¾Ð³Ð´Ð° Ð¿ÑÐ¸ Ð¾ÑÐºÑÑÑÐ¸Ð¸ Ð·Ð°ÐºÐ°Ð·Ð° Ð²ÑÑÑÐ½ÑÐµÑÑÑ Ð´ÐµÑÐ¸ÑÐ¸Ñ ÐºÐ¾Ð¼Ð¿Ð»ÐµÐºÑÑÑÑÐ¸Ñ Ð¸Ð»Ð¸ Ð¿Ð¾ Ð·Ð°ÐºÐ°Ð·Ñ ÑÑÐµÐ±ÑÑÑÑÑ ÑÑÐ¾ÑÐ½ÑÐµ ÑÑÐ¾ÑÐ½ÐµÐ½Ð¸Ñ Ð¾Ñ Ð·Ð°ÐºÐ°Ð·ÑÐ¸ÐºÐ° ÐºÐ°ÐºÐ¸Ðµ-Ð½Ð¸Ð±ÑÐ´Ñ.\n  function needAttentionHandler(){\n    const curDate = new Date().toISOString()\n    var payload = [];\n    if (!order.NeedAttention) payload = ['true', curDate, 'null']\n    else {\n      const nd = order.NeedAttention.split(',')\n      if (nd[0] === 'true') payload = ['false', nd[1], curDate]\n      if (nd[0] === 'false') payload = ['true', curDate, 'null']\n    }\n    \n    mutationNeedAttention({\n      variables: {\n        OrderID, \n        NeedAttention: payload.join(',')\n      },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            NeedAttention: payload.join(',')\n          }\n        }\n    })\n  }\n  // ÐÑÐ¸ ÑÑÐ°ÑÑÑÐµ \"Ð¾Ð¶Ð¸Ð´Ð°ÐµÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ¸\" Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ\n  //  Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·ÐµÐ»ÐµÐ½ÑÐ¼ ÑÐ²ÐµÑÐ¾Ð¼ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸, ÑÑÐ¾ Ð¾Ð·Ð½Ð°ÑÐ°ÐµÑ, ÑÑÐ¾ Ð·Ð°ÐºÐ°Ð· ÑÐ¶Ðµ ÑÐ¾Ð±ÑÐ°Ð½,\n  // Ð¸ Ð½Ðµ Ð¾ÑÐ³ÑÑÐ¶Ð°ÐµÑÑÑ Ð¿Ð¾ Ð±ÑÐ¼Ð°Ð¶Ð½ÑÐ¼ Ð¿ÑÐ¸ÑÐ¸Ð½Ð°Ð¼\n  function awaitingDispatchHandler(){\n    mutationAwaitingDispatch({\n      variables: {OrderID, AwaitingDispatch: !order.AwaitingDispatch },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            AwaitingDispatch: !order.AwaitingDispatch\n          }\n        }\n    })\n  }\n  // ÐÐµÑÐµÐºÐ¸Ð´ÑÐ²Ð°ÐµÑ Ð·Ð°ÐºÐ°Ð· Ð² Ð°ÑÑÐ¸Ð² (ÑÐ±Ð¸ÑÐ°ÐµÑ Ð¸Ð· Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸)\n  async function transferOrderToArchive(OrderStatusID){\n    mutationMoveOrderToArchive({ variables: { \n      OrderID,\n      ActualShippingDate: new Date(),\n      OrderStatusID\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderID){\n          history.push(baseurl())\n        }\n      }\n    )\n  }\n\n  // ÐÐµÑÐµÐºÐ¸Ð´ÑÐ²Ð°ÐµÑ Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð· Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ \n  async function transferOrderToPriority(){\n    const res = await mutationMoveOrderToPriority({ variables: { \n      OrderID,\n      AcceptanceDate: new Date(),\n     }})\n     if (res.data.update_erp_Orders_by_pk.OrderID){\n      notif('success', 'ÐÐ¾Ð±Ð°Ð²Ð»ÐµÐ½ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ');\n    }\n  }\n  \n  // Ð´Ð»Ñ ÑÐ´Ð°Ð»ÐµÐ½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð°\n  function mutationDeleteOrderHandler(){\n    mutationDeleteOrder({ variables: {\n      OrderID\n    }}).then( res => {\n      if (res.data.delete_erp_Orders_by_pk.OrderID){\n        history.push(baseurl())\n      }\n    })\n  }\n\n  const handleClose = (event) => {\n    setOAMenu(false);\n  };\n\n  return (\n    <Menu\n    open={OAMenu} \n    onClose={handleClose}\n    anchorEl={OAMenuRef.current}\n    >\n\n        <OrderStatusesActions\n        order                   = {order}\n        awaitingDispatchHandler = {awaitingDispatchHandler}\n        needAttentionHandler    = {needAttentionHandler}\n        />\n\n        <PreOrderActions \n        order                      = {order}\n        transferOrderToPriority    = {transferOrderToPriority}\n        mutationDeleteOrderHandler = {mutationDeleteOrderHandler}\n        />\n        <OrderActions \n        order           = {order}\n        transferOrderTo = {transferOrderToArchive}\n        />\n        <ReclamationActions\n        order = {order}\n        transferOrderToArchive ={transferOrderToArchive}\n        mutationDeleteOrderHandler ={mutationDeleteOrderHandler}\n        />\n  </Menu>\n  )\n}\nexport default OrderActionsMenu;","import { useState, useRef } from \"react\";\nimport { Typography, Button, Box } from '@mui/material'\nimport { UilPlus, UilLock, UilUnlock, UilEllipsisH } from '@iconscout/react-unicons';\n\nimport OS from \"../../utils/OrderStatus\";\nimport US from \"../../utils/UserStatus\";\n\n\nimport OrderActionsMenu from \"./OrderActions/OrderActionsMenu\";\n\nfunction orderStatus(data){\n  // add a note to the title if this is a pre-order\n  if (data.OrderStatusID === OS.ordRegistration) return ' | ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·';\n  if (data.OrderStatusID === OS.ordArchived) return ' | Ð Ð°ÑÑÐ¸Ð²Ðµ';\n  if ([ OS.reclInbox, OS.reclDecision , OS.reclProduction, OS.reclArchived ].includes(data.OrderStatusID)) return ' | Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ';\n}\n\nconst OrderHeader = (props) => {\n  const { data, editState, setEditState, setOIDialog, store, refetch } = props;\n\n    //OrderActions Dropdown menu\n    const [OAMenu, setOAMenu] = useState(false);\n    const OAMenuRef = useRef(null);\n\n      \n  return(\n    <div className=\"page-header\">\n        <Typography sx={{ fontWeight: 600, fontSize: '1rem'}}>\n            {data.Entity} __ {data.City} \n            <span className=\"preorderTitle\">{orderStatus(data)}</span>\n        </Typography>\n\n        {/* ÐÐ¾ÐºÐ°Ð·ÑÐ²Ð°ÑÑ ÐÐ½Ð¾Ð¿ÐºÐ¸ ÑÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð° ÑÐ¾Ð»ÑÐºÐ¾ Ð´Ð»Ñ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð½ÑÑ Ð³ÑÑÐ¿Ð¿ ÑÐ·ÐµÑÐ¾Ð² */}\n        <Box ml='auto' className='orderActions_box noprint'>\n          {editState && \n          <Button \n          variant = \"iconic\" \n          onClick = {() => setOIDialog(true)}>\n            <UilPlus/>\n          </Button>\n          }\n\n        {/* Hamburger menu. Didnt shown when order into archive */}\n        {![OS.ordArchived].includes(data.OrderStatusID)  &&\n          <Button \n          aria-haspopup = \"true\" \n          ref           = {OAMenuRef} \n          variant       = \"iconic\" \n          onClick       = {() => setOAMenu(true)}>\n              <UilEllipsisH/>\n          </Button>\n          }\n\n        </Box>\n        {/* locker */}\n        <Box ml='10px' className='orderActions_box noprint' >\n          {[ US.general, US.management , US.bookkeeping ].includes(store.user.AccessLevelID) && \n            <Button \n            variant = \"iconic\" \n            onClick = {() => setEditState(!editState)}>\n                {editState ? <UilUnlock/> : <UilLock/> }\n            </Button>\n            }\n        </Box>\n\n        <OrderActionsMenu\n          refetch   = {refetch}\n          order     = {data}\n          OAMenu    = {OAMenu} \n          setOAMenu = {setOAMenu}\n          OAMenuRef = {OAMenuRef}\n          />\n\n  </div>\n\n  \n  )\n}\n\nexport default OrderHeader;","import { UilCloudUpload } from '@iconscout/react-unicons'\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <div>\n             <UilCloudUpload className='inCloudconIcon'/>\n            </div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","import { useContext, useCallback, useState } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_USERS } from '../../hasura-queries/getUsers';\nimport { GET_ORDER_BY_ID } from './queries/GetOrderByID'\nimport { useQuery } from \"@apollo/client\";\n\n//components\nimport Composition from \"./Composition\";\nimport RightInfoPanel from \"./RightInfoPanel/\";\nimport EditRightInfoPanel from \"./RightInfoPanel/EditRightInfoPanel\";\nimport Docs from './Docs/Docs';\nimport CommentsList from \"./Comments/CommentsList\";\nimport OrderHeader from \"./OrderHeader\"\n\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport './sass/index.sass';\n\nimport S3Service from \"../../services/S3Service\";\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    // Add new Order Item Dialog\n    const [OIDialog, setOIDialog] = useState(false)\n\n\n    const orderID = useParams().id\n\n    const fileUploader = useCallback(async acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        const res = await S3Service.uploadFile(acceptedFiles, orderID);\n\n        if (res.status === 200){\n            refetch();\n        }\n        else {\n            console.log('S3 file upload error', res)\n            refetch();\n        };\n\n        setOnUploadFiles([])\n      }, [])\n\n    var { data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID} });\n    const { data: users = []} = useQuery(GET_USERS);\n    \n    const { getRootProps, isDragActive } = useDropzone({className: 'dropzone', onDrop: fileUploader });\n    \n    return(\n    <div> \n        {isFileOnDropzone(isDragActive)}\n        { data.erp_Orders && users.erp_Users ? (<>\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n            <div className='LeftSideContent'>\n\n                <OrderHeader\n                data = {data.erp_Orders[0]}\n                editState = {editState}\n                setEditState = {setEditState}\n                setOIDialog = {setOIDialog}\n                store = {store}\n                refetch = {refetch}\n                />\n\n                <Composition \n                data        = {data.erp_Orders[0].OrderItems} \n                editState   = {editState}\n                refetch     = {refetch}\n                OIDialog    = {OIDialog}\n                setOIDialog = {setOIDialog}\n                orderID     = {orderID} /> \n\n                <CommentsList \n                orderID = {orderID} \n                user    = {store.user} \n                data    = {data.erp_Orders[0].Comments}/> \n\n                <Docs \n                data      = {data.erp_Orders[0].Docs} \n                onUpload  = {onUploadFiles} \n                editState = {editState} \n                refetch   = {refetch} />\n\n            </div>\n\n            <div className=\"Info\">\n                { editState? <EditRightInfoPanel \n                data      = {data.erp_Orders[0]} \n                orderID   = {orderID} \n                refetch   = {refetch} \n                users     = {users.erp_Users} /> : (\n\n                <RightInfoPanel \n                data      = {data.erp_Orders[0]} \n                editState = {editState} \n                orderID   = {orderID} \n                />\n                )}\n            </div>\n            \n        </section> \n        </>): null }\n    </div>\n    )\n}\n\nexport default OrderLayout","const getItems = (count, offset = 0) =>\n    Array.from({ length: count }, (v, k) => k).map(k => ({\n        id: (k + offset).toString(),\n        content: `item ${k + offset}`\n    }));\n    \nexport const initialState ={\n  //ÐÑÐ¾Ð´ÑÑÐ¸Ðµ\n  inbox: [],\n  // ÐÑÐ¸Ð½ÑÑÐ¸Ðµ ÑÐµÑÐµÐ½Ð¸Ñ\n  decision: [],\n  //Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n  inproduction: []\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n      case 'inbox': \n      case 'decision': \n      case 'inproduction': \n          return {...state, [action.type]: action.payload };\n\n      case 'reset': \n          return initialState\n      default: \n          return {...state}\n  }\n}","import gql from 'graphql-tag'; \n\n// ÐÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð·Ð°ÐºÐ°Ð·Ñ Ð½Ð°ÑÐ¾Ð´ÑÑÐ¸ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð² ÐÑÐµÐ·Ð´Ð°ÐºÐ°Ð·Ð°Ñ Ð¸ Ð² Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ \n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const SUBSCRIPTION_RECLAMATION_ORDERS = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [10,11,12]} }) {\n      AwaitingDispatch\n      NeedAttention\n      OrderID\n      Entity\n      City\n      OrderStatusID\n      OrderItems(order_by: {OrderItemID: asc}){\n        OrderItemID\n        Name\n      }   \n    }  \n  }\n`\n\nexport const UPDATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $OrderStatusID: Int!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: $OrderStatusID,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;\n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link, useHistory } from 'react-router-dom'\nimport { useReducer } from 'react'\n\n\nimport sass from './index.module.sass'\nimport { Button, Typography, Box } from \"@mui/material\"\n\nimport { UilWrench, UilPlusCircle } from '@iconscout/react-unicons'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { reducer, initialState } from './reducer';\n//apollo\nimport { useSubscription, useMutation } from '@apollo/client'\nimport { \n  SUBSCRIPTION_RECLAMATION_ORDERS, \n  UPDATE_ORDER_STATUS,\n  INSERT_ORDER } from './queries';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return {result, movedObj: removed };\n};\n\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n\n    // change background colour if dragging\n    background: isDragging ? 'var(--accentLight)' : 'transparent',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\n\nconst Reclamation = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { inbox, decision, inproduction } = state;\n  const history = useHistory();\n\n\n  const getState = id => {\n    if (id === 'inbox') return inbox\n    if (id === 'decision') return decision\n    if (id === 'inproduction') return inproduction\n  };\n\n  const columns = [\n    {\n      columnName: 'ÐÑÐ¾Ð´ÑÑÐ¸Ðµ',\n      droppableId: 'inbox',\n      data: inbox,\n      orderStatusID: 10\n    },\n    {\n      columnName: 'ÐÑÐ¸Ð½ÑÑÐ¸Ðµ ÑÐµÑÐµÐ½Ð¸Ñ',\n      droppableId: 'decision',\n      data: decision,\n      orderStatusID: 11\n    },\n    {\n      columnName: 'Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ',\n      droppableId: 'inproduction',\n      data: inproduction,\n      orderStatusID: 12\n    }\n  ]\n\n  const [mutateOrderStatusID] = useMutation(UPDATE_ORDER_STATUS);\n  const [ insertOrder ] = useMutation(INSERT_ORDER, {variables: {\n    'orderStatusID': columns[0].orderStatusID,\n  }})\n\n  function insertOrderHandler (){\n    insertOrder().then( (res) => {\n        history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n    })\n  }\n\n  const onSubscriptionData = (options) => {\n    const data = options.subscriptionData.data.erp_Orders \n    // Ð´Ð»Ñ dnd Ð½ÐµÐ±ÑÐ¾Ð´Ð¸Ð¼Ð¾ ÑÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÑ id Ð² string\n    data.map( el => {\n      el.id = el.OrderID.toString()\n      return el\n    })\n    columns.forEach(col => {\n      dispatch({\n        type: col.droppableId,\n        payload: data.filter(order => order.OrderStatusID === col.orderStatusID)\n      })\n    })\n  }\n\n  useSubscription(SUBSCRIPTION_RECLAMATION_ORDERS, { onSubscriptionData})\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n        return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n        const items = reorder(\n            getState(source.droppableId),\n            source.index,\n            destination.index\n        );\n\n        dispatch({ type: source.droppableId, payload: items })\n    } else {\n      //Ð¾ÑÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ Ð¿ÑÐ¸ Ð¿ÐµÑÐµÐ¼ÐµÑÐ¸Ð½Ð¸Ð¸ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ° Ð² Ð´ÑÑÐ³Ð¾Ð¹ ÑÑÐ¾Ð»Ð±Ð¸Ðº\n        const {result, movedObj } = move(\n            getState(source.droppableId),\n            getState(destination.droppableId),\n            source,\n            destination\n        );\n        Object.entries(result).map( el => {\n          if (el[0] === el[0]) dispatch({ type: el[0], payload: el[1] })\n        } )\n        mutateOrderStatusID({\n          variables: {\n            OrderID: movedObj.OrderID, \n            OrderStatusID: columns.find(col => col.droppableId === destination.droppableId).orderStatusID\n          }\n        })\n    }\n};\n\n  function getOrderStatus(order){\n    if (order.NeedAttention && order.NeedAttention.split(',')[0] === 'true' ) return sass.needAttention\n    if (order.AwaitingDispatch) return sass.awaitingDispatch\n  }\n\n  function getOrderUnit(order){\n      if (order.OrderItems.length === 0) return <Link to={`/orders/${order.OrderID}`} className={sass.item} ><div>ÐÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ð¼Ð¾Ð³Ð¾</div></Link>\n\n      else return (\n      <Link to={`/orders/${order.OrderID}`} className={`${sass.item} ${getOrderStatus(order)}`}>\n        <div className={sass.items}>\n          {order.OrderItems.map(item => (\n            <div key={item.OrderItemID} className={sass.orderItem}>\n              {item.Name}\n            </div>\n          ))}\n        </div>\n        <div className={sass.customerInfo}>\n          <div>{order.Entity}</div>\n          <div>{order.City}</div>\n        </div>\n      </Link>)\n  }\n\n  return(\n    <div className={sass.reclatationLayout}>\n      \n      <div className='pageLayout__header'>\n        <UilWrench className='pageLayout__icon'/>\n        <div className=\"pageLayout__title\">Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ</div>\n\n        <div className='pageLayout__actions'>\n          <Button variant='iconic' onClick={insertOrderHandler}>\n            <UilPlusCircle/>\n          </Button>\n        </div>\n      </div>\n\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Box className={sass.columnWrapper}>\n\n        {columns.map( e => (<div key={e.columnName} className={sass.reclColumn}>\n          <Typography className={sass.heading}>{e.columnName}</Typography>\n          <Droppable droppableId={e.droppableId} >\n          {(provided, snapshot) => (\n              <div\n                  ref={provided.innerRef}\n                  className={sass.draggableWrapper}>\n                  {e.data.map((item, index) => (\n                      <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}>\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}   \n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  style={getItemStyle(\n                                      snapshot.isDragging,\n                                      provided.draggableProps.style\n                                  )}>\n                                    {getOrderUnit(item)}\n                              </div>\n                          )}\n                      </Draggable>\n                  ))}\n                  {provided.placeholder}\n              </div>\n          )}\n          </Droppable>\n        </div>))}\n        \n        </Box>\n      </DragDropContext>\n    </div>\n  )\n}\nexport default Reclamation","import { useEffect } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DARK_CLASS = \"dark\";\n\nexport function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n    else return 'light'\n}\n\nexport const SystemPreferTheme = (appTheme, setAppTheme) => {\n    // theme can will be dark, light or system (used for corrent displaying selected theme in preferences)\n    // mode can be only dark or light (used for material ui pallete)\n    const systemPrefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\"}, undefined);\n    var mode = appTheme\n\n    function changeTheme(newTheme){\n        var expires = new Date()\n        expires.setFullYear(expires.getFullYear()+1)\n        document.cookie = `theme=${newTheme}; expires=${expires}; path=/`\n        setAppTheme(newTheme)\n    }\n\n    useEffect(() => {\n      if (appTheme === 'dark') document.documentElement.classList.add(DARK_CLASS)\n      else if (appTheme === 'light') document.documentElement.classList.remove(DARK_CLASS)\n\n      else if (appTheme === 'system'){\n        if (systemPrefersDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n      };\n    }, [appTheme, systemPrefersDark]);\n\n    if (appTheme === 'system'){\n      if (systemPrefersDark) mode = 'dark'\n      else mode = 'light'\n    }\n    return {appTheme, mode, changeTheme}\n};\n","import { useContext } from 'react';\nimport { Context } from '../../';\nimport { useHistory } from 'react-router-dom';\n\nimport { SystemPreferTheme } from \"../../utils/SystemPreferTheme\"\n\nimport { Typography } from \"@mui/material\"\nimport { Box } from '@mui/system';\nimport Button from '@mui/material/Button';\n\nimport sass from './styles.module.sass'\n\nconst Settings = (props) => {\n    const {store} = useContext(Context);\n    const {changeTheme} = SystemPreferTheme(store.UItheme.state, store.UItheme.dispatch)\n    const history = useHistory()\n\n    async function logout(){\n        await store.logout(); \n        history.push('/login')\n    }\n\n    const themeVariants = [{\n        title: 'Ð¡Ð²ÐµÑÐ»Ð°Ñ',\n        value: 'light'\n    },\n    {\n        title: \"ÐÐ°Ðº Ð½Ð° ÑÑÑÐ¾Ð¹ÑÑÐ²Ðµ\",\n        value: 'system'\n    },\n    {\n        title: 'Ð¢ÐµÐ¼Ð½Ð°Ñ', \n        value: 'dark'\n    }]\n\n    const GridCard = (props) => (\n        <Box {...props} className={sass.gridCard}>\n            <Typography variant='h6'>{props.title}</Typography>\n            {props.children}\n        </Box>\n    )\n\n    return (\n        <div className={sass.grid}>\n        <GridCard title='ÐÐºÐºÐ°ÑÐ½Ñ'>\n            <div> {store.user.FirstName} {store.user.LastName}</div>\n            <div> Ð£ÑÐ¾Ð²ÐµÐ½Ñ Ð´Ð¾ÑÑÑÐ¿Ð°: {store.user.AccessLevelID}</div>\n            <div> Email: {store.user.Email}</div>\n            <Button variant='text' onClick={logout}>ÐÑÐ¹ÑÐ¸</Button>\n        </GridCard>\n\n        <GridCard title=\"ÐÑÐµÐ´Ð¿Ð¾ÑÑÐ¸ÑÐ°ÐµÐ¼Ð°Ñ ÑÐµÐ¼Ð°\">\n            <div className={sass.selectThemeWrapper}>\n            {themeVariants.map(each => <Button variant='text' onClick={ () => changeTheme(each.value) }> {each.title} </Button>)}\n            </div>\n        </GridCard>\n\n        <GridCard title=\"ÐÑÑÐ¾ÑÐ½Ð¸ÐºÐ¸ Ð´Ð°Ð½Ð½ÑÑ\">\n            <div>\"gql_endpoint:\" {process.env.REACT_APP_HASURA_ENDPOINT}</div>\n        </GridCard>\n\n    </div>)\n}\n\nexport default Settings","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervals(where: {ent: {_gte: $gte,  _lte: $lte}}) {\n        id \n        ent\n        ext\n        card\n      }\n    }\n  }\n}  \n`\n\n\n","import moment from \"moment\";\n\n\n// ÐºÐ¾Ð½Ð²ÐµÑÑÐ°ÑÐ¸Ñ float Ð² ÑÐ°ÑÑ Ð¸ Ð¼Ð¸Ð½ÑÑÑ\nexport function convertInterval(t){\n  var hour = Math.floor(t);\n  var decpart = t - hour;\n  var min = 1 / 60;\n\n  // Round to nearest minute\n  decpart = min * Math.round(decpart / min);\n  var minute = Math.floor(decpart * 60) + '';\n\n  // Add padding if need\n  if (minute.length < 2) {\n      minute = '0' + minute; \n  }\n\n  return hour + ':' + minute;\n}\n\nexport function monthAdd(date, month) {\n  // ÑÑÐ½ÐºÑÐ¸Ñ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑÑÑ Ð´Ð»Ñ ÐºÐ¾ÑÑÐµÐºÑÐ½Ð¾Ð³Ð¾ Ð²ÑÑÐ¸ÑÐ°Ð½Ð¸Ñ Ð¼ÐµÑÑÑÐµÐ² Ð² chooseMonth\n  var temp = date;\n  temp = new Date(date.getFullYear(), date.getMonth(), 1);\n  temp.setMonth(temp.getMonth() + (month + 1));\n  temp.setDate(temp.getDate() - 1); \n\n  if (date.getDate() < temp.getDate()) { \n      temp.setDate(date.getDate()); \n  }\n  return temp;    \n}\n\nexport function getTimedelta(time1, time2){\n  if (!time1 || !time2) return '' \n  const mtime1 = moment(time1, 'YYYY-MM-DDTHH:mm')\n  const mtime2 = moment(time2, 'YYYY-MM-DDTHH:mm')\n  var duration = moment.duration(mtime1.diff(mtime2));\n  return Math.abs(duration.asSeconds())\n}\n\nexport function daysInMonth (selectedMonth) {\n  // ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð´Ð½ÐµÐ¹ Ð² ÑÐµÐºÑÑÐµÐ¼ Ð¼ÐµÑÑÑÐµ\n    const [month, year] = selectedMonth\n    return new Date(year, month+1, 0).getDate();\n}","import { daysInMonth, getTimedelta, convertInterval } from \"./time_ helpers\";\nimport moment from \"moment\";\nimport sass from './sass/attendance.module.sass'\n\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}\n\nexport function search_alg(user, keyword){\n  if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n  else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n  else return false\n}\n\nexport function calc_hours_for_mounth(row, {timeDeduction, selectedMonth}){\n  var total_t = 0;\n  var with_human_mistakes = 0\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n\n    const findedIntervalsForCurrentDay = row.row.original.intervals.filter(each =>  new Date(each.ent).getDate() == day)\n\n    // ÐÐ»Ñ ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð¸Ð½ÑÑÐµÐ²Ð°Ð»Ð° Ð² ÑÐµÐºÑÐµÐ¼ Ð´Ð½Ðµ\n    for (const property in findedIntervalsForCurrentDay){\n      const each = findedIntervalsForCurrentDay[property];\n      const dur = parseFloat(getTimedelta(each.ent, each.ext));\n      if (!dur) continue;\n      total_t += dur;\n\n    }\n\n    // Ð²ÑÑÐµÑÐ°ÐµÐ¼ Ð²ÑÐµÐ¼Ñ Ð½Ð° Ð¾Ð±ÐµÐ´\n    if (findedIntervalsForCurrentDay.length > 0){\n      total_t -= timeDeduction * 60\n\n      // with_human_mistakes += total_t  \n      if (findedIntervalsForCurrentDay[0]?.ext == null){\n        with_human_mistakes += 4*3600\n      }\n    };\n  }\n\n  total_t = total_t / 60 / 60;\n  with_human_mistakes = total_t + (with_human_mistakes / 60 /60)\n \n  if (!total_t) return '';\n\n  const human_mistakes = () => {\n    if (with_human_mistakes !== total_t) return <div className={sass.intervalred}>{with_human_mistakes.toFixed(0)}</div>\n  }\n\n  return <div>{total_t.toFixed(0)} {human_mistakes()}</div>\n}\n\nexport function fill_columns(row, {timeDeduction}){\n  const columnDay = row.column.Header\n  const data = row.row.original.intervals.filter(el =>  new Date(el.ent).getDate() == columnDay)\n  if (data.length === 0) return <div></div>;\n\n  var ent = moment(data[0].ent, \"YYYY-MM-DDTHH:mm\").format(\"HH:mm\");\n  var ext = moment(data[0].ext, \"YYYY-MM-DDTHH:mm\").format(\"HH:mm\");\n  var total_duration = getTimedelta(data[0].ent, data[0].ext);\n  // console.log(data[0].ext);\n\n  if (ext === \"Invalid date\") ext = ''\n  // If we have several intervals on one day\n  if (data.length >= 2){\n    var i = 1\n    data.forEach(each => {\n      if ( data[data.length-i].ext ) \n        ext = moment(data[data.length-i].ext, \"YYYY-MM-DDTHH:mm\").format(\"HH:mm\");\n      else i++;\n    })\n    data.forEach(each => total_duration += getTimedelta(each.ent, each.ext) )\n  }\n\n  return (\n    <div className={sass.intervalgrid}> \n      <div>{ ent }</div> \n      <div>{ ext }</div>\n      {\n        ext ?  <div className={sass.interval}>{ convertInterval((total_duration/3600) - (timeDeduction / 60) ) }</div>\n            :  <div className={`${sass.interval} ${sass.intervalred}`}>4:00</div>\n      }\n      {/* <div className={sass.countIntervals}>{ data.length }</div> */}\n    </div>\n  ) \n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './time_ helpers'\nimport {fill_columns, calc_hours_for_mounth } from './functions'\n\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  const props = {\n    selectedMonth,\n    timeDeduction\n  }\n\n  let columnsList = [\n      {\n      Header: 'Ð¡Ð¾ÑÑÑÐ´Ð½Ð¸Ðº',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'ÐÑÐ¾Ð³Ð¾',\n      Cell: row => calc_hours_for_mounth(row, props)\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => fill_columns(row, props)\n    })\n  }\n  return columnsList\n}\n\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nimport { monthAdd } from \"./time_ helpers\";\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"ÑÐ½Ð²\", \"ÑÐµÐ²\", \"Ð¼Ð°Ñ\", \"Ð°Ð¿Ñ\", \"Ð¼Ð°Ð¹\", \"Ð¸ÑÐ½\", \"Ð¸ÑÐ»\", \"Ð°Ð²Ð³\", \"ÑÐµÐ½\", \"Ð¾ÐºÑ\", \"Ð½Ð¾Ñ\", \"Ð´ÐµÐº\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i < 9; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div \n                key={suitable}\n                onClick={selectedMonthHandler} \n                className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>Ð¾Ð±ÐµÐ´</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>Ð¼Ð¸Ð½</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>Ð½Ð¾ÑÐ¼Ð°</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>Ñ</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","import  { useMemo, useReducer } from 'react'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\nimport Table, { generateColumns } from './Table.jsx'\nimport { getVarsForSubscription, search_alg } from './functions'\n\nimport './sass/reportConfigurator.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport { UilConstructor } from '@iconscout/react-unicons'\nimport sass from './sass/attendance.module.sass'\nimport TableSearch from '../..//components/TableSearch'\nimport { Typography } from '@mui/material'\n\nimport { monthAdd } from './time_ helpers'\n\n// ÑÑÐµÑ ÑÐ°Ð±Ð¾ÑÐµÐ³Ð¾ Ð²ÑÐµÐ¼ÐµÐ½Ð¸\nconst Attendance = props => {\n    const date = new Date()\n\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 's_keyword': \n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const defaultDate = monthAdd(date, -1);\n    \n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [defaultDate.getMonth(), defaultDate.getFullYear()],\n        s_keyword: ''\n    });\n\n    const { timeDeduction, selectedMonth } = state;\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n\n    const { loading, data } = useQuery(GET_USERS, { variables: { gte, lte }, fetchPolicy: 'no-cache' });\n    \n    const onChangeSearch = (e) => {\n      dispatch({ type: 's_keyword', payload: e.target.value.trim() })\n    }\n\n    const columns = useMemo(\n        () => {\n          return generateColumns(selectedMonth, timeDeduction)\n        },\n      [selectedMonth, timeDeduction]\n    )\n\n\n    const searchResult = useMemo(\n      () => {\n        if (loading) return []\n\n        const keyword = state.s_keyword\n        const dt = data?.attendance_users_aggregate?.nodes\n\n        if (keyword){\n          const result = dt.filter((user) => search_alg(user, keyword))\n          return result\n        }\n        else return dt\n      },\n    [state.s_keyword, loading]\n   )\n\n   \n    return(\n    <div>\n            <div className=\"pageLayout__header\">\n                <UilConstructor className='pageLayout__icon'/>\n                <div className='pageLayout__title'>\n                    Ð Ð°Ð±Ð¾ÑÐµÐµ Ð²ÑÐµÐ¼Ñ\n                </div>                    \n            </div> \n\n            <ReportConfigurator \n            state    = {state} \n            dispatch = {dispatch}\n             />\n\n        <div className={sass.tableWrapper}>\n            <TableSearch onChange={onChangeSearch} disableAutoFocus/>            \n\n            { !loading && data ? \n                <Table \n                columns   = {columns} \n                data      = {searchResult} \n                className = {sass.attendanceTable} /> \n            : <Typography m=\"10px\" variant='subtitle2'>Ð·Ð°Ð³ÑÑÐ·ÐºÐ°..</Typography> }\n\n        </div>\n    </div>\n    )\n}\n\nexport default Attendance","import {Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\n\nimport LoginForm from '../pages/LoginPage';\nimport OrderListLayout from \"../pages/OrderListPage\";\nimport OrderLayout from \"../pages/OrderDetailPage\";\nimport Reclamation from '../pages/ReclamationPage';\nimport Settings from '../pages/Settings';\n\nimport Attendance from '../pages/AttendancePage';\n\nconst AppRouter = () => {\n\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/reclamation' component={Reclamation}/>\n            <PrivateRoute path='/settings' component={Settings}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            {/* #if required route was not found */}\n            <Redirect     to=\"/\" />\n        </Switch>\n    )\n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\nconst BaseLayout = (props) => {\n    return(\n        <div className=\"base-container\">\n                <AppRouter/> \n                {props.children}\n        </div>\n    )\n}   \n\nexport default BaseLayout;","import Drawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\n\nconst CustomDrawer = props => {\n  const { icon, children, width = 400, state, toggleDrawer } = props\n \n  return(<>\n    <div onClick={toggleDrawer(true)}>\n      {icon}\n    </div>\n\n    <Drawer\n    open={state}\n    PaperProps = {{\n      sx: {\n        backgroundColor: 'var(--L0-glass)',\n        backdropFilter: 'var(--blurFilter)'\n      }\n    }}\n    onClose={toggleDrawer(false)}\n    >\n      <Box\n      sx={{ width: width }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n      >\n        {children}\n      </Box>\n    </Drawer>\n  </>)\n}\n\nexport default CustomDrawer;","import gql from 'graphql-tag'; \n\nexport const GET_NOTIFICATIONS = gql`\nsubscription MyQuery($_eq: Int!, $limit: Int) {\n  erp_Notifications(where: {MentionedUser: {_eq: $_eq}}, limit: $limit, order_by: {ID: desc} ) {\n    ID\n    Viewed\n    Comment {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n    Order {\n      OrderID\n      City\n      Entity\n    }\n  }\n}\n`\nexport const UPDATE_VIEWED = gql`\nmutation($ID: Int!, $Viewed: Boolean!) {\n  update_erp_Notifications_by_pk(pk_columns: {ID: $ID}, _set: {Viewed: $Viewed}){\n    ID\n    Viewed\n  }\n}\n`\n\n","import { useContext, useState } from 'react'\nimport { Context } from \"../../../\";\nimport { Link } from 'react-router-dom'\n\nimport CustomDrawer from '../../../components/muiCustom/mui/CustomDrawer'\nimport Box from '@mui/material/Box'\nimport Badge from '@mui/material/Badge'\n\n\nimport { UilBell } from '@iconscout/react-unicons'\n\nimport { useMutation, useSubscription } from '@apollo/client'\nimport { GET_NOTIFICATIONS, UPDATE_VIEWED } from './getNotifications'\nimport sass from './index.module.sass'\nimport moment from 'moment'\nimport { Typography } from '@mui/material'\n\nconst NotificationCenter = props => {\n  const { store } = useContext(Context)\n  const [notifications, setNotifications] = useState();\n\n  const [ updateViewedMutration ] = useMutation(UPDATE_VIEWED)\n  function onSubscriptionData(options){\n    const data = options.subscriptionData.data.erp_Notifications\n    setNotifications({\n      unviewed: data.filter(e => !e.Viewed),\n      viewed: data.filter(e => e.Viewed)\n    })\n  }\n  const { data, loading } = useSubscription(GET_NOTIFICATIONS, { onSubscriptionData, variables: {\n    _eq: store.user.UserID,\n    limit: 100\n  }})\n  const [state, setState] = useState(false)\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open)\n  }\n\n  function jumpToOrderHandler(ID){\n    setState(false);\n    updateViewedMutration({ variables: { ID, Viewed: true } })\n  }\n \n  const unviewedCounter = () => {\n    var a=0;\n    data?.erp_Notifications?.forEach(e => {\n      if (!e.Viewed) a+=1\n    });\n    return a\n  }\n  \n  const notificationUnit = (e) => (\n    <Box\n    className={sass.notificationUnit}\n    key={e.ID}>\n      <div className={sass.notificationHeader}>\n        <Typography className={sass.item1}>{e.Comment.User.FirstName} {e.Comment.User.LastName} <span className={sass.normal}>ÑÐ¿Ð¾Ð¼ÑÐ½ÑÐ» Ð²Ð°Ñ</span></Typography>\n        <Typography variant='subtitle2' className={sass.item2}>{moment(e.Comment.Timestamp).format('DD MMM H:mm')}</Typography>\n\n\n          <Link \n        to={`/orders/${e.Order.OrderID}`} \n        onClick={() => jumpToOrderHandler(e.ID)}\n        className={sass.item3}\n        >\n           <Typography variant='subtitle2'>{e.Order.Entity}__{e.Order.City}</Typography>\n        </Link>\n      </div>\n\n        <div \n          className={sass.commentContent}\n          dangerouslySetInnerHTML={{ __html: e.Comment.Text }}\n        >\n        </div>\n    </Box>\n  )\n\n  return (\n    <CustomDrawer icon={ \n      <Badge badgeContent={unviewedCounter()} color=\"secondary\">\n        <UilBell/>\n      </Badge>\n    } width={500} state={state} toggleDrawer={toggleDrawer}>\n      <Box className={sass.wrapper}>\n        <Typography variant='subtitle3'>Ð£Ð²ÐµÐ´Ð¾Ð¼Ð»ÐµÐ½Ð¸Ñ</Typography>\n        \n         {/* unreaderd notifs */}\n        { notifications?.unviewed.length ?\n          <Box className={sass.unreadedWrapper}> \n            <Typography variant='subtitle3'>ÐÐµÐ¿ÑÐ¾ÑÐ¼Ð¾ÑÑÐµÐ½Ð½ÑÐµ </Typography>\n            {!loading && notifications?.unviewed.map(e => notificationUnit(e) )}\n          </Box>\n        : null}\n\n        {!loading && notifications?.viewed.map( e => notificationUnit(e) )}\n\n      </Box>\n    </CustomDrawer>\n  )\n}\nexport default NotificationCenter","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../../../index';\nimport { useHistory } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nimport { UilSun, UilMoon, UilDesktop, UilSetting } from '@iconscout/react-unicons'\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material/';\n\nimport sass from './index.module.sass'\nimport { SystemPreferTheme } from '../../../utils/SystemPreferTheme';\n\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    border: 'var(--border)',\n    padding: 8,\n    textTransform: 'none',\n    '&:not(:first-of-type)': {\n\n    },\n    '&:first-of-type': {\n      borderTopLeftRadius: 'var(--br)',\n      borderBottomLeftRadius: 'var(--br)',\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 'var(--br)',\n      borderBottomRightRadius: 'var(--br)',\n    },\n  },\n}));\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function SettingsDrawer() {\n  const {store} = useContext(Context);\n  const [state, setState] = useState(false);\n  const history = useHistory()\n  const {changeTheme} = SystemPreferTheme(store.UItheme.state, store.UItheme.dispatch)\n\n  async function logout(){\n    await store.logout(); \n    history.push('/login')\n  }\n\n  const themeHandler = (e, newTheme) => {\n    changeTheme(newTheme)\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open);\n  };\n  \n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 400 }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n    >\n\n      <List>\n        <ListItem className={sass.user}>\n        <div>ÐÐ¾Ð±ÑÐ¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°ÑÑ, {store.user.FirstName} {store.user.LastName}!</div>\n        </ListItem>\n\n        <ListItem >\n          <StyledToggleButtonGroup\n            className={sass.themeToggleButtons}\n            color=\"primary\"\n            value={getCookie('theme')}\n            exclusive\n            fullWidth\n            onChange={themeHandler}\n            >\n            <ToggleButton value=\"light\"> <UilSun/> Light</ToggleButton>\n            <ToggleButton value=\"system\"> <UilDesktop/>System</ToggleButton>\n            <ToggleButton value=\"dark\"> <UilMoon/> Dark</ToggleButton>\n          </StyledToggleButtonGroup>\n        </ListItem>\n\n      </List>\n      \n      <div className={sass.logoutButton}>\n        <Button variant=\"outlined\" onClick={logout}>ÐÑÐ¹ÑÐ¸</Button>\n      </div>\n    </Box>\n  );\n\n  return (\n    <>\n          <div onClick={toggleDrawer(true)}>\n            <UilSetting/>\n          </div>\n          <Drawer\n            open={state}\n            onClose={toggleDrawer(false)}\n            PaperProps = {{\n              sx: {\n                backgroundColor: 'var(--L0-glass)',\n                backdropFilter: 'var(--blurFilter)'\n              }\n            }}\n          >\n            {list('left')}\n          </Drawer>\n    </>\n  );\n}","import { NavLink} from 'react-router-dom';\nimport './index.sass';\n\nimport { UilSortAmountDown, UilWrench, UilConstructor,  UilSetting} from '@iconscout/react-unicons';\nimport NotificationCenter from './NotificationCenter';\nimport SettingsDrawer from './SettingsDrawer/SettingsDrawer';\n\nconst Sidebar = () => {\n\n  function wrap(icon){ \n    return <div className='iconWrapper'>{icon}</div>\n  }\n\n  return(\n    <div className='Sidebar'>\n      <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"link\">{wrap(<UilSortAmountDown/>)}</NavLink>\n      <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"link\">{wrap(<UilWrench/>)}</NavLink>\n      <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"link\">{wrap(<UilConstructor/>)}</NavLink>\n      \n      <div className=\"link marginTopAuto\">\n          {wrap(<NotificationCenter/>)}\n      </div>\n\n      {/* <div className=\"link\">\n          {wrap(<SettingsDrawer/>)}\n      </div> */}\n      <NavLink  to='/settings' activeClassName='sidebar-active' className=\"link\"> {wrap(<UilSetting/>) }</NavLink>\n\n    </div>\n  );\n}\n\nexport default Sidebar;","import { useContext, useState, useMemo } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport { ReactNotifications } from 'react-notifications-component'\n\n\nimport {getCookie, SystemPreferTheme} from './utils/SystemPreferTheme'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { muicomponents } from './materialStyles'\n\nfunction App() {  \n  const { store } = useContext(Context);\n  const [appTheme, setAppTheme] = useState(() => getCookie('theme'))\n  store.setUItheme(appTheme, setAppTheme)\n  const { mode } = SystemPreferTheme(appTheme, setAppTheme)\n  \n  const getDesignTokens = (mode) => ({\n    palette: {\n      mode,\n      ...(mode === 'light'\n        ? {\n            // palette values for light mode\n            primary: {\n              main: '#3763FE',\n              light: '#E7E9FB',\n            },\n            secondary: {\n              main: '#e5534b',\n            }\n          }\n        : {\n            // palette values for dark mode\n            primary: {\n              main: '#99affc',\n              light: '#43435c',\n            },\n            secondary: {\n              main: '#e5534b',\n            },\n           \n          }),\n    },\n    typography: {\n      fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',sans-serif`,\n      subtitle1: {\n        fontSize: '.7rem',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n        letterSpacing: '.5px',\n        color: 'var(--accent) !important',\n      },\n      subtitle2: {\n        fontSize: '.8rem',\n        fontWeight: 'normal',\n        color: 'var(--lowContrast) !important',\n      },\n      subtitle3: {\n        fontSize: '.7rem',\n        color: 'var(--lowContrast) !important',\n        textTransform: 'uppercase',\n      }\n    },\n  });\n\n  var theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  theme = createTheme(theme, muicomponents(theme));\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <ReactNotifications/>\n\n        { store.inMemoryToken && <Sidebar/> }\n          <BaseLayout/>\n        \n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default observer(App);\n","export const muicomponents = (theme) => ({\n  components: {\n    MuiDialog: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--LI) !important',\n          borderRadius: 'var(--br) !important',\n          border: 'var(--border)',\n        }\n      }\n    },\n    MuiDialogTitle: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n          background: 'var(--L2)',\n          borderBottom: 'var(--border)',\n          padding: '11px 1rem',\n          fontSize: '.9rem'\n        }\n      }\n    },\n    MuiDialogContent:{\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          padding: '1rem 1rem .5rem !important',\n        }\n      }\n    },\n    MuiDialogActions: {\n      styleOverrides: {\n        root: {\n          background: 'var(--L2)',\n          borderTop: 'var(--border)',\n          padding: '5px 1rem !important',\n        }\n      }\n    },\n    MuiMenu: {\n      styleOverrides: {\n        paper: {\n          border: 'var(--border)',\n          boxShadow: '0 10px 50px 0 var(--shadow-color) !important',\n          borderRadius: 'var(--br)',\n        }\n      }\n    },\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          padding: '4px 15px !important'\n        }\n      },\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          fontSize: '.8rem'\n        }\n      }\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          minWidth: '25px !important',\n          'svg':{\n            width: '17px'\n          }\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          textTransform: 'none !important',\n        },\n        textInfo: {\n          color: 'var(--lowContrast) !important',\n        },\n        iconic: {\n          minWidth: '10px',\n          minHeight: '10px',\n          padding: '4px 6px',\n          'svg':{\n            width: 20\n          },\n          'path': {\n            color: theme.palette.text.secondary,\n            strokeWidth: .4,\n            stroke: 'var(--L0)'\n          },\n          '&:hover': {\n            background: 'var(--accentLight)',\n          }\n        }\n      },\n      defaultProps: {\n        disableElevation: true,\n        disableRipple: true,\n      },\n    },\n    MuiToggleButton: {\n      defaultProps: {\n        disableRipple: true,\n      }\n    },\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n        autoComplete: 'off',\n      }\n    },\n    MuiAutocomplete: {\n      styleOverrides: {\n        root: {\n          borderRadius: 'var(--br) !important',\n        },\n        paper: {\n          background: 'var(--L0) !important',\n          fontSize: '13px',\n          // color: 'var(--lowContrast)',\n        }\n      }\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          color: 'var(--lowContrast) !important',\n        },\n        filter: {\n          fontSize: '.8rem',\n          transform: 'none',\n          position: 'relative',\n        }\n      },\n      defaultProps: {\n        shrink: true,\n      }\n    },\n    MuiFilledInput: {\n      defaultProps: {\n        disableUnderline: 'true',\n        size: 'small',\n      },\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          border: '1px solid var(--border-colorLight)',\n          borderRadius: '10px',\n          ':hover': {\n            background: 'var(--L1)',\n          },\n        },\n\n      }\n    },\n    MuiInput: {\n      defaultProps: {\n        disableUnderline: 'true'\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          color: 'var(--highContrast) !important',\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          border: 'none',\n        }\n      }\n    },\n    MuiPopover: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0)',\n          borderRadius: 'var(--br) !important'\n        }\n      }\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          fontSize: '.8rem',\n          boxSizing: 'border-box',\n          border: 'none !important',\n          outline: 'none !important',\n          boxShadow: 'none !important',\n          padding: 0,\n        }\n      }\n    },\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiCheckbox: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0-glass)',\n          // margin: '.6rem',\n          // height: '98%',\n          // border: 'var(--lowContrast)',\n          // borderRadius: 'var(--br)',\n        }\n      }\n    }\n  },\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL + '/s3' || 'http://localhost:9000/api/s3'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n// $api.interceptors.request.use( (config) => {\n//     config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n//     return config;\n// })\n// $api.interceptors.response.use( (config) => {\n//     return config;\n// }, async (error) => {\n//     const originalRequest = error.config;\n//     if(error.response.status === 401 && error.config && !error.config._isRetry){\n//         originalRequest._isRetry = true;\n//         try {\n//             const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n//             localStorage.setItem('token', response.data.accessToken);\n//             return $api.request(originalRequest);\n//         } catch (e) {\n//             console.log('ÐÐ²ÑÐ¾ÑÐ¸Ð·Ð°ÑÐ¸Ñ Ð½Ðµ Ð¿ÑÐ¾ÑÐ»Ð°. ÐÐ¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÑÐ½Ð¾Ð²Ð°');\n//         }\n//     }\n       \n// })\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  { email, password })\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isLoading = false;\n    UItheme = {\n        state: null,\n        dispatch: null\n    };\n    inMemoryToken = undefined;\n\n    priorityTab = 1;\n    cachedOrders = [];\n    cachedPreOrders = [];\n    \n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setCachedOrders(array){\n        this.cachedOrders = array\n    }\n    setCachedPreOrders(array){\n        this.cachedPreOrders = array\n    }\n    setUItheme(state, dispatch){\n        this.UItheme = { state, dispatch }\n    }\n    async login(email, password){\n        try {\n            const res = await AuthService.login(email, password)\n            if (res.status === 200){\n              this.setInMemoryToken(res.data.accessToken)\n              this.setUser(res.data.user);\n              return res\n            }\n            \n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            this.setInMemoryToken(null)\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return await axios.get(`${API_URL}/refresh`, { withCredentials: true }).then(\n            (r) => {\n                if (r.status !== 200) new Error('Invalid response while trying to get new access token')\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    \n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            await axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n              (res) => {\n                if (res.status === 200){\n                  this.setUser(res.data.user);\n                  this.setInMemoryToken(res.data.accessToken)      \n                }\n              }\n            )\n        } catch (e) {\n            console.log(e)\n        } finally {\n            this.setLoading(false);\n            return this.inMemoryToken\n        }\n    }\n\n\n    pageParams = [\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Ð Ð°Ð±Ð¾ÑÐµÐµ Ð²ÑÐµÐ¼Ñ',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n}\n","import { onError } from '@apollo/client/link/error';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { RetryLink } from \"@apollo/client/link/retry\";\n\nimport { getInMemoryToken, getNewInMemoryToken } from '../../index'\n\nconst ws_protocol = process.env.REACT_APP_NODE_ENV === 'development' ? 'ws://' : 'wss://'\n\nexport const wsRetryLink = new RetryLink({\n  delay: {\n    initial: 300,\n    max: Infinity,\n    jitter: true\n  },\n  attempts: {\n    max: 100,\n    retryIf: (error, _operation) => !!error\n  }\n});\n\nexport const wsErrorLink = onError( ({ graphQLErrors, networkError, operation, forward}) => {\n  // Error when jwt token expired\n  if (networkError) {\n    console.log('[Network error]: ', networkError);\n    // if (networkError.extensions.code === 'start-failed'){\n\n    // }\n  }\n\n  if (graphQLErrors)\n    graphQLErrors.forEach(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    );\n});\n\nexport const webSocketLink = new WebSocketLink({\n  uri: ws_protocol + process.env.REACT_APP_HASURA_ENDPOINT,\n  // https://github.com/apollographql/subscriptions-transport-ws/issues/171\n  options: {\n    reconnect: true,\n    lazy: true,\n    // reconnectionAttempts: 5,\n    // inactivityTimeout: 10000000,\n    connectionParams: () => ({\n      headers: {\n        'authorization' : `Bearer ${getInMemoryToken()}`\n      }\n    }),\n    \n  }\n})\n\nwebSocketLink.subscriptionClient.onReconnecting(() => {\n  getNewInMemoryToken().then(\n    newToken => {\n      reinitWSConnection(newToken)\n      console.log('Reiniting websocket connection, probably, because jwt token was expired')\n\n    }\n  );\n})\n\nfunction reinitWSConnection(newToken) {\n  webSocketLink.subscriptionClient.connectionParams.headers = {\n    'authorization': `Bearer ${newToken}`\n  };\n  webSocketLink.subscriptionClient.close(true);\n  webSocketLink.subscriptionClient.connect();\n}\n","import { onError } from '@apollo/client/link/error';\nimport { setContext } from \"@apollo/client/link/context\";\nimport { HttpLink, Observable } from \"@apollo/client\";\n\nimport { getInMemoryToken, getNewInMemoryToken } from '../../index'\n\nconst http_protocol = process.env.REACT_APP_NODE_ENV === 'development' ? 'http://' : 'https://'\n\n\nexport const httpErrorLink = onError( ({ graphQLErrors, networkError, operation, forward }) => {\n\n  return new Observable(observer => {\n    getNewInMemoryToken()\n      .then(newToken => {\n        operation.setContext(({ headers = {} }) => ({\n          headers: {\n            // Re-add old headers\n            ...headers,\n            // Switch out old access token for new one\n            Authorization: `Bearer ${newToken}` || null,\n          }\n        }));\n      })\n      .then(() => {\n        const subscriber = {\n          next: observer.next.bind(observer),\n          error: observer.error.bind(observer),\n          complete: observer.complete.bind(observer)\n        };\n        // Retry last failed request\n        forward(operation).subscribe(subscriber);\n      })\n      .catch(error => {\n        // No refresh or client token available, we force user to login\n        observer.error(error);\n      });\n  });\n}\n)\n\nexport const httpAuthLink = setContext((_, { headers }) => ({\n    headers: {\n      ...headers,\n      Authorization: getInMemoryToken() ? `Bearer ${getInMemoryToken()}` : \"\",\n    }\n  }));\n\n\nexport const httpLink = new HttpLink({\n    uri: http_protocol + process.env.REACT_APP_HASURA_ENDPOINT\n  });\n  \n\n","import {\n  ApolloClient,\n  InMemoryCache,\n  from,\n} from \"@apollo/client\";\nimport { split } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\n\nimport { wsRetryLink, wsErrorLink, webSocketLink } from './wsLinks';\nimport { httpErrorLink, httpAuthLink, httpLink } from './httpLinks';\n\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  from([ wsRetryLink, wsErrorLink, webSocketLink ]),\n  from([ httpErrorLink, httpAuthLink, httpLink ]),\n);\n\nexport const apolloClient = new ApolloClient({\n  link:  splitLink,\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n        erp_CheckListUnits: {\n          keyFields: ['CheckListUnitID']\n        },\n        erp_Comments: {\n          keyFields: ['CommentID']\n        }\n    },\n  })\n})\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\n\n\nimport { ApolloProvider } from \"@apollo/client\";\nimport { apolloClient } from './http/apollo/apolloClient';\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\nexport function getInMemoryToken(){\n  return store.inMemoryToken\n}\nexport async function getNewInMemoryToken(){\n  const token = await store.getNewToken()\n  return token\n}\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsListWrapper\":\"Comments_commentsListWrapper___fcsl\",\"commentListThread\":\"Comments_commentListThread__ozjGX\",\"commentInputForm\":\"Comments_commentInputForm__3qC1P\",\"checklistUnit\":\"Comments_checklistUnit__3VLqy\",\"checklistUnit_complited\":\"Comments_checklistUnit_complited__UDryM\",\"mentionedUserHiglight\":\"Comments_mentionedUserHiglight__AMXFd\",\"saveButton\":\"Comments_saveButton__GUyFK\",\"commentUnit\":\"Comments_commentUnit__2eN-_\",\"actions\":\"Comments_actions__2WDkW\",\"commentContent\":\"Comments_commentContent__2OMBI\",\"commentHeader\":\"Comments_commentHeader__3WbIm\",\"sender\":\"Comments_sender__30aSP\",\"time\":\"Comments_time__H8FXy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"main_tableRow__VNih1\",\"table\":\"main_table__3uRTr\",\"tbody\":\"main_tbody__1ykZV\",\"thead\":\"main_thead__jWTxv\",\"tr\":\"main_tr__2IAPk\",\"td\":\"main_td__3ZCZj\",\"th\":\"main_th__12RMV\",\"tableWrapper\":\"main_tableWrapper__2Lbb0\",\"tableFooter\":\"main_tableFooter__1ihsT\",\"tableMain\":\"main_tableMain__3_H8C\",\"awaitingDispatch\":\"main_awaitingDispatch__3SMyD\",\"needAttention\":\"main_needAttention__pnqmz\",\"unpaidOrder\":\"main_unpaidOrder__2GQMx\",\"customerTableInfo\":\"main_customerTableInfo__2dnq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reclatationLayout\":\"ReclamationPage_reclatationLayout__2EuZy\",\"columnWrapper\":\"ReclamationPage_columnWrapper__tE0Iu\",\"reclColumn\":\"ReclamationPage_reclColumn__1e4nR\",\"draggableWrapper\":\"ReclamationPage_draggableWrapper__3wM-n\",\"heading\":\"ReclamationPage_heading__SzCEM\",\"item\":\"ReclamationPage_item__di9JO\",\"orderItem\":\"ReclamationPage_orderItem__2r6K-\",\"customerInfo\":\"ReclamationPage_customerInfo__1muzb\",\"needAttention\":\"ReclamationPage_needAttention__1dYOo\",\"awaitingDispatch\":\"ReclamationPage_awaitingDispatch__2ncPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotificationCenter_wrapper__2ZNFd\",\"notificationUnit\":\"NotificationCenter_notificationUnit__Wu0MX\",\"unreadedWrapper\":\"NotificationCenter_unreadedWrapper__GTWeM\",\"notificationHeader\":\"NotificationCenter_notificationHeader__1deII\",\"item1\":\"NotificationCenter_item1__3mfID\",\"normal\":\"NotificationCenter_normal__19zme\",\"item3\":\"NotificationCenter_item3__gCbUg\",\"item2\":\"NotificationCenter_item2__2wKoS\",\"commentContent\":\"NotificationCenter_commentContent__1bz-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"attendance_tableWrapper__2rE3D\",\"attendanceTable\":\"attendance_attendanceTable__18B6I\",\"interval\":\"attendance_interval__VjfAk\",\"intervalred\":\"attendance_intervalred__TS5pn\",\"intervalgrid\":\"attendance_intervalgrid__Yc4D0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__-v-ZG\",\"quantity\":\"composition_quantity__EOCyz\",\"unitName\":\"composition_unitName__1L5Ob\",\"addOrderItem\":\"composition_addOrderItem__3cgdF\",\"quantityInput\":\"composition_quantityInput__qHusO\",\"Unit\":\"composition_Unit__3Sk0C\",\"index\":\"composition_index__33I6t\",\"fullName\":\"composition_fullName__2218_\"};"],"sourceRoot":""}