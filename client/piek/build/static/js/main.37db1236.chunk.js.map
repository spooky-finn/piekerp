{"version":3,"sources":["components/OrderListLayout/Archive/archive.module.sass","components/AttendanceLayout/sass/attendance.module.sass","components/OrderListLayout/Search/search.module.sass","components/OrderLayout/OrderItemActions/index.module.sass","components/Sidebar/SettingsDrawer/index.module.sass","components/OrderListLayout/PreOrders/preorders.module.sass","routers/PrivateRoute.js","components/LoginForm/index.js","components/_core/notification.js","components/OrderListLayout/reducer.js","components/OrderListLayout/queries/getOrders.js","hasura-queries/getUsers.js","components/OrderListLayout/queries/MutationInsertOrder.js","components/OrderListLayout/UniversalTable/columnList.js","components/OrderListLayout/UniversalTable/TableMarkup.jsx","components/_core/mui/TableSearch.jsx","components/OrderListLayout/Search/filter.js","components/OrderListLayout/Search/index.js","components/OrderListLayout/PreOrders/MutationOrderStatus.js","components/OrderListLayout/PreOrders/index.js","components/OrderListLayout/Priority/index.js","components/OrderListLayout/Recently/index.jsx","components/OrderListLayout/Recently/spreadOrders.js","components/OrderListLayout/Archive/queries/getArchivedSearchOrders.js","components/OrderListLayout/Archive/queries/getAllOrdersAmount.js","components/OrderListLayout/Archive/queries/getArchivedLatestOrders.js","components/OrderListLayout/Archive/queries/getArchivedUnpaidOrders.js","components/OrderListLayout/Archive/PreviewTable.jsx","components/_core/OrderStatus.js","components/OrderListLayout/Archive/index.jsx","components/OrderListLayout/index.jsx","components/OrderLayout/queries/GetOrderByID.js","components/OrderLayout/queries/MutationOrderDocs.js","components/OrderLayout/queries/MutationOrderItem.js","components/OrderLayout/OrderItemActions/index.jsx","components/OrderLayout/Composition.jsx","components/OrderLayout/RightInfoPanel/index.jsx","components/OrderLayout/queries/MutationOrderInfo.js","components/OrderLayout/queries/MutationPaymentHistory.js","components/OrderLayout/RightInfoPanel/EditRightInfoPanel.jsx","components/OrderLayout/Docs/ConfirmDialog.jsx","components/OrderLayout/Docs/Docs.jsx","components/OrderLayout/queries/MutationOrderCommnets.js","components/OrderLayout/queries/MutationNotification.js","components/OrderLayout/queries/SubscriptionComments.js","components/OrderLayout/Comments/Comment.jsx","components/OrderLayout/queries/GetAllUsers.js","components/OrderLayout/Comments/Ð¡ommandsPopover.jsx","components/OrderLayout/Comments/UserListPopover.jsx","components/_core/placeCaretAtEnd.js","components/OrderLayout/Comments/InputForm.js","components/OrderLayout/Comments/CommentsList.jsx","components/_core/UserStatus.js","components/OrderLayout/queries/MutationDeleteOrder.js","components/OrderLayout/OrderActions/Dialogs/TransferOrderConfirmDialog.jsx","components/OrderLayout/OrderActions/Actions/OrderActions.jsx","components/OrderLayout/OrderActions/Actions/PreOrderActions.jsx","components/OrderLayout/OrderActions/Actions/OrderStatusesActions.jsx","components/OrderLayout/OrderActions/Actions/ReclamationActions.jsx","components/OrderLayout/OrderActions/OrderActionsMenu.jsx","components/OrderLayout/OrderHeader.jsx","components/OrderLayout/Dropzone.js","components/OrderLayout/index.jsx","components/AttendanceLayout/queries/getUsers.js","components/AttendanceLayout/functions.js","components/AttendanceLayout/getIntervalData.js","components/AttendanceLayout/table.js","components/AttendanceLayout/ReportConfigurator.jsx","components/AttendanceLayout/index.js","components/ReclamationLayout/reducer.js","components/ReclamationLayout/queries.js","components/ReclamationLayout/index.js","routers/Router.js","components/BaseLayout/index.js","components/_core/mui/CustomDrawer.js","components/Sidebar/NotificationCenter/getNotifications.js","components/Sidebar/NotificationCenter/index.js","components/_core/SystemPreferTheme.js","components/Sidebar/SettingsDrawer/SettingsDrawer.jsx","components/Sidebar/Sidebar.js","App.js","materialStyles.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","http/apollo/wsLinks.js","http/apollo/httpLinks.js","http/apollo/apolloClient.js","index.js","components/OrderLayout/Comments/index.module.sass","components/OrderListLayout/main.module.sass","components/ReclamationLayout/index.module.sass","components/Sidebar/NotificationCenter/index.module.sass","components/OrderLayout/sass/composition.module.sass"],"names":["module","exports","PrivateRoute","Component","component","rest","store","useContext","Context","useState","isLoaded","setisLoaded","inMemoryToken","token","setToken","a","checkAuth","then","res","useEffect","getToken","render","props","to","LoginForm","email","setEmail","password","setPassword","history","useHistory","login","status","push","type","title","message","addNotification","insert","container","dismiss","duration","className","TextField","variant","label","onChange","e","target","value","trim","Button","width","onClick","reducer","state","action","payload","searchKeyword","managerFilter","search","keyword","brief","GetOrdersSubscription","gql","GET_USERS","INSERT_ORDER","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","OrderID","map","item","Name","OrderItemID","Quantity","order","ShippingDate","moment","format","sass","customerTableInfo","Entity","City","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","statusHighlighting","showUnpaid","unpaid","mainsass","unpaidOrder","NeedAttention","split","needAttention","AwaitingDispatch","awaitingDispatch","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","tableMain","table","thead","headerGroup","i","tr","getHeaderGroupProps","headers","column","th","getHeaderProps","tbody","row","original","tableRow","getRowProps","cells","cell","td","getCellProps","styles","wrapper","display","height","alignItems","svg","padding","color","opacity","input","border","flexGrow","background","fontSize","fontWeight","TableSearch","placeholder","defaultValue","disableAutoFocus","style","autoFocus","compare","finded","arg","toLowerCase","includes","filter","array","result","newOrders","ord","ManagerID","Search","dispatch","users","Box","sx","breifname","arr","selectedTab","orders","preOrders","adjacentSearch","breif","showonTab","el","briefOnClick","adjacentSearchWrap","filterPlaceholder","FormControl","Select","name","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","MUTATE_ORDER_STATUS","PreOrders","useMutation","mutationOrderStatus","onClickTransfer","splice","indexOf","variables","AcceptanceDate","Date","toLocaleString","timeZone","newColumnList","filtredData","tableWrapper","preOrdersTableWrapper","Priority","useMemo","sortedData","sort","b","AccessLevelID","heading","flexDirection","secondary","textTransform","borderTop","Recently","spreadData","days","subtract","dateCreation","date","objs","spread","ifNothing","Typography","m","GET_ARCHIVED_SEARCH_ORDERS","GET_ALL_ORDERS_AMOUNT","GET_ARCHIVED_LATEST_ORDERS","GET_ARCHIVED_UNPAID_ORDERS","PreviewTable","useQuery","limit","OrderStatus","reqOrderStatus","fetchPolicy","latestOrders","loading","onCompleted","erp_Orders","unpaidIDs","unpaidOrders","ActualShippingDate","archiveTable","ordRegistration","ordProduction","ordArchived","reclInbox","reclDecision","reclProduction","reclArchived","Archive","useReducer","OS","error","console","setTimeout","filterFormControl","InputLabel","labelId","filterInputBase","event","marginTop","StyledTabs","styled","Tabs","theme","minHeight","StyledTab","Tab","typography","pxToRem","borderRight","borderLeft","boxShadow","backgroundColor","OrderListLayout","cachedOrders","cachedPreOrders","reclamations","archived","initialState","priorityTab","useSubscription","onSubscriptionData","options","subscriptionData","forEach","ID","setCachedOrders","setCachedPreOrders","createNewOrder","TabPanel","children","index","other","role","hidden","aria-labelledby","mb","a11yProps","newValue","setPriorutyTab","aria-label","marginLeft","marginRight","alignSelf","insert_erp_Orders","returning","erp_Users","GET_ORDER_BY_ID","PUSH_DOCS_ARRAY","DELETE_ORDER_FILE","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","UPDATE_ORDER_ITEM","UPDATE_ORDER_ITEM_METADATA","OrderItemActions","editState","editItemHandler","deleteItemHandler","setOIDialog","updateItem","anchorEl","setAnchorEl","SerialNumber","Fitter","handleClose","minWidth","aria-controls","aria-haspopup","currentTarget","size","moreVertIcon","Menu","keepMounted","open","Boolean","onClose","actionsWrapper","deleteButton","fullName","quantity","OrderComposition","refetch","orderID","OIDialog","deleteOrderItemMutation","insertOrderItemMutation","updateOrderItemMutation","updateOrderItemMetadataMutation","itemID","orderItemID","FullName","closeOIDialog","insertOrderItem","parseInt","Unit","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","addOrderItem","multiline","fullNameInput","quantityInput","DialogActions","justifyContent","OrderInfoCard","secondaryHeading","Pre","palette","text","OrderMeta","OrderNumber","Comment","CreatingDate","aboutOrder","PaymentHistories","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","UPDATE_NEED_ATTENTION","MOVE_ORDER_TO_ARCHIVE","MOVE_ORDER_TO_PRIORITY","INSERT_PAYMENT","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","insertPayment","log","InputProps","inputComponent","Autocomplete","getOptionLabel","option","renderInput","params","managerID","find","findSelectedManeger","ConfirmDialog","filename","onConfirmF","aria-describedby","DialogContentText","Docs","onUpload","setOpen","fileOnDelete","setFileOnDelete","deleteFileMutation","deleteFile","Key","attachedFiles","file","handleClickOpen","FileName","href","process","rel","files","path","onUploadFiles","INSERT_ORDER_COMMENT","DELETE_ORDER_COMMENT","UPDATE_ORDER_COMMENT","INSERT_NOTIFICATION","SUBSCRIBTION_ORDER_COMMENT","userID","updateComment","deleteComment","nowEditing","setNowEditing","commentUnit","commentHeader","sender","actions","CommentID","time","Timestamp","timestamp","contentEditable","commentContent","suppressContentEditableWarning","onBlur","innerHTML","onMouseLeave","dangerouslySetInnerHTML","__html","Text","toString","checklistUnit","GET_ALL_USERS","Ð¡ommandsPopover","setAnchorULP","root","document","getElementById","elem","createElement","classList","add","appendChild","insertTodoinDOM","current","UserListPopover","getAttribute","inputform","innerText","slice","join","mentionedUserHiglight","dataset","mentionedUser","focus","window","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","select","placeCaretAtEnd","space","userid","InputForm","insertComment","anchorULP","commentInputForm","ref","data-ph","onInput","onKeyUp","ctrlKey","metaKey","keyCode","saveButton","CommentsList","insertOrderCommentMutation","updateOrderCommentMutation","deleteOrderCommentMutation","insertNotificationMutation","useRef","comments","newText","switchTodo","toggle","checklistUnit_complited","els","querySelectorAll","addEventListener","once","removeEventListener","line","erp_Comments","commentListThread","commentsListWrapper","mentioned","insert_erp_Comments_one","MentionedUser","comment","UserStatus","general","management","bookkeeping","manufacture","DELETE_ORDER","TransferOrderConfirmDialog","React","ListItemIcon","ListItemText","transferOrderTo","OrderActions","OrderStatusID","PreOrderActions","transferOrderToPriority","mutationDeleteOrderHandler","OrderStatusesActions","needAttentionHandler","awaitingDispatchHandler","ReclamationActions","transferOrderToArchive","ifInproduction","ifInbox","OrderActionsMenu","OAMenu","setOAMenu","OAMenuRef","mutationAwaitingDispatch","mutationNeedAttention","mutationMoveOrderToArchive","mutationMoveOrderToPriority","mutationDeleteOrder","baseurl","update_erp_Orders_by_pk","delete_erp_Orders_by_pk","optimisticResponse","__typename","curDate","toISOString","nd","orderStatus","OrderHeader","setEditState","ml","US","isFileOnDropzone","isDragActive","remove","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","get","pushDocs","useParams","S3Upload","useCallback","acceptedFiles","uploadFile","key","originalname","useDropzone","onDrop","getRootProps","Composition","Comments","RightInfoPanel","daysInMonth","selectedMonth","month","year","getDate","getIntervalData","day","intervals","timeDeduction","getMinutes","t","minutes","ent","exit","interval","_entr","_exit","ext","entrance","getHours","number","hour","Math","floor","decpart","min","round","minute","convertInterval","dur","monthAdd","temp","getFullYear","getMonth","setMonth","setDate","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","Attendance","Error","s_keyword","replace","gte","lte","getVarsForSubscription","lastname","firstname","Cell","hours","intervalgrid","generateColumns","searchResult","dt","attendance_users_aggregate","nodes","startsWith","search_alg","attendanceTable","inbox","decision","inproduction","SUBSCRIPTION_RECLAMATION_ORDERS","UPDATE_ORDER_STATUS","Reclamation","getState","columnName","droppableId","orderStatusID","mutateOrderStatusID","insertOrder","col","getOrderStatus","reclatationLayout","onDragEnd","source","destination","items","list","startIndex","endIndex","Array","from","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","movedObj","move","Object","entries","columnWrapper","reclColumn","provided","snapshot","innerRef","draggableWrapper","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","orderItem","customerInfo","AppRouter","exact","BaseLayout","CustomDrawer","icon","toggleDrawer","Drawer","PaperProps","backdropFilter","onKeyDown","GET_NOTIFICATIONS","UPDATE_VIEWED","NotificationCenter","notifications","setNotifications","updateViewedMutration","erp_Notifications","unviewed","Viewed","viewed","_eq","setState","notificationUnit","notificationHeader","item1","normal","item2","Order","item3","Badge","badgeContent","unviewedCounter","unreadedWrapper","DARK_CLASS","SystemPreferTheme","appTheme","setAppTheme","systemPrefersDark","useMediaQuery","query","undefined","mode","documentElement","changeTheme","newTheme","expires","setFullYear","cookie","StyledToggleButtonGroup","ToggleButtonGroup","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","getCookie","parts","pop","shift","SettingsDrawer","UItheme","logout","anchor","themeHandler","List","ListItem","themeToggleButtons","exclusive","ToggleButton","logoutButton","Sidebar","wrap","activeClassName","observer","setUItheme","createTheme","primary","main","light","fontFamily","subtitle1","letterSpacing","subtitle2","subtitle3","getDesignTokens","components","MuiDialog","styleOverrides","paper","borderRadius","MuiDialogTitle","borderBottom","MuiDialogContent","MuiDialogActions","MuiMenu","MuiMenuItem","defaultProps","disableRipple","MuiListItemText","MuiListItemIcon","MuiButton","textInfo","iconic","strokeWidth","stroke","disableElevation","MuiToggleButton","MuiTextField","autoComplete","MuiInputLabel","transform","position","shrink","MuiFilledInput","disableUnderline","MuiInput","MuiInputBase","MuiOutlinedInput","notchedOutline","MuiPopover","MuiSelect","boxSizing","outline","MuiTab","MuiCheckbox","MuiDrawer","muicomponents","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","axios","create","withCredentials","baseURL","AuthService","post","Store","isLoading","pageParams","makeAutoObservable","this","bool","isAuth","setInMemoryToken","accessToken","setUser","response","r","setLoading","formData","FormData","append","fetch","hasuraRes","url","wsRetryLink","RetryLink","delay","initial","max","Infinity","jitter","attempts","retryIf","_operation","wsErrorLink","onError","graphQLErrors","networkError","operation","forward","locations","webSocketLink","WebSocketLink","uri","ws_protocol","reconnect","lazy","connectionParams","getInMemoryToken","subscriptionClient","onReconnecting","getNewInMemoryToken","newToken","close","connect","reinitWSConnection","httpErrorLink","Observable","setContext","Authorization","subscriber","next","bind","complete","subscribe","catch","httpAuthLink","_","httpLink","HttpLink","http_protocol","splitLink","definition","getMainDefinition","kind","apolloClient","ApolloClient","link","cache","InMemoryCache","typePolicies","keyFields","erp_CheckListUnits","createContext","getNewToken","ReactDOM","client","sessionData","session","Provider"],"mappings":"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","file":"static/js/main.37db1236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterFormControl\":\"archive_filterFormControl__1DXa5\",\"filterInputBase\":\"archive_filterInputBase__2Du59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"attendance_tableWrapper__3GR7B\",\"attendanceTable\":\"attendance_attendanceTable__1HkhM\",\"interval\":\"attendance_interval__3dqN-\",\"intervalgrid\":\"attendance_intervalgrid__2d_3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"search_filter__1BI6Q\",\"filterPlaceholder\":\"search_filterPlaceholder__2NcNB\",\"filterIndicator\":\"search_filterIndicator__Rfc0e\",\"circle\":\"search_circle__2PIMx\",\"pulsate\":\"search_pulsate__pgEiY\",\"adjacentSearchWrap\":\"search_adjacentSearchWrap__5rhHQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"OrderItemActions_deleteButton__14fyW\",\"moreVertIcon\":\"OrderItemActions_moreVertIcon__3Qdex\",\"inputListItem\":\"OrderItemActions_inputListItem__22HbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeToggleButtons\":\"SettingsDrawer_themeToggleButtons__hIzSP\",\"user\":\"SettingsDrawer_user__3iVNA\",\"logoutButton\":\"SettingsDrawer_logoutButton__2_Id_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preOrdersTableWrapper\":\"preorders_preOrdersTableWrapper__2ELAZ\"};","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const { store } = useContext(Context)\n  const [isLoaded, setisLoaded] = useState(false);\n  const [token, setToken] = useState(store.inMemoryToken);\n\n    async function getToken() {\n      store.checkAuth().then(\n        (res) => {\n          setToken(res)\n          setisLoaded(true)\n        }\n      )\n    }\n\n    useEffect(() => {\n      if (token) setisLoaded(true)\n      else getToken();\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n          if (token) return <Component {...props} />\n          else return <Redirect to='/login'/>;\n        }\n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import { useState, useContext } from 'react';\nimport { Context } from '../../index';\nimport { useHistory } from \"react-router-dom\";\n\nimport ReactNotification from 'react-notifications-component'\nimport { TextField, Button } from '@mui/material';\nimport './LoginForm.sass'\nimport { notif } from '../_core/notification'\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    \n    const { store } = useContext(Context);\n    const history = useHistory();\n\n\n    const login = async () => {\n      const res = await store.login(email, password)\n      if (res?.status === 200){\n        history.push('/')\n      }\n      else{\n        notif('warning', 'Unauthorized error', 'Invalig email or password')\n      }\n      \n    }\n\n    return(<>\n      <ReactNotification />\n      <div className='loginCard'>\n        <TextField\n        className='loginInput'\n        variant='filled'\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          variant='filled'\n          className='loginInput'\n          onChange={e => setPassword(e.target.value.trim()) }\n        />\n        <Button\n          className=\"Button\"\n          variant=\"outlined\"\n          width='300px'\n          onClick={login}\n        >ÐÐ¾Ð¹ÑÐ¸</Button>\n      </div>\n    </>);\n}\n\nexport default LoginForm\n","import { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\n\nexport const notif = (type, title, message) =>  store.addNotification({\n  title,\n  message,\n  type,\n  insert: \"bottom\",\n  container: \"top-right\",\n  dismiss: {\n    duration: 4000,\n  }\n});\n","export const initialState = (selectedTab, cachedOrders, cachedPreOrders) => ({\n    orders: cachedOrders || [],\n    preOrders: cachedPreOrders || [],\n    selectedTab : selectedTab,\n\n    searchKeyword: '',\n    managerFilter: 0,\n\n\n    search : {\n        // search in adjacent groups as an additional information\n        // Ð¿Ð¾Ð¸ÑÐº Ð² ÑÐ¼ÐµÐ¶Ð½ÑÑ ÑÐ°Ð·Ð´ÐµÐ»Ð°Ñ Ð´Ð»Ñ Ð²ÑÐ²Ð¾Ð´Ð°, ÐºÐ°Ðº ÑÐ¿ÑÐ°Ð²Ð¾ÑÐ½Ð¾Ð¹ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸\n        keyword: '',\n        brief: {\n            orders : 0,\n            preOrders: 0,\n            reclamations: 0,\n            archived: 0,\n        }\n    }\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'searchResult': \n        case 'managerFilter': \n            return {...state, [action.type]: action.payload };\n\n        case 'resetFilters': \n            return {...state, searchKeyword: '', managerFilter: 0, search: { ...state.search, keyword: '' }}\n\n\n        case 'search.brief': \n            return {...state, search: {\n                ...state.search,\n                brief: action.payload\n            }}\n        case 'search.keyword':\n            return {...state, search: {\n                ...state.search,\n                keyword: action.payload\n            }  }\n\n\n        default: \n            return {...state}\n    }\n}","import gql from 'graphql-tag'; \n\n// ÐÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð·Ð°ÐºÐ°Ð·Ñ Ð½Ð°ÑÐ¾Ð´ÑÑÐ¸ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð² ÐÑÐµÐ·Ð´Ð°ÐºÐ°Ð·Ð°Ñ Ð¸ Ð² Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ \n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [1,2]} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      NeedAttention\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems(order_by: {OrderItemID: asc}){\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n        LastName\n      }\n\n    }  \n  }\n`\n","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n    AccessLevelID\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\nimport sass from '../main.module.sass'\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ' - 0%'\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row, counter) => counter +1\n    },\n    {\n      Header: 'ÐÐ°Ð¸Ð¼.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length === 0) return <Link to={`/orders/${data.OrderID}`}><div>ÐÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ð¼Ð¾Ð³Ð¾</div></Link>\n\n        else return (<>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </>)\n      }\n      \n    },\n    {\n      Header: 'ÐÐ¾Ð»-Ð²Ð¾',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'ÐÑÐ³ÑÑÐ·ÐºÐ°',\n      accessor: (order) => \n      <> { order.ShippingDate && moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'ÐÐ¾Ð¼Ð¿Ð°Ð½Ð¸Ñ / Ð³Ð¾ÑÐ¾Ð´',\n      accessor: data => \n      <div className={sass.customerTableInfo}>\n        <div>{data.Entity}</div>\n        <div>{data.City}</div>\n      </div>\n    },\n    {\n      Header: 'Ð¡ÑÐµÑ- Ð¾Ð¿Ð»Ð°ÑÐ°',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'ÐÐ´Ð¶.',\n      accessor: data => <> {data.User?.FirstName[0] || ''} </>\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\nimport { Link } from 'react-router-dom'\n\nfunction statusHighlighting(order, showUnpaid){\n  if (showUnpaid && order.unpaid) return mainsass.unpaidOrder\n\n  // ÐÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð¾Ð² ÑÑÐµÐ±ÑÑÑÐ¸Ñ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ Ð¸Ð¼ÐµÑÑ Ð¿ÑÐ¸Ð¾ÑÐ¸ÑÐµÑ\n  if (order.NeedAttention?.split(',')[0] === 'true') return mainsass.needAttention\n  else if (order.AwaitingDispatch) return mainsass.awaitingDispatch\n  else return ''\n}\nexport default function Table({columns, data, className, showUnpaid }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return null;\n   return (\n     <>\n    <div className={`${mainsass.tableMain} ${className} ${mainsass.table}`} {...getTableProps()}>\n      <div className={mainsass.thead}>\n        {headerGroups.map((headerGroup, i) => (\n          <div className={mainsass.tr} key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <div  className={mainsass.th} {...column.getHeaderProps()}>{column.render('Header')}</div>\n            ))}\n          </div>\n        ))}\n      </div>\n      <div {...getTableBodyProps()} className={mainsass.tbody}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n\n          const { OrderID } = row.original\n          return (\n              <Link to={`/orders/${OrderID}`} className={`${statusHighlighting(row.original, showUnpaid)} ${mainsass.tableRow}`} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <div  className={mainsass.td} {...cell.getCellProps()}>{cell.render('Cell')}</div>\n              })}\n              </Link>\n          )\n        })}\n      </div>\n    </div>\n    </>\n  )\n}","import { UilSearch } from '@iconscout/react-unicons'\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  wrapper: {\n    display: 'flex',\n    height: '50px',\n    alignItems: 'center',\n  },\n  svg : {\n    padding: '0 12px',\n    width: '18px',\n    color: 'var(--highContrast)',\n    opacity: .3,\n  },\n  input : {\n    border: 'none',\n    flexGrow: '1',\n    background: 'transparent',\n    color: 'var(--highContrast)',\n    fontSize: '.9rem',\n    fontWeight: 600\n  }\n}  \n\nconst TableSearch = (props) => {\n  const {placeholder, onChange, defaultValue, disableAutoFocus} = props\n   return (\n    <div style={styles.wrapper}>\n      <UilSearch style={styles.svg}/>\n      \n      <input \n      style={styles.input} \n      type='text' \n      placeholder={placeholder} \n      onChange={onChange} \n      autoFocus={disableAutoFocus? false : true} \n      defaultValue={defaultValue}\n      />\n    </div>\n   )\n}\n\nTableSearch.propTypes = { \n  placeholder: PropTypes.string,\n  onChange:    PropTypes.func,\n  defaultValue:  PropTypes.string, \n  disableAutoFocus: PropTypes.bool,\n}\n\nexport default TableSearch","function compare(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // Ð¿ÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ Ð¿Ð¾Ð¸ÑÐº Ð¿Ð¾ ÐºÐ»ÑÑÐµÐ²Ð¾Ð¼Ñ ÑÐ»Ð¾Ð²Ñ\n    if (keyword !== '') {\n        result = array.filter( (order) => compare(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //Ð¿ÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ Ð¿Ð¾Ð¸ÑÐº Ð¿Ð¾ ÑÐ¸Ð»ÑÑÑ\n    if (managerFilter !== 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID === managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}\n\n\nexport const search_alg = (array, keyword) => {\n    return array.filter( (order) => compare( keyword, order.InvoiceNumber, order.Entity )) \n}","import sass from './search.module.sass'\nimport { FormControl, Select, MenuItem, Box } from '@mui/material';\nimport TableSearch from '../../_core/mui/TableSearch'\n\nimport { search_alg } from '../Search/filter';\n\nconst Search = ({ state, dispatch, users  }) => {\n    const searchHandler = (e) => {\n\n        var arr = [];\n        var breifname;\n\n        if (state.selectedTab === 0){\n            arr = state.orders;\n            breifname = 'orders'\n        }\n        else if (state.selectedTab === 1) {\n            arr = state.preOrders;\n            breifname = 'preOrders'\n        }\n       \n\n        const adjacentSearch = search_alg(arr, e.target.value)\n       \n        dispatch({ \n            type: 'search.brief', payload: {\n                ...state.search.breif,\n                [breifname]: adjacentSearch.length\n            }\n        })\n\n        dispatch({ type: 'searchKeyword', payload: e.target.value }) \n        dispatch({ type: 'search.keyword', payload: e.target.value }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter !== 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>ÐÑÐ´Ð°ÑÐ° Ð¾Ð³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð° ÑÐ¸Ð»ÑÑÑÐ¾Ð¼</p>\n            </div>\n        ) \n    }\n\n    function briefOnClick(dispatch, brief){\n        dispatch({\n            type: 'selectedTab',\n            payload: brief.showonTab,\n        })\n    }\n\n    const briefSearch = () => ([\n        {\n            showonTab: 1,\n            data: state.search.brief.orders,\n            title: 'Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸' ,\n        },\n        {\n            showonTab: 0,\n            data: state.search.brief.preOrders,\n            title: 'Ð² Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ð°Ñ' ,\n        }\n    ].map( el => {\n        if (!state.search.keyword || !el.data) return null\n        if (el.showonTab === state.selectedTab) return null;\n\n        return ( <div \n            onClick={() => briefOnClick(dispatch, el) } \n            className={sass.adjacentSearchWrap }>\n                {el.data} {el.title} \n            </div> )\n        })\n    )\n\n    return (\n        <>\n        <Box sx={{ display: 'flex' }}>\n            <TableSearch placeholder=\"Ð¡ÑÐµÑ, ÑÑÐ»Ð¸ÑÐ¾\" onChange={searchHandler} defaultValue={state.searchKeyword}/>\n            {briefSearch()}\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl>\n                  <Select\n                  name    = \"managerFilter\"\n                  value    = {state.managerFilter}\n                  onChange = {managerHandler}\n                  >\n                      <MenuItem value={0}>ÐÑÐµ</MenuItem>\n                      { users.map( (user) => \n                      <MenuItem value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                      )}\n                  </Select>\n                </FormControl>\n            </div>)}\n        </Box>\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n    }\n  }\n\n`;","import { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\nimport Search from '../Search';\nimport { filter } from '../Search/filter'\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport { UilFileCheck} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\nimport mainsass from '../main.module.sass'\nimport { Button } from '@mui/material';\n\nconst PreOrders = ({ state, dispatch }) => {\n    const data = state.preOrders\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    const onClickTransfer = (order) => {\n        data.splice(data.indexOf(order), 1)\n        dispatch({ type: 'preOrders', payload: data })\n\n        mutationOrderStatus({ variables: { \n            OrderID: order.OrderID, \n            AcceptanceDate: new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"}) } \n        })\n    }\n\n    var newColumnList = [...columnsList];\n    const filtredData = filter(data, state.searchKeyword)\n    \n    newColumnList.push({\n        Header: 'ÐÑÐ¸Ð½ÑÑÑ',\n        accessor: data => \n        <Button onClick={() => onClickTransfer(data)} variant='iconic'><UilFileCheck/></Button>\n        ,\n      })\n   \n    return(\n    <div className={`${mainsass.tableWrapper} ${sass.preOrdersTableWrapper}`}>\n        <Search state={state} dispatch={dispatch} />\n        {filtredData && <Table columns = {newColumnList} data = {filtredData} />}\n    </div>\n    )\n}\nexport default PreOrders","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ users, state, dispatch }) => {\n    const columns = useMemo(\n        () => columnsList, []\n    )\n    \n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n    })\n\n    const filtredData = filter(sortedData, state.search.keyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            {users && <Search state={state} dispatch={dispatch} users={ users.filter(e => [1,2].includes(e?.AccessLevelID)) }/>}\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\nimport Table from '../UniversalTable/TableMarkup'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport { Typography } from '@mui/material'\n\nconst styles = {\n  heading :{\n    display: 'flex',\n    flexDirection: 'row',\n    padding: '0 10px'\n  },\n  secondary: {\n    color: 'var(--lowContrast)',\n    fontSize: '.8rem',\n    padding: '0 8px',\n    textTransform: 'none'\n  },\n  table: {\n    borderTop: 'var(--border)'\n  }\n}\n\nconst Recently = ({ state }) => {\n\n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(b.AcceptanceDate) - new Date(a.AcceptanceDate);\n      });\n\n    const spreadData = spread(sortedData);\n\n    const columns = useMemo(() => columnsList, [] )\n\n   \n\n    function ifNothing(data){\n        if (data.length === 0) return <Typography style={styles.secondary}>Ð½Ð¸ÑÐµÐ³Ð¾ Ð½Ðµ Ð±ÑÐ»Ð¾ Ð´Ð¾Ð±Ð°Ð²Ð»ÐµÐ½Ð¾</Typography>\n    } \n\n    return(\n        <>\n            <Typography \n            style   = {styles.heading} \n            variant = \"subtitle1\" \n            m       = '10px 0'>\n            Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ {ifNothing(spreadData[0].objs)} \n            </Typography>\n\n            { spreadData[0].objs.length ? ( <>\n              <Table \n              columns = {columns} \n              data    = {spreadData[0].objs} \n              style   = {styles.table} />\n              </>): \n            null}\n\n\n            <Typography  \n            style={styles.heading} \n            variant=\"subtitle1\" \n            m='10px 0'>\n            ÐÑÐµÑÐ° {ifNothing(spreadData[1].objs)} \n            </Typography>\n\n            { spreadData[1].objs.length ? ( <>\n              <Table \n                columns = {columns} \n                data    = {spreadData[1].objs} \n                style   = {styles.table} />\n            </>): null}\n        </>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'ÐÑÐµÑÐ°',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.AcceptanceDate?.split('T')[0]\n\n        if (dateCreation === days[0].date) days[0].objs.push(order);\n        else if (dateCreation === days[1].date) days[1].objs.push(order);  \n    }\n\n    return days;\n};\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_SEARCH_ORDERS = gql`\n    query ($keyword: String!, $OrderStatus: Int!){\n    erp_Orders(\n      order_by: {ActualShippingDate: desc_nulls_last},\n      where: {\n      _or: [\n        { Entity: {_ilike: $keyword} }, \n        { InvoiceNumber: {_ilike: $keyword} },\n        { OrderItems: {_and: [{SerialStarts: {_lte: $keyword}}, {SerialEnds: {_gte: $keyword }}] } },\n\n        ],\n      OrderStatusID: {_eq: $OrderStatus}\n      }) {\n        ActualShippingDate\n        AwaitingDispatch\n        OrderID\n        Entity\n        InvoiceNumber\n        City\n        ShippingDate\n        PaidAmount\n        TotalAmount\n        CreatingDate\n        ManagerID\n        OrderItems {\n          Quantity\n          OrderItemID\n          Name\n        } \n        User {\n          FirstName\n        }\n    }\n  }\n`\n\n\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ALL_ORDERS_AMOUNT = gql`\nquery{\n  erp_Orders(\n    where: {OrderStatusID: {_eq: 3}},\n    order_by: {OrderID: desc},\n    limit: 1000,\n    ){\n\t\tOrderID\n    PaidAmount\n    TotalAmount\n  }\n}\n`\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_LATEST_ORDERS = gql`\nquery($limit: Int!, $OrderStatus: Int!){\n  erp_Orders(\n    order_by: {ActualShippingDate: desc_nulls_last}\n    where: { OrderStatusID: {_eq: $OrderStatus } } \n    limit: $limit\n    ){\n    ActualShippingDate\n    ShippingDate\n    AwaitingDispatch\n    OrderID\n    Entity\n    InvoiceNumber\n    City\n    PaidAmount\n    TotalAmount\n    CreatingDate\n    ManagerID\n    OrderItems {\n      Quantity\n      OrderItemID\n      Name\n    } \n    User {\n      FirstName\n    }\n  }\n}\n`","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_UNPAID_ORDERS = gql`\nquery MyQuery($unpaidIDs: [Int!], $OrderStatus: Int!) {\n    erp_Orders(where: { OrderStatusID: {_eq: $OrderStatus}, OrderID: {_in: $unpaidIDs } } ) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      ActualShippingDate\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n    }\n  }\n`","//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ALL_ORDERS_AMOUNT } from './queries/getAllOrdersAmount'\nimport { GET_ARCHIVED_LATEST_ORDERS } from './queries/getArchivedLatestOrders'\nimport { GET_ARCHIVED_UNPAID_ORDERS } from './queries/getArchivedUnpaidOrders'\n\nimport Table from '../UniversalTable/TableMarkup'\nimport sass from './archive.module.sass'\nimport { Typography } from '@mui/material/';\n\nconst PreviewTable = (props) => {\n  const { state, dispatch, columns } = props\n\n  const { data : latestOrders = [], loading: latestOrdersloading } = useQuery(GET_ARCHIVED_LATEST_ORDERS, { variables: {\n     limit: 15, \n     OrderStatus: state.reqOrderStatus\n    },\n    fetchPolicy: \"cache-and-network\"\n    });\n\n  const { loading } = useQuery(GET_ALL_ORDERS_AMOUNT, { onCompleted: (res) => {\n    dispatch({ type: 'unpaidIDs', payload: res.erp_Orders.filter(e => e.PaidAmount / e.TotalAmount < .999).map(e => e.OrderID)})\n  }})\n\n  const { data : unpaidOrders = [], loading: unpaidOrdersLoading } = useQuery(GET_ARCHIVED_UNPAID_ORDERS, { variables: {\n    unpaidIDs: state.unpaidIDs,\n    OrderStatus: state.reqOrderStatus\n  } })\n\n  const previewData = () => {\n    if (!unpaidOrders.erp_Orders || !latestOrders.erp_Orders) return []\n    return ([\n      ...unpaidOrders.erp_Orders.map(e => ({...e, unpaid: true})),\n      // Ð¿ÑÐ¾Ð²ÐµÑÑÐµÐ¼ ÐµÑÑÑ Ð»Ð¸ Ð² Ð¿Ð¾ÑÐ»ÐµÐ´Ð½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð°Ñ Ð½ÐµÐ¾Ð¿Ð»Ð°ÑÐµÐ½Ð½ÑÐ¹, ÐµÑÐ»Ð¸ ÐµÑÑÑ, ÑÐ¾ ÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð¸Ð· Ð¸Ñ Ð·Ð°ÐºÐ°Ð· Ð¸Ð· latestOrders\n      ...latestOrders.erp_Orders\n      .filter(e => !state.unpaidIDs.includes(e.OrderID))\n      .sort(function(a,b){\n        return new Date(b.ActualShippingDate) - new Date(a.ActualShippingDate);\n      })\n      ])\n  }\n\n  return (<>\n    <Typography color='textSecondary' variant=\"subtitle1\" m='10px 1rem'>\n      ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 15 Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½Ð½ÑÑ  \n    </Typography>\n\n      <Table columns = {columns} data = {previewData()} className={sass.archiveTable} showUnpaid/>\n  </>)\n}\nexport default PreviewTable","export default class OrderStatus {\n  static ordRegistration = 1 // Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ñ\n  static ordProduction = 2\n  static ordArchived = 3\n\n  static reclInbox = 10\n  static reclDecision = 11\n  static reclProduction = 12\n  static reclArchived = 13\n}","import { useMemo, useReducer } from 'react';\n\n//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ARCHIVED_SEARCH_ORDERS } from './queries/getArchivedSearchOrders'\n\n//ui\nimport sass from './archive.module.sass'\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\nimport { Typography } from '@mui/material/';\n\nimport PreviewTable from './PreviewTable';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport OS from '../../_core/OrderStatus'\nimport moment from 'moment'\n\nimport TableSearch from '../../_core/mui/TableSearch'\nimport { Box } from '@mui/system';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n      case 'reqOrderStatus': \n      case 'searchKeyword': \n      case 'unpaidIDs': \n          return {...state, [action.type]: action.payload };\n      default: \n          return {...state}\n  }\n}\nconst Archive = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    //Ð·Ð°ÐºÐ°Ð·Ñ ÐºÐ¾ÑÐ¾ÑÑÐµ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½Ð¾, Ð½Ð¾ ÐµÑÐµ Ð½Ðµ Ð¾Ð¿Ð»Ð°ÑÐµÐ½Ñ\n    reqOrderStatus: OS.ordArchived,\n    unpaidIDs: [],\n    searchKeyword: '',\n  });\n\n  const handleChange = (event) => {\n    dispatch({ type: 'reqOrderStatus', payload: event.target.value })\n  };\n\n  const { data = [], error } = useQuery(GET_ARCHIVED_SEARCH_ORDERS, { variables: {\n    keyword: '%' + state.searchKeyword + '%',\n    OrderStatus: state.reqOrderStatus\n  }})\n\n  if (error) console.error(error);\n\n  var columns = useMemo(\n    () => [...columnsList], []\n  )\n  \n  columns[3] = {\n    Header: 'Ð¤Ð°ÐºÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ°',\n    accessor: order => \n    <> { order.ActualShippingDate && moment(order.ActualShippingDate).format('DD.MM.YY') }\n    </>\n  }\n\n  const searchHandler = (e) => {\n    setTimeout(() => {\n      dispatch({ type: 'searchKeyword', payload: e.target.value})\n    }, 400)\n  }\n\n  return(\n    <>\n      <TableSearch\n      placeholder='CÑÐµÑ, ÑÑÐ»Ð¸ÑÐ¾'\n      onChange={searchHandler}\n      />\n\n      <FormControl className={sass.filterFormControl}>\n        <InputLabel variant=\"filter\">ÐÑÐ±ÑÐ°ÑÑ ÑÐ¾Ð»ÑÐºÐ¾ </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={state.reqOrderStatus}\n          label=\"Age\"\n          className={sass.filterInputBase}\n          onChange={handleChange}\n        >\n          <MenuItem value={OS.ordArchived}>ÐÐ°ÐºÐ°Ð·Ñ</MenuItem>\n          <MenuItem value={OS.reclArchived}>Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ð¸</MenuItem>\n        </Select>\n      </FormControl>\n\n    <Box marginTop={6}>\n    {!state.searchKeyword && < PreviewTable \n          state    = {state} \n          dispatch = {dispatch} \n          columns  = {columns} \n          /> }\n\n      {state.searchKeyword &&  data.erp_Orders && <>\n          <Typography color='textSecondary' variant=\"subtitle1\" m='10px 1rem'>\n            Ð ÐµÐ·ÑÐ»ÑÑÐ°Ñ Ð¿Ð¾Ð¸ÑÐºÐ° Ð¿Ð¾ Ð°ÑÑÐ¸Ð²Ñ\n          </Typography>\n          <Table columns = {columns} data = {data.erp_Orders} className={sass.archiveTable}/>\n          {!data.erp_Orders.length && \n            <Typography color='textPrimary'  m={2} variant=\"subtitle2\">-> Ð½Ð¸ÑÐµÐ³Ð¾ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð¾</Typography>\n          }  \n      </>}\n    </Box>\n\n    </>\n  )\n}\nexport default Archive;","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\n\n// apollo\nimport { useSubscription, useQuery, useMutation } from '@apollo/client'\nimport { GetOrdersSubscription } from './queries/getOrders'\nimport { GET_USERS } from '../../hasura-queries/getUsers'\nimport { INSERT_ORDER } from './queries/MutationInsertOrder';\n\n// ui \nimport {Tabs, Tab, Box, Button} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { UilPlusCircle } from '@iconscout/react-unicons';\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport Archive from './Archive/';\n\nconst StyledTabs = styled((props) => <Tabs {...props} />)(\n  ({ theme }) => ({\n    background: 'var(--LI)',\n    minHeight: '10px',\n    '& .MuiTabs-indicator': {\n      display: 'none'\n    },\n  }),\n  );\n\nconst StyledTab = styled((props) => <Tab {...props} />)(\n    ({ theme }) => ({\n      textTransform: 'none',\n      fontWeight: 500,\n      fontSize: theme.typography.pxToRem(14),\n      borderRight: '1px solid transparent',\n      borderLeft: '1px solid transparent',\n      minHeight: '10px',\n      color: 'var(--lowContrast)',\n      '&.Mui-selected': {\n        boxShadow: '0 0 15px 0px var(--shadow-color)',\n        opacity: 1,\n        backgroundColor: 'var(--L0)',\n        color: 'var(--accent) !important',\n        borderRight: 'var(--border)',\n        borderLeft: 'var(--border)',\n      },\n      '&:first-of-type':{\n        borderLeft: 'none !important',\n      },\n      '&.Mui-selected:first-of-type': {\n        borderLeft: 'none !important',\n      }\n    }),\n  );\n\n\nconst OrderListLayout = (props) => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState( store.priorityTab, store.cachedOrders, store.cachedPreOrders ));\n    const { selectedTab } = state; \n\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n  \n        options.subscriptionData.data.erp_Orders.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n          });\n\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID === 1) preOrders.push(order)\n            else if (order.OrderStatus.ID === 2) orders.push(order)\n        })\n        store.setCachedOrders(orders)\n        store.setCachedPreOrders(preOrders)\n\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    \n    const { error, loading } = useSubscription(GetOrdersSubscription, { onSubscriptionData });\n    if (error) console.error(error)\n    \n    const { data: users = []} = useQuery(GET_USERS);\n\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n      'managerID':     store.user.UserID,\n      'orderStatusID': 1,\n    }})\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        dispatch({ type: 'resetFilters'})\n        store.setPriorutyTab(newValue)\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box mb='30px'>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n  \n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n  \n    const styles = {\n      adddtn: {\n        marginLeft: 'auto',\n        marginRight: '10px',\n        display: 'flex',\n        alignSelf: 'center',\n      }\n    }\n    return(\n        <>\n        <StyledTabs value={selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\">\n            <StyledTab label=\"ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ñ\" {...a11yProps(0)} />\n            <StyledTab label=\"ÐÑÐµÑÐµÐ´Ð¾ÑÑÑ\" {...a11yProps(1)} />\n            <StyledTab label=\"ÐÐµÐ´Ð°Ð²Ð½Ð¸Ðµ\"   {...a11yProps(2)} />\n            <StyledTab label='ÐÑÑÐ¸Ð²'      {...a11yProps(3)} />\n\n           <Box style={styles.adddtn}>\n            <Button onClick={createOrderHandler} variant='iconic'><UilPlusCircle /></Button>\n           </Box>\n        </StyledTabs>\n\n\n        <TabPanel value={selectedTab} index={0}>\n            <PreOrders state={state} dispatch={dispatch}/>\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={1} >\n            <Priority state={state} dispatch={dispatch} users={users.erp_Users} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={2}>\n            <Recently state={state} dispatch={dispatch} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={3}>\n            <Archive state={state} dispatch={dispatch} />\n        </TabPanel>\n\n      </>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    AwaitingDispatch\n    ActualShippingDate\n    AcceptanceDate\n    OrderID\n    ManagerID\n    OrderStatusID\n    City\n    ShippingDate\n    CreatingDate\n    Comment\n    Entity\n    InvoiceNumber\n    NeedAttention\n    OrderNumber\n    PaidAmount\n    TotalAmount\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems(order_by: {OrderItemID: asc}) {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialStarts\n      SerialEnds\n    }\n    CheckListUnits(order_by: {CheckListUnitID: desc}) {\n      CheckListUnitID\n      OrderID\n      IsComplited\n      Point\n    }\n    Docs {\n      Key\n      FileName\n    }\n    PaymentHistories(\n      where: {PaidAmount: {_neq: 0}}\n    ){\n      PaidAmount\n      Date\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;\n\n\nexport const UPDATE_ORDER_ITEM = gql`\nmutation($OrderItemID: Int!, $FullName: String!, $Name: String!, $Quantity: Int!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n    _set: {FullName: $FullName, Name: $Name, Quantity: $Quantity}) {\n    Name\n    FullName\n    OrderItemID\n    Quantity\n  }\n}\n\n`;\nexport const UPDATE_ORDER_ITEM_METADATA = gql`\nmutation($OrderItemID: Int!, $Fitter: String!, $SerialNumber: String!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n     _set: {Fitter: $Fitter, SerialNumber: $SerialNumber}\n  ){\n    OrderItemID\n  }\n}\n`","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu, MenuItem, TextField } from '@mui/material';\nimport { UilEllipsisV } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n  \nconst OrderItemActions = ({ editState, item, editItemHandler, deleteItemHandler, updateItem, setOIDialog }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    'serialNumber': item.SerialNumber,\n    'fitter': item.Fitter\n  });\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n\n    // if (item.SerialNumber !== state.serialNumber || item.Fitter !== state.fitter){\n    //   updateItem({ variables: {\n    //     'OrderItemID': item.OrderItemID,\n    //     'Fitter': state.fitter,\n    //     'SerialNumber': state.serialNumber.toString()\n    //   } })\n    // }\n  };\n    \n  return (\n  <div className='noprint'>\n    <Button sx={{\n      minWidth: '20px'\n    }} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size='small'>\n      <UilEllipsisV className={sass.moreVertIcon}/>\n    </Button>\n    <Menu\n      id       = \"simple-menu\"\n      anchorEl = {anchorEl}\n      keepMounted\n      open     = {Boolean(anchorEl)}\n      onClose  = {handleClose}\n    >\n      {/* <div className={sass.inputListItem} >\n        <TextField \n          type=\"number\"\n          label=\"Ð¡ÐµÑÐ¸Ð¹Ð½ÑÐ¹ Ð½Ð¾Ð¼ÐµÑ\" \n          multiline\n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'serialNumber': e.target.value\n          }))}\n          // defaultValue={state.serialNumber}\n          />\n      </div>\n\n      <div className={sass.inputListItem} >\n        <TextField \n          label=\"Ð¡Ð±Ð¾ÑÑÐ¸Ðº\"  \n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'fitter': e.target.value\n          }))}\n          defaultValue={state.fitter}\n        />\n      </div> */}\n\n\n      {editState && (\n        <div className={sass.actionsWrapper}>\n          <MenuItem onClick={ (e) => {\n              setOIDialog(true)\n              handleClose();\n              editItemHandler(e, item);\n          }}>Ð ÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°ÑÑ</MenuItem>\n\n          <MenuItem \n            className={sass.deleteButton}\n            onClick={ ()=> {\n              handleClose();\n              deleteItemHandler(item.OrderItemID);\n          }}>Ð£Ð´Ð°Ð»Ð¸ÑÑ</MenuItem>\n        </div>\n      )}\n\n    </Menu>\n  </div>\n  );\n}\n\nOrderItemActions.propTypes = { \n    editState: PropTypes.bool,\n    item:      PropTypes.object,\n    editItemHandler:  PropTypes.func, \n    deleteItemHandler: PropTypes.func,\n    updateItem: PropTypes.func\n}\n\nexport default OrderItemActions\n\n","import { useReducer, useEffect, useState } from 'react'\n\n//apollo \nimport { useMutation } from \"@apollo/client\"\nimport { \nDELETE_ORDER_ITEM, \nINSERT_ORDER_ITEM, \nUPDATE_ORDER_ITEM, \nUPDATE_ORDER_ITEM_METADATA \n} from \"./queries/MutationOrderItem\";\n\n// ui \nimport { Button, TextField, Box, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport sass from './sass/composition.module.sass'\nimport OrderItemActions from './OrderItemActions'\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n    id: null,\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                id: action.payload[0],\n                name: action.payload[1],\n                fullName: action.payload[2],\n                quantity: action.payload[3]\n            }\n        default: \n            return {...state}\n    }\n\n}\n\nconst OrderComposition = props => {\n    const { data, editState, refetch, orderID, OIDialog, setOIDialog } = props\n    const [ deleteOrderItemMutation ]         = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ]         = useMutation(INSERT_ORDER_ITEM);\n    const [ updateOrderItemMutation ]         = useMutation(UPDATE_ORDER_ITEM);\n    const [ updateOrderItemMetadataMutation ] = useMutation(UPDATE_ORDER_ITEM_METADATA);\n    const [state, dispatch ] = useReducer(reducer, initialState)\n    \n    const deleteItemHandler = (itemID) => {\n        deleteOrderItemMutation({ variables: { orderItemID: itemID} })\n        refetch()    \n    }\n    const editItemHandler = (e, item) => {\n        dispatch({ type: 'editItem', payload: [item.OrderItemID, item.Name, item.FullName, item.Quantity] })\n    }\n\n    const closeOIDialog = () => {\n      setOIDialog(false);\n    };\n\n    useEffect(() => {\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n    const insertOrderItem = () => {\n        closeOIDialog();\n        if (state.quantity === '' || state.name === '') return null\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const updateOrderItem = () => {\n      if (state.quantity === '' || state.name === '') return null\n      closeOIDialog();\n      updateOrderItemMutation({variables: { \n        OrderItemID: state.id,\n        Name: state.name, \n        Quantity: parseInt(state.quantity),\n        FullName: state.fullName, }}).then( () => { dispatch({ type: 'reset'}); refetch() })    \n  }\n  \n    return(<>     \n        {data.map( (el, index) => \n        <div\n          key={el.OrderItemID}\n          className={sass.Unit} \n        >\n              <span className={sass.index}>{index+1}</span>\n              <Typography color='textPrimary' className={sass.name}> {el.Name} </Typography>\n              <span  className={sass.quantity}> {el.Quantity}</span>\n\n              {editState && \n              <OrderItemActions\n                  {...props}\n                  item={el}\n                  editItemHandler={editItemHandler}\n                  deleteItemHandler={deleteItemHandler}\n                  updateItem={updateOrderItemMetadataMutation}\n               />\n               }\n\n              <div className={sass.fullName}> { el.FullName }</div>\n\n        </div>\n        )}\n        \n      <Dialog maxWidth='sm' fullWidth={true} open={OIDialog} onClose={closeOIDialog}>\n        <DialogTitle>ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ñ</DialogTitle>\n        <DialogContent>\n        <Box className={sass.addOrderItem}>\n          <TextField\n            label=\"ÐÐ°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ\"\n            value={state.name}\n            variant='filled'\n            sx={{mb: '8px'}}\n            onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"ÐÐ¾Ð»Ð½Ð¾Ðµ Ð½Ð°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ\"\n            multiline\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.fullNameInput}\n            value={state.fullName}\n            onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"ÐÐ¾Ð»-Ð²Ð¾\"\n            type=\"number\"\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.quantityInput}\n            value={state.quantity}\n            onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n            />\n        </Box>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'start'}} >\n            {state.name && state.quantity && (!state.id \n            ? <Box><Button variant='contained' onClick={insertOrderItem}>ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ</Button> </Box>\n            : <Box><Button variant='contained' onClick={updateOrderItem}>ÐÐ·Ð¼ÐµÐ½Ð¸ÑÑ</Button></Box> )}\n              <Box  ><Button onClick={() => {\n                  closeOIDialog();\n                  dispatch({type: 'reset'});\n              }}>ÐÐ°ÐºÑÑÑÑ</Button></Box>\n        </DialogActions>\n      </Dialog>\n    </>)\n}\n\nexport default OrderComposition","import  moment  from 'moment'\nimport \"./rightPanel.sass\";\nimport { Typography, Box } from '@mui/material/';\n\nimport { styled } from '@mui/material/styles';\n\nconst OrderInfoCard = (props) => {\n  const { heading, secondaryHeading } = props;\n  return (\n    <Box className=\"OrderInfoCard\" sx={{ color: 'text.primary' }}>\n    <div className='row'>\n      <div className='heading'>\n        {heading}\n      </div>\n      <div className='secondaryHeading noprint'>\n        {secondaryHeading}\n      </div>\n    </div>\n\n    <div className='body'>\n      {props.children}\n    </div>\n  </Box>\n  )\n}\nconst Pre = styled((props) => <Typography {...props} />)(\n  ({ theme }) => ({\n    color: theme.palette.text.secondary,\n    fontSize: '.7rem'\n  }),\n  );\n\nconst OrderMeta = (props) => {\n   const { data } = props;\n    \n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ' '\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n   \n    const paidVisualization = () => {\n      if (data.PaymentHistories.length === 0 || !data.PaidAmount || !data.TotalAmount) return null\n\n      return (\n        <OrderInfoCard className='noprint' heading=\"ÐÐ»Ð°ÑÐµÐ¶Ð¸\" secondaryHeading={`${data.TotalAmount} â½`}>\n           <table className='paidVisualization'>\n           <tbody>\n            {data.PaymentHistories.map(e => (\n                <tr key={e.Date}>\n                  <td>{(e.PaidAmount / data.TotalAmount * 100).toFixed(0)} % </td>\n                  <td>{moment(e.Date).format('DD.MM.YY')}</td>\n              </tr>\n            ))}\n          </tbody>\n          </table>\n        </OrderInfoCard>\n      )\n    }\n    \n    const aboutOrder = () => {\n      const columns = [\n        {\n          'heading': \"ÐÐµÐ½ÐµÐ´Ð¶ÐµÑ\",\n          'data': `${data.User?.FirstName} ${data.User?.LastName || 'undefined'}`, \n        },\n        {\n          'heading': \"Ð¡Ð¾Ð·Ð´Ð°Ð½\",\n          'data': moment(data.CreatingDate).format('DD.MM.YY'),\n        },\n        {\n          'heading': \"Ð Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸\",\n          'data': moment(data.AcceptanceDate).format('DD.MM.YY'), \n        },\n        {\n          'heading': \"Ð¤Ð°ÐºÑ. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°\",\n          'data': moment(data.ActualShippingDate).format('DD.MM.YY'), \n        }, \n        {\n          'heading': 'ÐÑÐ¾Ð±Ð»ÐµÐ¼ÐºÐ¸ Ñ',\n          'data': moment(data.NeedAttention?.split(',')[1] || null).format('DD.MM.YY hh:mm')\n        }\n      ]\n      return (\n        <OrderInfoCard heading=\"Ð Ð·Ð°ÐºÐ°Ð·Ðµ\">\n          <table><tbody>\n             {columns.map(el => {\n                if (!el.data || el.data === 'Invalid date') return null\n                return <tr key={`${el.heading} ${el.data}`}>\n                  <td>{el.heading}</td>\n                  <td>{el.data}</td>\n                </tr>\n                }\n              )}\n          </tbody></table>\n        </OrderInfoCard>\n      )\n    }\n  return (<>\n      <div className=\"wrap\">\n\n          <Box className='significantInfo' sx={{ color: 'text.primary' }}>\n            <div className='bold'>\n              <Pre>ÐÐ»Ð°Ð½. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°</Pre>\n              {data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY')}\n            </div>\n            <div className='bold'>\n              <Pre>ÐÐ¾Ð¼ÐµÑ Ð·Ð°ÐºÐ°Ð·Ð°</Pre>\n              {data.OrderNumber}\n            </div>\n            <div className='bold'>\n              <Pre>Ð¡ÑÐµÑ / Ð¾Ð¿Ð»Ð°ÑÐ°</Pre>\n              {\"â \"+ (data.InvoiceNumber || '')+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n            </div>\n          </Box>\n\n          <Box className='OrderComment'>\n              <Pre>ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹</Pre>\n              {data.Comment}\n          </Box>\n\n        {aboutOrder()}\n        {paidVisualization()}\n      </div>\n  </>)\n}\n\nexport default OrderMeta\n","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($OrderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $OrderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($OrderID: Int!, $AwaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { AwaitingDispatch: $AwaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;\nexport const UPDATE_NEED_ATTENTION = gql`\nmutation MyMutation($OrderID: Int!, $NeedAttention: String! ) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { NeedAttention: $NeedAttention }\n  ) {\n\t\tOrderID\n    NeedAttention\n  }\n}\n`\n\nexport const MOVE_ORDER_TO_ARCHIVE = gql`\n  mutation MyMutation($OrderID: Int!, $ActualShippingDate: timestamptz!, $OrderStatusID: Int!) {\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID}, \n      _set: {\n        OrderStatusID: $OrderStatusID,\n        AwaitingDispatch: false,\n        ActualShippingDate: $ActualShippingDate,\n        }){\n      OrderID\n      OrderStatusID\n    }\n  }\n`;\n\nexport const MOVE_ORDER_TO_PRIORITY = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_PAYMENT = gql`\n  mutation($PaidAmount: numeric!, $Date: timestamptz!, $OrderID: Int!) {\n    insert_erp_PaymentHistory_one(object: {PaidAmount: $PaidAmount, OrderID: $OrderID, Date: $Date}) {\n      ID\n      OrderID\n    }\n}\n`;","import { useEffect } from 'react';\nimport './EditRightInfoPanel.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\nimport { INSERT_PAYMENT } from '../queries/MutationPaymentHistory'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nimport { TextField, Autocomplete } from '@mui/material';\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'â½ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch, users }) => {  \n  \n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n    const [insertPayment] = useMutation(INSERT_PAYMENT)\n  \n    function saveChanges(){\n      console.log('doing mutation for order', orderID, fields)\n      updateOrderInfo({variables: {\n        OrderID: orderID,\n        fields,\n      }})\n\n\n      if (fields.PaidAmount) insertPayment({ variables: {\n          Date: new Date,\n          OrderID: orderID,\n          PaidAmount: fields.PaidAmount\n        }})\n      \n      refetch()\n    }\n    useEffect(() => {\n        fields = {};\n        return () => {\n            saveChanges()\n        };\n    }, []);\n\n    function findSelectedManeger(users, managerID){\n      if (!users) return null\n      const index = users.indexOf(users.find(user => user.UserID === managerID))\n      return users[index]\n    }\n\n  return(\n    <form className=\"EditableInfo\">  \n      <div className=\"wrap\">\n       <TextField\n          label=\"ÐÐ»Ð°Ð½. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            if (e.target.value === 'Invalid date') e.target.value=null\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          InputProps={{\n            inputComponent: DateFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼ÐµÑ ÑÑÐµÑÐ°\"\n          type=\"number\"\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼ÐµÑ Ð·Ð°ÐºÐ°Ð·Ð°\"\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={users.filter( (user) => user.AccessLevelID != 3)}\n          getOptionLabel={(option) => `${option.FirstName} ${option.LastName}`}\n          renderInput={(params) => <TextField {...params} label=\"ÐÐµÐ½ÐµÐ´Ð¶ÐµÑ\"/>}\n          defaultValue={() => findSelectedManeger(users, data.ManagerID)}\n          onChange={(event, newValue) => {\n            fields['ManagerID'] = (newValue?.UserID || null)\n          }}\n        />\n\n         <TextField\n          label=\"Ð®Ñ Ð»Ð¸ÑÐ¾\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"ÐÐ¾ÑÐ¾Ð´\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Ð¡ÑÐ¼Ð¼Ð° Ð·Ð°ÐºÐ°Ð·Ð°\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n          />\n        \n        <TextField\n          label=\"ÐÐ¿Ð»Ð°ÑÐµÐ½Ð¾\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹\"\n          multiline\n          InputProps={{\n            sx: {fontSize: '.9rem !important'}\n          }}\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n       </div>\n    </form>\n  )\n}\n\nexport default EditableInfo","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nexport default function ConfirmDialog(props) {\n  const { filename, open, handleClose, onConfirmF} = props\n  return (\n    <div>\n      <Dialog\n        open={open}\n        minWidth='xs'\n\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" sx={{\n          color: 'var(--lowContrast) !important',\n          'span': {\n            color: 'var(--highContrast) !important'\n          }\n        }}>\n            Ð£Ð´Ð°Ð»Ð¸ÑÑ <span>{filename}</span> ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>ÐÑÐ¼ÐµÐ½Ð¸ÑÑ</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Ð£Ð´Ð°Ð»Ð¸ÑÑ \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useContext, useState, useEffect } from 'react';\nimport { Context } from '../../../index'\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from '../queries/MutationOrderDocs';\n\nimport './docs.sass'\n\nimport ConfirmDialog from './ConfirmDialog';\n\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const { store } = useContext(Context)\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length === 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n    useEffect(() => {\n        setOpen(false)\n    }, [editState]);\n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        await store.deleteFile(fileOnDelete.Key, deleteFileMutation)\n        refetch()\n    }\n\n    const attachedFiles = data.map(\n        file => {\n            // delite file\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n             // opne file\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    rel=\"noreferrer\"\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n            <div className='filesContainer'>\n                {attachedFiles}\n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n\n            <ConfirmDialog \n                filename={fileOnDelete?.FileName} \n                open={open}  \n                handleClose={handleClose}\n                onConfirmF={deleteFile}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_COMMENT = gql`\nmutation($OrderID: Int!, $Text: String!, $UserID: Int!) {\n  insert_erp_Comments_one(\n    object: {OrderID: $OrderID, Text: $Text, UserID: $UserID}) \n    {\n    CommentID\n    OrderID\n    Text\n    Timestamp\n    UserID\n  }\n}\n`;\n\nexport const DELETE_ORDER_COMMENT = gql`\n mutation($CommentID: Int!) {\n  delete_erp_Comments_by_pk(CommentID: $CommentID) {\n    CommentID\n  }\n}\n`;\n\nexport const UPDATE_ORDER_COMMENT = gql`\nmutation($CommentID: Int!, $Text: String!) {\n  update_erp_Comments_by_pk(\n    pk_columns: {CommentID: $CommentID},\n    _set: {Text: $Text}) \n    {\n    OrderID\n    Text\n    Timestamp\n    UserID\n    CommentID\n  }\n  }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_NOTIFICATION = gql`\nmutation($CommentID: Int!, $MentionedUser: Int!, $OrderID: Int!){\n  insert_erp_Notifications(objects: \n    { CommentID: $CommentID, MentionedUser: $MentionedUser, OrderID: $OrderID }\n    ){\n    returning {\n      MentionedUser\n      ID\n    }\n  }\n}\n`;\n\n\n","import gql from 'graphql-tag'\n\nexport const SUBSCRIBTION_ORDER_COMMENT = gql`\n  subscription MySubscritp($OrderID: Int!) {\n    erp_Comments(where: {OrderID: {_eq: $OrderID}}, order_by: {CommentID: desc}) {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n  }\n`\n","import sass from './index.module.sass'\nimport moment from 'moment'\n\nconst Comment = (props) => {\n  const { data, userID, updateComment, deleteComment, nowEditing, setNowEditing } = props\n\n  function sender(){\n    return `${data.User.FirstName} ${data.User.LastName}`\n  }\n  \n  function actions(){\n    if (userID === data.User.UserID && nowEditing?.CommentID !== data.CommentID ) return (\n        <div onClick={()=> deleteComment(data.CommentID)}>Ð£Ð´Ð°Ð»Ð¸ÑÑ</div>\n    )\n  }\n  function timestamp(){\n    const date = moment(data.Timestamp)\n    return date.format('MMM D') +' at '+ date.format('hh:mm')\n  }\n\n  function getCommentContent(){\n    if (userID === data.User.UserID) return <div \n    contentEditable = \"true\"\n    key             = {data.CommentID}\n    className       = {sass.commentContent}\n    suppressContentEditableWarning = \"true\"\n    onBlur={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n    }}\n    onMouseLeave={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n      setNowEditing(null)\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text}}>\n    </div>\n\n    else return <div \n    onClick={(e) => {\n      // ÐµÑÐ»Ð¸ ÐºÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ ÑÐµÐº-Ð»Ð¸ÑÑ Ð²ÑÐ¿Ð¾Ð»Ð½ÑÐµÐ¼ Ð¼ÑÑÐ°ÑÐ¸Ñ Ð½Ð° Ð¾Ð±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ðµ ÑÐ¾ÑÑÐ¾ÑÐ½Ð¸Ñ\n      if (e.currentTarget.innerHTML.toString().includes(sass.checklistUnit, 0)){\n        updateComment(data.CommentID, e.currentTarget.innerHTML)\n      }\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text }} \n    className={sass.commentContent}>\n    </div>\n\n  }\n\n  return (\n    <div className={sass.commentUnit}>\n\n      <div className={sass.commentHeader}>\n        <div className={sass.sender}> {sender()} </div>\n        <div className={sass.actions}>{actions()}</div>\n        <div className={sass.time}> {timestamp()} </div>\n      </div>\n      {getCommentContent()}\n\n    </div>\n  )\n}\nexport default Comment ","import gql from 'graphql-tag'\n\nexport const GET_ALL_USERS = gql`\nquery MyQuery {\n  erp_Users {\n    FirstName\n    LastName\n    UserID\n  }\n}\n\n`\n","import { Menu, MenuItem } from '@mui/material/';\nimport sass from './index.module.sass'\n\nconst Ð¡ommandsPopover = props => {\n  const {anchorEl, open, handleClose, setAnchorULP, inputRef} = props\n\n  function insertTodoinDOM (){\n    const root = document.getElementById('Comments_InputForm')\n    const elem = document.createElement('div')\n    elem.classList.add(sass.checklistUnit)\n    root.appendChild(elem)\n  }\n\n  function mentionHandler(){\n    handleClose();\n    setAnchorULP(inputRef.current)\n  }\n  return (\n    <Menu\n        id=\"Comments__commandMenu\"\n        aria-labelledby=\"Comments_InputForm\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => {\n          handleClose();\n          insertTodoinDOM();\n        }}>Ð§ÐµÐºÐ»Ð¸ÑÑ</MenuItem>\n        <MenuItem onClick={mentionHandler}>Ð£Ð¿Ð¾Ð¼ÑÐ½ÑÑÑ</MenuItem>\n    </Menu>\n  )\n}\n\nexport default Ð¡ommandsPopover\n","import { Menu, MenuItem } from '@mui/material/';\nimport sass from './index.module.sass'\nimport placeCaretAtEnd from '../../_core/placeCaretAtEnd'\n\n\nconst UserListPopover = props => {\n  const { anchorEl, open, handleClose, users, inputRef } = props;\n\n  const onClick = (e) => {\n    handleClose();\n    const userID = e.target.getAttribute('userid')\n    const user = users.find(e => e.UserID == userID)\n    const inputform = document.getElementById('Comments_InputForm')\n    const elem = document.createElement('span')\n    inputRef.current.innerText = inputRef.current.innerText.slice(0, -1)\n\n    elem.innerHTML= '@' + [user.FirstName, user.LastName].join(' ') + ', '\n    elem.classList.add(sass.mentionedUserHiglight)\n    elem.dataset.mentionedUser = user.UserID\n    elem.contentEditable = 'false'\n    inputform.appendChild(elem)\n\n    placeCaretAtEnd(inputform)\n\n    const space = document.createElement('span')\n    inputform.appendChild(space)\n  }\n\n  return (\n    <Menu\n    id=\"Comments__userListMenu\"\n    aria-labelledby=\"Comments_InputForm\"\n    anchorEl={anchorEl}\n    open={open}\n    onClose={handleClose}\n  >\n  \n    { users && users.map( (user) => (\n      <MenuItem \n      sx      = {{\n        padding: '4px 10px',\n      }}\n      userid  = {user.UserID} \n      key     = {user.UserID} \n      onClick = {onClick}>\n        {user.FirstName} {user.LastName}\n      </MenuItem>\n    ))}\n \n  </Menu>\n  )\n}\nexport default UserListPopover","export default function placeCaretAtEnd(el) {\n  el.focus();\n  if (typeof window.getSelection != \"undefined\"\n          && typeof document.createRange != \"undefined\") {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n  } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n  }\n}","import { useState } from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../queries/GetAllUsers';\n\n//ui\nimport { Box } from '@mui/material/';\nimport { UilMessage } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n\n// components\nimport Ð¡ommandsPopover from './Ð¡ommandsPopover'\nimport UserListPopover from './UserListPopover';\n\nconst InputForm = props => {\n  const { insertComment, inputRef } = props\n\n  const { data: users = [] } = useQuery(GET_ALL_USERS)\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  // User List Popover\n  const [anchorULP, setAnchorULP] = useState(null)\n\n  function inputHandler(e){\n    if (e.target.innerText.trim() === '/'){\n      setAnchorEl(e.target)\n      e.target.innerHTML = ''\n    }\n    if (e.target.innerText.trim() === '@'){\n      setAnchorULP(e.target)\n    }\n  }\n\n  function keyPressHandler(e){\n    if ((e.ctrlKey || e.metaKey) && (e.keyCode === 13 || e.keyCode === 10)) {\n      insertComment()\n    }\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleCloseUserListPopover = () => {\n    setAnchorULP(null)\n  }\n\n  return (\n    <div className={`${sass.commentInputForm} noprint`}>\n      \n      <Ð¡ommandsPopover \n      setAnchorULP = {setAnchorULP} \n      anchorEl     = {anchorEl} \n      open         = {Boolean(anchorEl)} \n      handleClose  = {handleClose}\n      inputRef     = {inputRef} />\n      <UserListPopover \n      anchorEl    = {anchorULP} \n      open        = {Boolean(anchorULP)} \n      handleClose = {handleCloseUserListPopover}\n      users       = {users.erp_Users}\n      inputRef    = {inputRef} />\n\n      <Box id=\"Comments_InputForm\"\n        aria-controls=\"Comments__commandMenu\"\n        aria-haspopup=\"true\"\n        contentEditable='true'\n        ref={inputRef}\n        sx={{ minHeight: 20, padding: '10px 5px'}}\n        data-ph=\"ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹ Ð¸Ð»Ð¸ ' / ' Ð´Ð»Ñ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ\"\n        suppressContentEditableWarning={true}\n        onInput={inputHandler}\n        onKeyUp={keyPressHandler}\n        >\n      </Box>\n    \n      <div onClick={insertComment} className={sass.saveButton}><UilMessage/></div>\n    </div>\n  )\n}\nexport default InputForm","import { useState, useRef, useEffect } from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { \n  INSERT_ORDER_COMMENT,\n  UPDATE_ORDER_COMMENT,\n  DELETE_ORDER_COMMENT \n} from '../queries/MutationOrderCommnets'\nimport { INSERT_NOTIFICATION } from '../queries/MutationNotification';\nimport { SUBSCRIBTION_ORDER_COMMENT } from '../queries/SubscriptionComments'\nimport sass from './index.module.sass'\n\nimport Comment from './Comment'\nimport InputForm from './InputForm';\nimport { Typography } from '@mui/material';\n\nconst CommentsList = (props) => {\n  const { orderID, user } = props\n  const [ insertOrderCommentMutation ] = useMutation(INSERT_ORDER_COMMENT);\n  const [ updateOrderCommentMutation ] = useMutation(UPDATE_ORDER_COMMENT);\n  const [ deleteOrderCommentMutation ] = useMutation(DELETE_ORDER_COMMENT);\n  const [ insertNotificationMutation ] = useMutation(INSERT_NOTIFICATION);\n\n  var   inputRef = useRef();\n  const [nowEditing, setNowEditing] = useState();\n  \n  const { data: comments = [], loading } = useSubscription(SUBSCRIBTION_ORDER_COMMENT, { variables: { OrderID: orderID }});\n\n  function insertComment(){\n    const text = inputRef.current.innerHTML\n    if (!text) return null\n    \n    const root = document.getElementById('Comments_InputForm')\n    const mentioned = root.querySelectorAll(`.${sass.mentionedUserHiglight}`)\n    insertOrderCommentMutation({ variables: {\n      OrderID: orderID,\n      UserID: user.UserID,\n      Text: text\n      }\n    }).then((res) => {\n      const { CommentID, OrderID } = res.data.insert_erp_Comments_one\n        mentioned.forEach( el => {\n          const MentionedUser = el.dataset.mentionedUser\n          insertNotificationMutation({ variables: {\n            CommentID, OrderID, MentionedUser\n          }})\n    \n        })\n      }\n    )\n    inputRef.current.innerText = ''\n  }\n\n  function updateComment(id, newText){\n    updateOrderCommentMutation({ variables: {\n      CommentID: id,\n      Text: newText,\n    }})\n  }\n\n  function deleteComment(id){\n    deleteOrderCommentMutation({ variables: {\n      CommentID: id\n    }\n  })\n  }\n  \n  function switchTodo(e) {\n    e.target.classList.toggle(sass.checklistUnit_complited)\n  }\n\n  useEffect(() => {\n    const els = [...document.querySelectorAll(`div.${sass.commentUnit} div.${sass.checklistUnit}`)]\n    els.forEach( el => {\n      el.addEventListener('click', switchTodo, false);\n    }, {once : true})\n    return () => {\n      els.forEach( el => {\n        el.removeEventListener('click', switchTodo, false);\n      })\n    }\n  }, [comments])\n\n  const line = comments?.erp_Comments?.length ? sass.commentListThread : ''\n  \n  return(\n    <div className={`${sass.commentsListWrapper} ${line}`}>\n      <InputForm \n      insertComment={insertComment} \n      inputRef={inputRef} \n      />\n\n     {!loading ?\n      comments?.erp_Comments?.map( (comment) => <Comment \n        data={comment} \n        key={comment.CommentID}\n        userID={user.UserID}\n        deleteComment={deleteComment}\n        updateComment={updateComment}\n        nowEditing={nowEditing}\n        setNowEditing={setNowEditing}\n      />): (\n        <Typography m=\"10px\" variant='subtitle2'>Ð·Ð°Ð³ÑÑÐ·ÐºÐ°..</Typography>\n      )}\n    </div>\n  )\n}\n\nexport default CommentsList","export default class UserStatus {\n  static general    = 1 \n  static management = 2\n  static bookkeeping = 4\n  static manufacture = 3\n}","import {gql} from 'graphql-tag'; \n\nexport const DELETE_ORDER = gql`\nmutation MyMutation($OrderID: Int!) {\n  delete_erp_Orders_by_pk(OrderID: $OrderID) {\n    OrderID\n  }\n}\n`;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilArchive,\n } from '@iconscout/react-unicons'\n\nexport default function TransferOrderConfirmDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (<>\n\n  <MenuItem onClick={handleClickOpen}>\n    <ListItemIcon>\n      <UilArchive/>\n    </ListItemIcon>\n    <ListItemText>\n          ÐÑÐ³ÑÑÐ¶ÐµÐ½\n    </ListItemText>\n  </MenuItem>\n\n\n    <Dialog\n      open={open}\n      maxWidth='xs'\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        ÐÐµÑÐµÐ½ÐµÑÑÐ¸ Ð² Ð°ÑÑÐ¸Ð²?\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          ÐÐ°ÐºÐ°Ð· ÑÐ´Ð°Ð»Ð¸ÑÑÑ Ð¸Ð· Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸, Ð½Ð¾ ÐµÐ³Ð¾ Ð² Ð»ÑÐ±Ð¾Ðµ Ð²ÑÐµÐ¼Ñ Ð¼Ð¾Ð¶Ð½Ð¾ Ð±ÑÐ´ÐµÑ Ð½Ð°Ð¹ÑÐ¸ Ð² Ð°ÑÑÐ¸Ð²Ðµ Ð¿Ð¾ Ð½Ð¾Ð¼ÐµÑÑ ÑÑÐµÑÐ°, ÑÑÐ»Ð¸ÑÑ, Ð¼Ð°ÑÐºÐ¸ÑÐ¾Ð²ÐºÐµ Ð¿ÑÐ¸Ð²Ð¾Ð´Ð°.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color='info' onClick={handleClose} >ÐÑÐ¼ÐµÐ½Ð¸ÑÑ</Button>\n        <Button color='secondary' onClick={()=> {\n          handleClose()\n          props.transferOrderTo()\n        }}>\n          ÐÐµÑÐµÐ½ÐµÑÑÐ¸ \n        </Button>\n      </DialogActions>\n    </Dialog>\n\n\n  </>);\n}","import TransferOrderConfirmDialog from '../Dialogs/TransferOrderConfirmDialog'\nimport OS from '../../../_core/OrderStatus';\n\nconst OrderActions = (props) => {\n  const { order, transferOrderTo} = props\n\n  if ( [OS.ordProduction].includes(order.OrderStatusID) ) return (\n    <TransferOrderConfirmDialog transferOrderTo={() => transferOrderTo(3) }/>  \n  )\n\n  return null\n}\nexport default OrderActions","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilTrashAlt, \n  UilFileCheck,\n } from '@iconscout/react-unicons'\n\nimport OS from '../../../_core/OrderStatus';\n\n\nconst PreOrderActions = (props) => {\n  const { order, transferOrderToPriority, mutationDeleteOrderHandler} = props\n\n  if ( [OS.ordRegistration].includes(order.OrderStatusID)) return (\n    <div>\n        <MenuItem onClick={transferOrderToPriority}>\n        <ListItemIcon>\n          <UilFileCheck/> \n        </ListItemIcon>\n        <ListItemText >\n            Ð Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ\n        </ListItemText>\n      </MenuItem>\n      <MenuItem sx={{ color: 'var(--danger)', 'svg': {\n        color: 'var(--danger)'\n        }}}\n        onClick={mutationDeleteOrderHandler}\n        >\n        <ListItemIcon>\n          <UilTrashAlt/>\n        </ListItemIcon>\n        <ListItemText>Ð£Ð´Ð°Ð»Ð¸ÑÑ Ð¿ÑÐµÐ´Ð°Ð·ÐºÐ°Ð·</ListItemText>\n      </MenuItem>\n    </div>\n  )\n  return null\n}\nexport default PreOrderActions","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilExclamationTriangle, \n  UilClock,\n } from '@iconscout/react-unicons'\nimport OS from '../../../_core/OrderStatus';\n\nconst OrderStatusesActions = (props) => {\n  const { order, needAttentionHandler, awaitingDispatchHandler} = props\n\n  const needAttention = ( order.NeedAttention?.split(',')[0] === 'true' )\n\n  if ( [OS.ordProduction, OS.reclInbox, OS.reclDecision, OS.reclProduction].includes(order.OrderStatusID) ) return (\n    <div>\n      <MenuItem \n        className={ order.AwaitingDispatch? 'awaitingDispatch': ''}\n        onClick={awaitingDispatchHandler}>\n        <ListItemIcon>\n          <UilClock/>\n        </ListItemIcon>\n        <ListItemText>ÐÐ¶Ð¸Ð´Ð°ÐµÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ¸</ListItemText>\n      </MenuItem>\n      \n      <MenuItem \n        className={ needAttention ? 'needAttention': ''}\n        onClick={needAttentionHandler}>\n        <ListItemIcon>\n          <UilExclamationTriangle/>\n        </ListItemIcon>\n        <ListItemText>Ð¢ÑÐµÐ±ÑÐµÑ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ</ListItemText>\n      </MenuItem>\n    </div>\n  )\n  return null\n}\nexport default OrderStatusesActions","import {\n  MenuItem,\n  ListItemIcon,\n  ListItemText\n} from '@mui/material/';\n\nimport { \n  UilTrashAlt, \n} from '@iconscout/react-unicons'\n\nimport TransferOrderConfirmDialog from '../Dialogs/TransferOrderConfirmDialog';\nimport OS from '../../../_core/OrderStatus';\n\nconst ReclamationActions = (props) => {\n  const { order, transferOrderToArchive, mutationDeleteOrderHandler } = props\n  const ifInbox = () => {\n    if (order.OrderStatusID === OS.reclInbox) return true\n  }\n\n  // const ifDecision = () => {\n  //   if (order.OrderStatusID === OS.reclDecision) return true\n  // }\n\n  const ifInproduction = () => {\n    if (order.OrderStatusID === OS.reclProduction) return true\n  }\n\n return (<>\n  {ifInproduction() && \n        <TransferOrderConfirmDialog transferOrderTo={() => transferOrderToArchive(13)}/>  \n  }\n  {ifInbox() && \n      <MenuItem sx={{ color: 'var(--danger)', 'svg': {\n        color: 'var(--danger)'\n      }}}\n      onClick={mutationDeleteOrderHandler}\n      >\n      <ListItemIcon>\n        <UilTrashAlt/>\n      </ListItemIcon>\n      <ListItemText >Ð£Ð´Ð°Ð»Ð¸ÑÑ</ListItemText>\n      </MenuItem>\n    }\n\n </>)\n}\nexport default ReclamationActions","import { useHistory } from \"react-router-dom\";\n\nimport {\n  Menu\n} from '@mui/material/';\n\n//apollo\nimport { useMutation } from \"@apollo/client\"\nimport { \n  UPDATE_AWAITING_DISPATCH,\n  UPDATE_NEED_ATTENTION,\n  MOVE_ORDER_TO_ARCHIVE,\n  MOVE_ORDER_TO_PRIORITY\n} from '../queries/MutationOrderInfo'\nimport { DELETE_ORDER } from '../queries/MutationDeleteOrder';\n\nimport OrderActions from \"./Actions/OrderActions\";\nimport PreOrderActions from \"./Actions/PreOrderActions\";\nimport OrderStatusesActions from \"./Actions/OrderStatusesActions\";\n\nimport ReclamationActions from \"./Actions/ReclamationActions\";\n\nconst OrderActionsMenu = props => {\n  const OrderID = props.order.OrderID \n  const { OAMenu, setOAMenu, OAMenuRef, order, refetch} = props\n\n  const [mutationAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n  const [mutationNeedAttention] = useMutation(UPDATE_NEED_ATTENTION);\n  const [mutationMoveOrderToArchive] = useMutation(MOVE_ORDER_TO_ARCHIVE);\n  const [mutationMoveOrderToPriority] = useMutation(MOVE_ORDER_TO_PRIORITY);\n  const [mutationDeleteOrder] = useMutation(DELETE_ORDER);\n\n  const history = useHistory();\n\n  const baseurl = () => {\n    if ( [1,2].includes(order.OrderStatusID) ) return '/'\n    if ( [10,11,12].includes(order.OrderStatusID) ) return '/reclamation'\n  }\n\n  // ÐÑÐ¸ ÑÑÐ°ÑÑÑÐµ \"ÑÑÐµÐ±ÑÐµÑ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ\" Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð° ÐºÑÐ°ÑÐ½ÑÐ¼ ÑÐ²ÐµÑÐ¾Ð¼ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸. \n  // Ð Ð»ÐµÐ²Ð¾Ð¼ Ð¼ÐµÐ½Ñ Ð² Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸ Ð¾ Ð·Ð°ÐºÐ°Ð·Ðµ ÑÐ¸ÐºÑÐ¸ÑÑÐµÑÑÑ  Ð´Ð°ÑÐ° Ð²ÐºÐ»ÑÑÐµÐ½Ð¸Ñ ÑÑÐ¾Ð³Ð¾ ÑÑÐ°ÑÑÑÐ°.  \n  // ÐÐµÐ»Ð°ÑÐµÐ»ÑÐ½Ð¾ ÑÑÐ¾Ð±Ñ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÑ ÑÐ½ÑÑÐ¸Ñ Ð±ÑÐ»Ð° ÑÐ¾Ð»ÑÐºÐ¾ Ñ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð½ÑÑ Ð°ÐºÐºÐ°ÑÐ½ÑÐ¾Ð² .  \n  // Ð­ÑÐ¾ Ð½ÐµÐ¾Ð±ÑÐ¾Ð´Ð¸Ð¼Ð¾ ÐºÐ¾Ð³Ð´Ð° Ð¿ÑÐ¸ Ð¾ÑÐºÑÑÑÐ¸Ð¸ Ð·Ð°ÐºÐ°Ð·Ð° Ð²ÑÑÑÐ½ÑÐµÑÑÑ Ð´ÐµÑÐ¸ÑÐ¸Ñ ÐºÐ¾Ð¼Ð¿Ð»ÐµÐºÑÑÑÑÐ¸Ñ Ð¸Ð»Ð¸ Ð¿Ð¾ Ð·Ð°ÐºÐ°Ð·Ñ ÑÑÐµÐ±ÑÑÑÑÑ ÑÑÐ¾ÑÐ½ÑÐµ ÑÑÐ¾ÑÐ½ÐµÐ½Ð¸Ñ Ð¾Ñ Ð·Ð°ÐºÐ°Ð·ÑÐ¸ÐºÐ° ÐºÐ°ÐºÐ¸Ðµ-Ð½Ð¸Ð±ÑÐ´Ñ.\n  function needAttentionHandler(){\n    const curDate = new Date().toISOString()\n    var payload = [];\n    if (!order.NeedAttention) payload = ['true', curDate, 'null']\n    else {\n      const nd = order.NeedAttention.split(',')\n      if (nd[0] === 'true') payload = ['false', nd[1], curDate]\n      if (nd[0] === 'false') payload = ['true', curDate, 'null']\n    }\n    \n    mutationNeedAttention({\n      variables: {\n        OrderID, \n        NeedAttention: payload.join(',')\n      },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            NeedAttention: payload.join(',')\n          }\n        }\n    })\n  }\n  // ÐÑÐ¸ ÑÑÐ°ÑÑÑÐµ \"Ð¾Ð¶Ð¸Ð´Ð°ÐµÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ¸\" Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ\n  //  Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·ÐµÐ»ÐµÐ½ÑÐ¼ ÑÐ²ÐµÑÐ¾Ð¼ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸, ÑÑÐ¾ Ð¾Ð·Ð½Ð°ÑÐ°ÐµÑ, ÑÑÐ¾ Ð·Ð°ÐºÐ°Ð· ÑÐ¶Ðµ ÑÐ¾Ð±ÑÐ°Ð½,\n  // Ð¸ Ð½Ðµ Ð¾ÑÐ³ÑÑÐ¶Ð°ÐµÑÑÑ Ð¿Ð¾ Ð±ÑÐ¼Ð°Ð¶Ð½ÑÐ¼ Ð¿ÑÐ¸ÑÐ¸Ð½Ð°Ð¼\n  function awaitingDispatchHandler(){\n    mutationAwaitingDispatch({\n      variables: {OrderID, AwaitingDispatch: !order.AwaitingDispatch },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            AwaitingDispatch: !order.AwaitingDispatch\n          }\n        }\n    })\n  }\n  // ÐÐµÑÐµÐºÐ¸Ð´ÑÐ²Ð°ÐµÑ Ð·Ð°ÐºÐ°Ð· Ð² Ð°ÑÑÐ¸Ð² (ÑÐ±Ð¸ÑÐ°ÐµÑ Ð¸Ð· Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸)\n  async function transferOrderToArchive(OrderStatusID){\n    mutationMoveOrderToArchive({ variables: { \n      OrderID,\n      ActualShippingDate: new Date(),\n      OrderStatusID\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderID){\n          history.push(baseurl())\n        }\n      }\n    )\n  }\n\n  // ÐÐµÑÐµÐºÐ¸Ð´ÑÐ²Ð°ÐµÑ Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð· Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ \n  async function transferOrderToPriority(){\n    mutationMoveOrderToPriority({ variables: { \n      OrderID,\n      AcceptanceDate: new Date(),\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderID){\n          refetch()\n        }\n      }\n    )\n  }\n  \n  // Ð´Ð»Ñ ÑÐ´Ð°Ð»ÐµÐ½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð°\n  function mutationDeleteOrderHandler(){\n    mutationDeleteOrder({ variables: {\n      OrderID\n    }}).then( res => {\n      if (res.data.delete_erp_Orders_by_pk.OrderID){\n        history.push(baseurl())\n      }\n    })\n  }\n\n  const handleClose = (event) => {\n    setOAMenu(false);\n  };\n\n  return (\n    <Menu\n    open={OAMenu} \n    onClose={handleClose}\n    anchorEl={OAMenuRef.current}\n    >\n\n        <OrderStatusesActions\n        order                   = {order}\n        awaitingDispatchHandler = {awaitingDispatchHandler}\n        needAttentionHandler    = {needAttentionHandler}\n        />\n\n        <PreOrderActions \n        order                      = {order}\n        transferOrderToPriority    = {transferOrderToPriority}\n        mutationDeleteOrderHandler = {mutationDeleteOrderHandler}\n        />\n        <OrderActions \n        order           = {order}\n        transferOrderTo = {transferOrderToArchive}\n        />\n        <ReclamationActions\n        order = {order }\n        transferOrderToArchive ={transferOrderToArchive}\n        mutationDeleteOrderHandler ={mutationDeleteOrderHandler}\n        />\n  </Menu>\n  )\n}\nexport default OrderActionsMenu;","import { useState, useRef } from \"react\";\nimport { Typography, Button, Box } from '@mui/material'\nimport { UilPlus, UilLock, UilUnlock, UilEllipsisH } from '@iconscout/react-unicons';\n\nimport OS from \"../_core/OrderStatus\";\nimport US from \"../_core/UserStatus\";\n\nimport OrderActionsMenu from \"./OrderActions/OrderActionsMenu\";\n\nfunction orderStatus(data){\n  // add a note to the title if this is a pre-order\n  if (data.OrderStatusID === OS.ordRegistration) return ' | ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·';\n  if (data.OrderStatusID === OS.ordArchived) return ' | Ð Ð°ÑÑÐ¸Ð²Ðµ';\n  if ([ OS.reclInbox, OS.reclDecision , OS.reclProduction ].includes(data.OrderStatusID)) return ' | Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ';\n}\n\nconst OrderHeader = (props) => {\n  const { data, editState, setEditState, setOIDialog, store, refetch } = props;\n\n    //OrderActions Dropdown menu\n    const [OAMenu, setOAMenu] = useState(false);\n    const OAMenuRef = useRef(null);\n\n      \n  return(\n    <div className=\"page-header\">\n        <Typography sx={{ fontWeight: 600, fontSize: '1rem'}}>\n            {data.Entity} __ {data.City} \n            <span className=\"preorderTitle\">{orderStatus(data)}</span>\n        </Typography>\n\n        {/* ÐÐ¾ÐºÐ°Ð·ÑÐ²Ð°ÑÑ ÐÐ½Ð¾Ð¿ÐºÐ¸ ÑÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð° ÑÐ¾Ð»ÑÐºÐ¾ Ð´Ð»Ñ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð½ÑÑ Ð³ÑÑÐ¿Ð¿ ÑÐ·ÐµÑÐ¾Ð² */}\n        <Box ml='auto' className='orderActions_box noprint'>\n          {editState && \n          <Button \n          variant = \"iconic\" \n          onClick = {() => setOIDialog(true)}>\n            <UilPlus/>\n          </Button>\n          }\n\n        {/* Hamburger menu. Didnt shown when order into archive */}\n        {![OS.ordArchived].includes(data.OrderStatusID)  &&\n          <Button \n          aria-haspopup = \"true\" \n          ref           = {OAMenuRef} \n          variant       = \"iconic\" \n          onClick       = {() => setOAMenu(true)}>\n              <UilEllipsisH/>\n          </Button>\n          }\n\n        </Box>\n\n        <Box ml='10px' className='orderActions_box noprint'>\n          {[ US.general, US.management , US.bookkeeping ].includes(store.user.AccessLevelID) && \n            <Button \n            variant = \"iconic\" \n            onClick = {() => setEditState(!editState)}>\n                {editState ? <UilUnlock/> : <UilLock/> }\n            </Button>\n            }\n        </Box>\n\n        <OrderActionsMenu\n          refetch   = {refetch}\n          order     = {data}\n          OAMenu    = {OAMenu} \n          setOAMenu = {setOAMenu}\n          OAMenuRef = {OAMenuRef}\n          />\n\n  </div>\n\n  \n  )\n}\n\nexport default OrderHeader;","import { UilCloudUpload } from '@iconscout/react-unicons'\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <div >\n             <UilCloudUpload className='inCloudconIcon'/>\n            </div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","import { useContext, useCallback, useState, useRef } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_USERS }             from '../../hasura-queries/getUsers';\nimport { GET_ORDER_BY_ID }       from './queries/GetOrderByID'\nimport { PUSH_DOCS_ARRAY }       from './queries/MutationOrderDocs'\nimport { useMutation, useQuery } from \"@apollo/client\";\n\n//components\nimport Composition      from \"./Composition\";\nimport RightInfoPanel             from \"./RightInfoPanel/\";\nimport EditRightInfoPanel     from \"./RightInfoPanel/EditRightInfoPanel\";\nimport Docs             from './Docs/Docs';\nimport CommentsList     from \"./Comments/CommentsList\";\nimport OrderHeader      from \"./OrderHeader\"\n\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport './sass/index.sass';\n\nimport US from \"../_core/UserStatus\";\n\n\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    // Add new Order Item Dialog\n    const [OIDialog, setOIDialog] = useState(false)\n\n\n    const [pushDocs] = useMutation(PUSH_DOCS_ARRAY);\n    const orderID = useParams().id\n\n    const S3Upload = useCallback(acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        store.uploadFile(acceptedFiles).then(\n            (res) => {\n                if (res.status !== 200) console.log('S3 file upload error')\n                else{\n                    let m = []\n                    for (var i=0;  i<res.data.length; i=i+2 ){\n                        m.push({\n                            'Key': res.data[i].key,\n                            'OrderID': orderID,\n                            'FileName': res.data[i].originalname,\n                        })\n                    }\n                    pushDocs({ variables: {'objects': m} })\n                } \n                setOnUploadFiles([])\n                refetch();\n                }\n            \n        )\n      }, [])\n\n    var { data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID} });\n    const { data: users = []} = useQuery(GET_USERS);\n    const {getRootProps, isDragActive} = useDropzone({className: 'dropzone', onDrop: S3Upload });\n    \n    return(\n    <div> \n        {isFileOnDropzone(isDragActive)}\n        { data.erp_Orders && users.erp_Users ? (<>\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n          <div className='LeftSideContent'>\n\n              <OrderHeader\n              data = {data.erp_Orders[0]}\n              editState = {editState}\n              setEditState = {setEditState}\n              setOIDialog = {setOIDialog}\n              store = {store}\n              refetch = {refetch}\n              />\n\n              <div className=\"Composition\">  \n                <Composition \n                  data        = {data.erp_Orders[0].OrderItems} \n                  editState   = {editState}\n                  refetch     = {refetch}\n                  OIDialog    = {OIDialog}\n                  setOIDialog = {setOIDialog}\n                  orderID     = {orderID} /> \n              </div>\n\n              <CommentsList \n              orderID = {orderID} \n              user    = {store.user} \n              data    = {data.erp_Orders[0].Comments}/> \n\n              <Docs \n              data      = {data.erp_Orders[0].Docs} \n              onUpload  = {onUploadFiles} \n              editState = {editState} \n              refetch   = {refetch} />\n          </div>\n\n          <div className=\"Info\">\n            { editState? <EditRightInfoPanel \n            data      = {data.erp_Orders[0]} \n            orderID   = {orderID} \n            refetch   = {refetch} \n            users     = {users.erp_Users} /> : (\n\n            <RightInfoPanel \n            data      = {data.erp_Orders[0]} \n            editState = {editState} \n            orderID   = {orderID} \n            />\n            )}\n          </div>\n        </section> \n        </>): null }\n    </div>\n    )\n}\n\nexport default OrderLayout","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervals(where: {ent: {_gte: $gte,  _lte: $lte}}) {\n        ent\n        ext\n        card\n        dur\n      }\n    }\n  }\n}  \n`\n\n\n","export function daysInMonth (selectedMonth) {\n    // ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð´Ð½ÐµÐ¹ Ð² ÑÐµÐºÑÑÐµÐ¼ Ð¼ÐµÑÑÑÐµ\n      const [month, year] = selectedMonth\n      return new Date(year, month+1, 0).getDate();\n}\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}\n\nexport function search_alg(user, keyword){\n  if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n  else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n  else return false\n}","export function getIntervalData(day, intervals, timeDeduction){\n\n  // ÐºÐ¾Ð½Ð²ÐµÑÑÐ°ÑÐ¸Ñ float Ð² ÑÐ°ÑÑ Ð¸ Ð¼Ð¸Ð½ÑÑÑ\n  function convertInterval(number, timeDeduction){\n      //Ð²ÑÑÐµÑÐ°ÐµÐ¼ Ð²ÑÐµÐ¼Ñ Ð½Ð° Ð¾Ð±ÐµÐ´\n      number -= timeDeduction/60\n\n      var hour = Math.floor(number);\n      var decpart = number - hour;\n      var min = 1 / 60;\n\n      // Round to nearest minute\n      decpart = min * Math.round(decpart / min);\n      var minute = Math.floor(decpart * 60) + '';\n\n      // Add padding if need\n      if (minute.length < 2) {\n          minute = '0' + minute; \n      }\n\n      return hour + ':' + minute;\n  }\n\n  function getMinutes(t){\n      const minutes = t.getMinutes()\n      return (minutes < 10) ? `0${minutes}` : minutes\n  }\n\n  const e = intervals.find(el =>  new Date(el.ent).getDate() == day)\n\n  if (e) {\n      const _entr = new Date(e.ent)\n      const _exit = new Date(e.ext) || null\n\n      const entrance = _entr.getHours()+':'+ getMinutes(_entr)\n\n      var exit ;\n      var interval;\n\n      if (e.ext) {\n        exit = _exit.getHours()+':'+ getMinutes(_exit);\n        interval = convertInterval(e.dur, timeDeduction)\n\n      }\n\n\n      return [entrance, exit, interval]\n  }   else return [null, null, null]\n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './functions'\nimport sass from './sass/attendance.module.sass'\nimport { getIntervalData } from './getIntervalData'\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  let columnsList = [\n      {\n      Header: 'Ð¡Ð¾ÑÑÑÐ´Ð½Ð¸Ðº',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'ÐÑÐ¾Ð³Ð¾',\n      Cell: row => {\n        var hours = 0;\n        const duration = row.row.original.intervals\n        duration.forEach( interval => {\n          hours += interval.dur \n        });\n\n        //Ð²ÑÑÐµÑÐ°ÐµÐ¼ Ð²ÑÐµÐ¼Ñ Ð½Ð° Ð¾Ð±ÐµÐ´\n        hours -= timeDeduction/60 * duration.length\n\n        return <div>{hours.toFixed(0)}</div>\n      }\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => {\n        const day1 = row.column.Header\n\n        const [ent, ext, dur] = getIntervalData(day1, row.row.original.intervals, timeDeduction)\n        \n        return (\n          <div className={sass.intervalgrid}> \n            <div>{ ent }</div> \n            <div>{ ext }</div>\n            <div className={sass.interval}>{ dur }</div>\n          \n          </div>\n        )\n      }\n    })\n  }\n  return columnsList\n}\n\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nfunction monthAdd(date, month) {\n    // ÑÑÐ½ÐºÑÐ¸Ñ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑÑÑ Ð´Ð»Ñ ÐºÐ¾ÑÑÐµÐºÑÐ½Ð¾Ð³Ð¾ Ð²ÑÑÐ¸ÑÐ°Ð½Ð¸Ñ Ð¼ÐµÑÑÑÐµÐ² Ð² chooseMonth\n    var temp = date;\n    temp = new Date(date.getFullYear(), date.getMonth(), 1);\n    temp.setMonth(temp.getMonth() + (month + 1));\n    temp.setDate(temp.getDate() - 1); \n  \n    if (date.getDate() < temp.getDate()) { \n        temp.setDate(date.getDate()); \n    }\n    return temp;    \n  }\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"ÑÐ½Ð²\", \"ÑÐµÐ²\", \"Ð¼Ð°Ñ\", \"Ð°Ð¿Ñ\", \"Ð¼Ð°Ð¹\", \"Ð¸ÑÐ½\", \"Ð¸ÑÐ»\", \"Ð°Ð²Ð³\", \"ÑÐµÐ½\", \"Ð¾ÐºÑ\", \"Ð½Ð¾Ñ\", \"Ð´ÐµÐº\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i< 6; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div \n                key={suitable}\n                onClick={selectedMonthHandler} \n                className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>Ð¾Ð±ÐµÐ´</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>Ð¼Ð¸Ð½</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>Ð½Ð¾ÑÐ¼Ð°</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>Ñ</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","import  { useMemo, useEffect, useReducer } from 'react'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\nimport Table, { generateColumns } from './table'\nimport { getVarsForSubscription, search_alg } from './functions'\n\nimport './sass/index.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport { UilConstructor } from '@iconscout/react-unicons'\nimport sass from './sass/attendance.module.sass'\nimport TableSearch from '../_core/mui/TableSearch'\nimport { Typography } from '@mui/material'\n\n// ÑÑÐµÑ ÑÐ°Ð±Ð¾ÑÐµÐ³Ð¾ Ð²ÑÐµÐ¼ÐµÐ½Ð¸\nconst Attendance = props => {\n    const date = new Date()\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 's_keyword': \n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [date.getMonth()-1, date.getFullYear()],\n        s_keyword: ''\n    });\n\n    const { timeDeduction, selectedMonth } = state;\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n\n    const { loading, data } = useQuery(GET_USERS, { variables: { gte, lte }, fetchPolicy: 'no-cache' });\n    \n    const onChangeSearch = (e) => {\n      dispatch({ type: 's_keyword', payload: e.target.value.trim() })\n    }\n\n    const columns = useMemo(\n        () => {\n          return generateColumns(selectedMonth, timeDeduction)\n        },\n      [selectedMonth, timeDeduction]\n    )\n\n\n    const searchResult = useMemo(\n      () => {\n        if (loading) return []\n\n        const keyword = state.s_keyword\n        const dt = data?.attendance_users_aggregate?.nodes\n\n        if (keyword){\n          const result = dt.filter((user) => search_alg(user, keyword))\n          return result\n        }\n        else return dt\n      },\n    [state.s_keyword, loading]\n   )\n\n   \n    return(\n    <div>\n            <div className=\"pageLayout__header\">\n                <UilConstructor className='pageLayout__icon'/>\n                <div className='pageLayout__title'>\n                    Ð Ð°Ð±Ð¾ÑÐµÐµ Ð²ÑÐµÐ¼Ñ\n                </div>                    \n            </div> \n\n            <ReportConfigurator \n            state    = {state} \n            dispatch = {dispatch}\n             />\n\n        <div className={sass.tableWrapper}>\n            <TableSearch onChange={onChangeSearch} disableAutoFocus/>            \n\n            { !loading ? \n                <Table \n                columns   = {columns} \n                data      = {searchResult} \n                className = {sass.attendanceTable} /> \n            : <Typography m=\"10px\" variant='subtitle2'>Ð·Ð°Ð³ÑÑÐ·ÐºÐ°..</Typography> }\n\n        </div>\n    </div>\n    )\n}\n\nexport default Attendance","const getItems = (count, offset = 0) =>\n    Array.from({ length: count }, (v, k) => k).map(k => ({\n        id: (k + offset).toString(),\n        content: `item ${k + offset}`\n    }));\n    \nexport const initialState ={\n  //ÐÑÐ¾Ð´ÑÑÐ¸Ðµ\n  inbox: [],\n  // ÐÑÐ¸Ð½ÑÑÐ¸Ðµ ÑÐµÑÐµÐ½Ð¸Ñ\n  decision: [],\n  //Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n  inproduction: []\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n      case 'inbox': \n      case 'decision': \n      case 'inproduction': \n          return {...state, [action.type]: action.payload };\n\n      case 'reset': \n          return initialState\n      default: \n          return {...state}\n  }\n}","import gql from 'graphql-tag'; \n\n// ÐÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð·Ð°ÐºÐ°Ð·Ñ Ð½Ð°ÑÐ¾Ð´ÑÑÐ¸ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð² ÐÑÐµÐ·Ð´Ð°ÐºÐ°Ð·Ð°Ñ Ð¸ Ð² Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ \n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const SUBSCRIPTION_RECLAMATION_ORDERS = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [10,11,12]} }) {\n      AwaitingDispatch\n      NeedAttention\n      OrderID\n      Entity\n      City\n      OrderStatusID\n      OrderItems(order_by: {OrderItemID: asc}){\n        OrderItemID\n        Name\n      }   \n    }  \n  }\n`\n\nexport const UPDATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $OrderStatusID: Int!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: $OrderStatusID,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;\n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link, useHistory } from 'react-router-dom'\nimport { useReducer } from 'react'\n\n\nimport sass from './index.module.sass'\nimport { Button, Typography, Box } from \"@mui/material\"\n\nimport { UilWrench, UilPlusCircle } from '@iconscout/react-unicons'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { reducer, initialState } from './reducer';\n//apollo\nimport { useSubscription, useMutation } from '@apollo/client'\nimport { \n  SUBSCRIPTION_RECLAMATION_ORDERS, \n  UPDATE_ORDER_STATUS,\n  INSERT_ORDER } from './queries';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return {result, movedObj: removed };\n};\n\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n\n    // change background colour if dragging\n    background: isDragging ? 'var(--accentLight)' : 'transparent',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\n\nconst Reclamation = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { inbox, decision, inproduction } = state;\n  const history = useHistory();\n\n\n  const getState = id => {\n    if (id === 'inbox') return inbox\n    if (id === 'decision') return decision\n    if (id === 'inproduction') return inproduction\n  };\n\n  const columns = [\n    {\n      columnName: 'ÐÑÐ¾Ð´ÑÑÐ¸Ðµ',\n      droppableId: 'inbox',\n      data: inbox,\n      orderStatusID: 10\n    },\n    {\n      columnName: 'ÐÑÐ¸Ð½ÑÑÐ¸Ðµ ÑÐµÑÐµÐ½Ð¸Ñ',\n      droppableId: 'decision',\n      data: decision,\n      orderStatusID: 11\n    },\n    {\n      columnName: 'Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ',\n      droppableId: 'inproduction',\n      data: inproduction,\n      orderStatusID: 12\n    }\n  ]\n\n  const [mutateOrderStatusID] = useMutation(UPDATE_ORDER_STATUS);\n  const [ insertOrder ] = useMutation(INSERT_ORDER, {variables: {\n    'orderStatusID': columns[0].orderStatusID,\n  }})\n\n  function insertOrderHandler (){\n    insertOrder().then( (res) => {\n        history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n    })\n  }\n\n  const onSubscriptionData = (options) => {\n    const data = options.subscriptionData.data.erp_Orders \n    // Ð´Ð»Ñ dnd Ð½ÐµÐ±ÑÐ¾Ð´Ð¸Ð¼Ð¾ ÑÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÑ id Ð² string\n    data.map( el => {\n      el.id = el.OrderID.toString()\n      return el\n    })\n    columns.forEach(col => {\n      dispatch({\n        type: col.droppableId,\n        payload: data.filter(order => order.OrderStatusID === col.orderStatusID)\n      })\n    })\n  }\n\n  useSubscription(SUBSCRIPTION_RECLAMATION_ORDERS, { onSubscriptionData})\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n        return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n        const items = reorder(\n            getState(source.droppableId),\n            source.index,\n            destination.index\n        );\n\n        dispatch({ type: source.droppableId, payload: items })\n    } else {\n      //Ð¾ÑÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ Ð¿ÑÐ¸ Ð¿ÐµÑÐµÐ¼ÐµÑÐ¸Ð½Ð¸Ð¸ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ° Ð² Ð´ÑÑÐ³Ð¾Ð¹ ÑÑÐ¾Ð»Ð±Ð¸Ðº\n        const {result, movedObj } = move(\n            getState(source.droppableId),\n            getState(destination.droppableId),\n            source,\n            destination\n        );\n        Object.entries(result).map( el => {\n          if (el[0] === el[0]) dispatch({ type: el[0], payload: el[1] })\n        } )\n        mutateOrderStatusID({\n          variables: {\n            OrderID: movedObj.OrderID, \n            OrderStatusID: columns.find(col => col.droppableId === destination.droppableId).orderStatusID\n          }\n        })\n    }\n};\n\n  function getOrderStatus(order){\n    if (order.NeedAttention && order.NeedAttention.split(',')[0] === 'true' ) return sass.needAttention\n    if (order.AwaitingDispatch) return sass.awaitingDispatch\n  }\n\n  function getOrderUnit(order){\n      if (order.OrderItems.length === 0) return <Link to={`/orders/${order.OrderID}`} className={sass.item} ><div>ÐÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ð¼Ð¾Ð³Ð¾</div></Link>\n\n      else return (\n      <Link to={`/orders/${order.OrderID}`} className={`${sass.item} ${getOrderStatus(order)}`}>\n        <div className={sass.items}>\n          {order.OrderItems.map(item => (\n            <div key={item.OrderItemID} className={sass.orderItem}>\n              {item.Name}\n            </div>\n          ))}\n        </div>\n        <div className={sass.customerInfo}>\n          <div>{order.Entity}</div>\n          <div>{order.City}</div>\n        </div>\n      </Link>)\n  }\n\n  return(\n    <div className={sass.reclatationLayout}>\n      \n      <div className='pageLayout__header'>\n        <UilWrench className='pageLayout__icon'/>\n        <div className=\"pageLayout__title\">Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ</div>\n\n        <div className='pageLayout__actions'>\n          <Button variant='iconic' onClick={insertOrderHandler}>\n            <UilPlusCircle/>\n          </Button>\n        </div>\n      </div>\n\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Box className={sass.columnWrapper}>\n\n        {columns.map( e => (<div key={e.columnName} className={sass.reclColumn}>\n          <Typography className={sass.heading}>{e.columnName}</Typography>\n          <Droppable droppableId={e.droppableId} >\n          {(provided, snapshot) => (\n              <div\n                  ref={provided.innerRef}\n                  className={sass.draggableWrapper}>\n                  {e.data.map((item, index) => (\n                      <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}>\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}   \n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  style={getItemStyle(\n                                      snapshot.isDragging,\n                                      provided.draggableProps.style\n                                  )}>\n                                    {getOrderUnit(item)}\n                              </div>\n                          )}\n                      </Draggable>\n                  ))}\n                  {provided.placeholder}\n              </div>\n          )}\n          </Droppable>\n        </div>))}\n        \n        </Box>\n      </DragDropContext>\n    </div>\n  )\n}\nexport default Reclamation","import {Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport LoginForm from '../components/LoginForm';\nimport OrderListLayout from \"../components/OrderListLayout\";\nimport OrderLayout from \"../components/OrderLayout\";\nimport Attendance from '../components/AttendanceLayout'\nimport Reclamation from \"../components/ReclamationLayout\";\n\nconst AppRouter = () => {\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/reclamation' component={Reclamation}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            #if required route was not found\n            <Redirect     to=\"/\" />\n        </Switch>\n    )\n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\nconst BaseLayout = (props) => {\n    return(\n        <div className=\"base-container\">\n                <AppRouter/> \n                {props.children}\n        </div>\n    )\n}   \n\nexport default BaseLayout;","import Drawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\n\nconst CustomDrawer = props => {\n  const { icon, children, width = 400, state, toggleDrawer } = props\n \n  return(<>\n    <div onClick={toggleDrawer(true)}>\n      {icon}\n    </div>\n\n    <Drawer\n    open={state}\n    PaperProps = {{\n      sx: {\n        backgroundColor: 'var(--L0-glass)',\n        backdropFilter: 'var(--blurFilter)'\n      }\n    }}\n    onClose={toggleDrawer(false)}\n    >\n      <Box\n      sx={{ width: width }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n      >\n        {children}\n      </Box>\n    </Drawer>\n  </>)\n}\n\nexport default CustomDrawer;","import gql from 'graphql-tag'; \n\nexport const GET_NOTIFICATIONS = gql`\nsubscription MyQuery($_eq: Int!, $limit: Int) {\n  erp_Notifications(where: {MentionedUser: {_eq: $_eq}}, limit: $limit, order_by: {ID: desc} ) {\n    ID\n    Viewed\n    Comment {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n    Order {\n      OrderID\n      City\n      Entity\n    }\n  }\n}\n`\nexport const UPDATE_VIEWED = gql`\nmutation($ID: Int!, $Viewed: Boolean!) {\n  update_erp_Notifications_by_pk(pk_columns: {ID: $ID}, _set: {Viewed: $Viewed}){\n    ID\n    Viewed\n  }\n}\n`\n\n","import { useContext, useState } from 'react'\nimport { Context } from \"../../../\";\nimport { Link } from 'react-router-dom'\n\nimport CustomDrawer from '../../_core/mui/CustomDrawer'\nimport Box from '@mui/material/Box'\nimport Badge from '@mui/material/Badge'\n\n\nimport { UilBell } from '@iconscout/react-unicons'\n\nimport { useMutation, useSubscription } from '@apollo/client'\nimport { GET_NOTIFICATIONS, UPDATE_VIEWED } from './getNotifications'\nimport sass from './index.module.sass'\nimport moment from 'moment'\nimport { Typography } from '@mui/material'\n\nconst NotificationCenter = props => {\n  const { store } = useContext(Context)\n  const [notifications, setNotifications] = useState();\n\n  const [ updateViewedMutration ] = useMutation(UPDATE_VIEWED)\n  function onSubscriptionData(options){\n    const data = options.subscriptionData.data.erp_Notifications\n    setNotifications({\n      unviewed: data.filter(e => !e.Viewed),\n      viewed: data.filter(e => e.Viewed)\n    })\n  }\n  const { data, loading } = useSubscription(GET_NOTIFICATIONS, { onSubscriptionData, variables: {\n    _eq: store.user.UserID,\n    limit: 100\n  }})\n  const [state, setState] = useState(false)\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open)\n  }\n\n  function jumpToOrderHandler(ID){\n    setState(false);\n    updateViewedMutration({ variables: { ID, Viewed: true } })\n  }\n \n  const unviewedCounter = () => {\n    var a=0;\n    data?.erp_Notifications?.forEach(e => {\n      if (!e.Viewed) a+=1\n    });\n    return a\n  }\n  \n  const notificationUnit = (e) => (\n    <Box\n    className={sass.notificationUnit}\n    key={e.ID}>\n      <div className={sass.notificationHeader}>\n        <Typography className={sass.item1}>{e.Comment.User.FirstName} {e.Comment.User.LastName} <span className={sass.normal}>ÑÐ¿Ð¾Ð¼ÑÐ½ÑÐ» Ð²Ð°Ñ</span></Typography>\n        <Typography variant='subtitle2' className={sass.item2}>{moment(e.Comment.Timestamp).format('DD MMM H:mm')}</Typography>\n\n\n          <Link \n        to={`/orders/${e.Order.OrderID}`} \n        onClick={() => jumpToOrderHandler(e.ID)}\n        className={sass.item3}\n        >\n           <Typography variant='subtitle2'>{e.Order.Entity}__{e.Order.City}</Typography>\n        </Link>\n      </div>\n\n        <div \n          className={sass.commentContent}\n          dangerouslySetInnerHTML={{ __html: e.Comment.Text }}\n        >\n        </div>\n    </Box>\n  )\n\n  return (\n    <CustomDrawer icon={ \n      <Badge badgeContent={unviewedCounter()} color=\"secondary\">\n        <UilBell/>\n      </Badge>\n    } width={500} state={state} toggleDrawer={toggleDrawer}>\n      <Box className={sass.wrapper}>\n        <Typography variant='subtitle3'>Ð£Ð²ÐµÐ´Ð¾Ð¼Ð»ÐµÐ½Ð¸Ñ</Typography>\n        \n         {/* unreaderd notifs */}\n        { notifications?.unviewed.length ?\n          <Box className={sass.unreadedWrapper}> \n            <Typography variant='subtitle3'>ÐÐµÐ¿ÑÐ¾ÑÐ¼Ð¾ÑÑÐµÐ½Ð½ÑÐµ </Typography>\n            {!loading && notifications?.unviewed.map(e => notificationUnit(e) )}\n          </Box>\n        : null}\n\n        {!loading && notifications?.viewed.map( e => notificationUnit(e) )}\n\n      </Box>\n    </CustomDrawer>\n  )\n}\nexport default NotificationCenter","import { useEffect } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DARK_CLASS = \"dark\";\n\nexport function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n    else return 'light'\n}\n\nexport const SystemPreferTheme = (appTheme, setAppTheme) => {\n    // theme can will be dark, light or system (used for corrent displaying selected theme in preferences)\n    // mode can be only dark or light (used for material ui pallete)\n    const systemPrefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\"}, undefined);\n    var mode = appTheme\n\n    function changeTheme(newTheme){\n        var expires = new Date()\n        expires.setFullYear(expires.getFullYear()+1)\n        document.cookie = `theme=${newTheme}; expires=${expires}; path=/`\n        setAppTheme(newTheme)\n    }\n\n    useEffect(() => {\n      if (appTheme === 'dark') document.documentElement.classList.add(DARK_CLASS)\n      else if (appTheme === 'light') document.documentElement.classList.remove(DARK_CLASS)\n\n      else if (appTheme === 'system'){\n        if (systemPrefersDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n      };\n    }, [appTheme, systemPrefersDark]);\n\n    if (appTheme === 'system'){\n      if (systemPrefersDark) mode = 'dark'\n      else mode = 'light'\n    }\n    return {appTheme, mode, changeTheme}\n};\n","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../../../index';\nimport { useHistory } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nimport { UilSun, UilMoon, UilDesktop, UilSetting } from '@iconscout/react-unicons'\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material/';\n\nimport sass from './index.module.sass'\nimport { SystemPreferTheme } from '../../_core/SystemPreferTheme';\n\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    border: 'var(--border)',\n    padding: 8,\n    textTransform: 'none',\n    '&:not(:first-of-type)': {\n\n    },\n    '&:first-of-type': {\n      borderTopLeftRadius: 'var(--br)',\n      borderBottomLeftRadius: 'var(--br)',\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 'var(--br)',\n      borderBottomRightRadius: 'var(--br)',\n    },\n  },\n}));\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function SettingsDrawer() {\n  const {store} = useContext(Context);\n  const [state, setState] = useState(false);\n  const history = useHistory()\n  const {changeTheme} = SystemPreferTheme(store.UItheme.state, store.UItheme.dispatch)\n\n  async function logout(){\n    await store.logout(); \n    history.push('/login')\n  }\n\n  const themeHandler = (e, newTheme) => {\n    changeTheme(newTheme)\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open);\n  };\n  \n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 400 }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n    >\n\n      <List>\n        <ListItem className={sass.user}>\n        <div>ÐÐ¾Ð±ÑÐ¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°ÑÑ, {store.user.FirstName} {store.user.LastName}!</div>\n        </ListItem>\n\n        <ListItem >\n          <StyledToggleButtonGroup\n            className={sass.themeToggleButtons}\n            color=\"primary\"\n            value={getCookie('theme')}\n            exclusive\n            fullWidth\n            onChange={themeHandler}\n            >\n            <ToggleButton value=\"light\"> <UilSun/> Light</ToggleButton>\n            <ToggleButton value=\"system\"> <UilDesktop/>System</ToggleButton>\n            <ToggleButton value=\"dark\"> <UilMoon/> Dark</ToggleButton>\n          </StyledToggleButtonGroup>\n        </ListItem>\n\n      </List>\n      \n      <div className={sass.logoutButton}>\n        <Button variant=\"outlined\" onClick={logout}>ÐÑÐ¹ÑÐ¸</Button>\n      </div>\n    </Box>\n  );\n\n  return (\n    <>\n          <div onClick={toggleDrawer(true)}>\n            <UilSetting/>\n          </div>\n          <Drawer\n            open={state}\n            onClose={toggleDrawer(false)}\n            PaperProps = {{\n              sx: {\n                backgroundColor: 'var(--L0-glass)',\n                backdropFilter: 'var(--blurFilter)'\n              }\n            }}\n          >\n            {list('left')}\n          </Drawer>\n    </>\n  );\n}","import { NavLink} from 'react-router-dom';\nimport './index.sass';\n\nimport { UilSortAmountDown, UilWrench, UilConstructor, UilBell} from '@iconscout/react-unicons';\nimport NotificationCenter from './NotificationCenter';\nimport SettingsDrawer from './SettingsDrawer/SettingsDrawer';\n\nconst Sidebar = () => {\n\n  function wrap(icon){ \n    return <div className='iconWrapper'>{icon}</div>\n  }\n\n  return(\n    <div className='Sidebar'>\n      <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"link\">{wrap(<UilSortAmountDown/>)}</NavLink>\n      <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"link\">{wrap(<UilWrench/>)}</NavLink>\n      <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"link\">{wrap(<UilConstructor/>)}</NavLink>\n      \n      <div className=\"link marginTopAuto\">\n          {wrap(<NotificationCenter/>)}\n      </div>\n\n      <div className=\"link\">\n          {wrap(<SettingsDrawer/>)}\n      </div>\n\n    </div>\n  );\n}\n\nexport default Sidebar;","import { useContext, useState, useMemo } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\n\n\nimport {getCookie, SystemPreferTheme} from './components/_core/SystemPreferTheme'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { muicomponents } from './materialStyles'\nimport { normalizeUnits } from 'moment';\n\nfunction App() {  \n  const { store } = useContext(Context);\n  const [appTheme, setAppTheme] = useState(() => getCookie('theme'))\n  store.setUItheme(appTheme, setAppTheme)\n  const { mode } = SystemPreferTheme(appTheme, setAppTheme)\n  \n  const getDesignTokens = (mode) => ({\n    palette: {\n      mode,\n      ...(mode === 'light'\n        ? {\n            // palette values for light mode\n            primary: {\n              main: '#3763FE',\n              light: '#E7E9FB',\n            },\n            secondary: {\n              main: '#e5534b',\n            }\n          }\n        : {\n            // palette values for dark mode\n            primary: {\n              main: '#99affc',\n              light: '#43435c',\n            },\n            secondary: {\n              main: '#e5534b',\n            },\n           \n          }),\n    },\n    typography: {\n      fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',sans-serif`,\n      subtitle1: {\n        fontSize: '.7rem',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n        letterSpacing: '.5px',\n        color: 'var(--accent) !important',\n      },\n      subtitle2: {\n        fontSize: '.8rem',\n        fontWeight: 'normal',\n        color: 'var(--lowContrast) !important',\n      },\n      subtitle3: {\n        fontSize: '.7rem',\n        color: 'var(--lowContrast) !important',\n        textTransform: 'uppercase',\n      }\n    },\n  });\n\n  var theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  theme = createTheme(theme, muicomponents(theme));\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        \n        { store.inMemoryToken && <Sidebar/> }\n          <BaseLayout/>\n        \n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default observer(App);\n","export const muicomponents = (theme) => ({\n  components: {\n    MuiDialog: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--LI) !important',\n          borderRadius: 'var(--br) !important',\n          border: 'var(--border)',\n        }\n      }\n    },\n    MuiDialogTitle: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n          background: 'var(--L2)',\n          borderBottom: 'var(--border)',\n          padding: '11px 1rem',\n          fontSize: '.9rem'\n        }\n      }\n    },\n    MuiDialogContent:{\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          padding: '1rem 1rem .5rem !important',\n        }\n      }\n    },\n    MuiDialogActions: {\n      styleOverrides: {\n        root: {\n          background: 'var(--L2)',\n          borderTop: 'var(--border)',\n          padding: '5px 1rem !important',\n        }\n      }\n    },\n    MuiMenu: {\n      styleOverrides: {\n        paper: {\n          border: 'var(--border)',\n          boxShadow: '0 10px 50px 0 var(--shadow-color) !important',\n          borderRadius: 'var(--br)',\n        }\n      }\n    },\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          padding: '4px 15px !important'\n        }\n      },\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          fontSize: '.8rem'\n        }\n      }\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          minWidth: '25px !important',\n          'svg':{\n            width: '17px'\n          }\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          textTransform: 'none !important',\n        },\n        textInfo: {\n          color: 'var(--lowContrast) !important',\n        },\n        iconic: {\n          minWidth: '10px',\n          minHeight: '10px',\n          padding: '4px 6px',\n          'svg':{\n            width: 20\n          },\n          'path': {\n            color: theme.palette.text.secondary,\n            strokeWidth: .4,\n            stroke: 'var(--L0)'\n          },\n          '&:hover': {\n            background: 'var(--accentLight)',\n          }\n        }\n      },\n      defaultProps: {\n        disableElevation: true,\n        disableRipple: true,\n      },\n    },\n    MuiToggleButton: {\n      defaultProps: {\n        disableRipple: true,\n      }\n    },\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n        autoComplete: 'off',\n      }\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          color: 'var(--lowContrast) !important',\n        },\n        filter: {\n          fontSize: '.8rem',\n          transform: 'none',\n          position: 'relative',\n        }\n      },\n      defaultProps: {\n        shrink: true,\n      }\n    },\n    MuiFilledInput: {\n      defaultProps: {\n        disableUnderline: 'true',\n        size: 'small',\n      },\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          border: '1px solid var(--border-colorLight)',\n          borderRadius: '10px',\n          ':hover': {\n            background: 'var(--L1)',\n          },\n        },\n\n      }\n    },\n    MuiInput: {\n      defaultProps: {\n        disableUnderline: 'true'\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          color: 'var(--highContrast) !important',\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          border: 'none',\n        }\n      }\n    },\n    MuiPopover: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0)',\n          borderRadius: 'var(--br) !important'\n        }\n      }\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          fontSize: '.8rem',\n          boxSizing: 'border-box',\n          border: 'none !important',\n          outline: 'none !important',\n          boxShadow: 'none !important',\n          padding: 0,\n        }\n      }\n    },\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiCheckbox: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0-glass)',\n          // margin: '.6rem',\n          // height: '98%',\n          // border: 'var(--lowContrast)',\n          // borderRadius: 'var(--br)',\n        }\n      }\n    }\n  },\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/s3/upload'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n// $api.interceptors.request.use( (config) => {\n//     config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n//     return config;\n// })\n// $api.interceptors.response.use( (config) => {\n//     return config;\n// }, async (error) => {\n//     const originalRequest = error.config;\n//     if(error.response.status === 401 && error.config && !error.config._isRetry){\n//         originalRequest._isRetry = true;\n//         try {\n//             const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n//             localStorage.setItem('token', response.data.accessToken);\n//             return $api.request(originalRequest);\n//         } catch (e) {\n//             console.log('ÐÐ²ÑÐ¾ÑÐ¸Ð·Ð°ÑÐ¸Ñ Ð½Ðµ Ð¿ÑÐ¾ÑÐ»Ð°. ÐÐ¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÑÐ½Ð¾Ð²Ð°');\n//         }\n//     }\n       \n// })\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  { email, password })\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isLoading = false;\n    UItheme = {\n        state: null,\n        dispatch: null\n    };\n    inMemoryToken = undefined;\n\n    priorityTab = 1;\n    cachedOrders = [];\n    cachedPreOrders = [];\n    \n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setCachedOrders(array){\n        this.cachedOrders = array\n    }\n    setCachedPreOrders(array){\n        this.cachedPreOrders = array\n    }\n    setUItheme(state, dispatch){\n        this.UItheme = { state, dispatch }\n    }\n    async login(email, password){\n        try {\n            const res = await AuthService.login(email, password)\n            if (res.status === 200){\n              this.setInMemoryToken(res.data.accessToken)\n              this.setUser(res.data.user);\n              return res\n            }\n            \n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            this.setInMemoryToken(null)\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return await axios.get(`${API_URL}/refresh`, { withCredentials: true }).then(\n            (r) => {\n                if (r.status !== 200) new Error('Invalid response while trying to get new access token')\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    \n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            await axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n              (res) => {\n                if (res.status === 200){\n                  this.setUser(res.data.user);\n                  this.setInMemoryToken(res.data.accessToken)      \n                }\n              }\n            )\n        } catch (e) {\n            console.log(e)\n        } finally {\n            this.setLoading(false);\n            return this.inMemoryToken\n        }\n    }\n\n    async uploadFile(acceptedFiles){\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/s3/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            }\n          });\n        return res\n    }\n\n    async downloadFile(file){\n        await fetch(`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`)\n    }\n\n    async deleteFile(key, deleteFileMutation){\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/s3/delete/${key}`);\n\n        if (res.status === 200){\n            const hasuraRes = await deleteFileMutation({variables: {\n                'key': key,\n            }})\n            console.log(hasuraRes.data)\n        }\n    }\n\n    pageParams = [\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Ð Ð°Ð±Ð¾ÑÐµÐµ Ð²ÑÐµÐ¼Ñ',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n}\n","import { onError } from '@apollo/client/link/error';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { RetryLink } from \"@apollo/client/link/retry\";\n\nimport { getInMemoryToken, getNewInMemoryToken } from '../../index'\n\nconst ws_protocol = process.env.REACT_APP_NODE_ENV === 'development' ? 'ws://' : 'wss://'\n\nexport const wsRetryLink = new RetryLink({\n  delay: {\n    initial: 300,\n    max: Infinity,\n    jitter: true\n  },\n  attempts: {\n    max: 100,\n    retryIf: (error, _operation) => !!error\n  }\n});\n\nexport const wsErrorLink = onError( ({ graphQLErrors, networkError, operation, forward}) => {\n  // Error when jwt token expired\n  if (networkError) {\n    console.log('[Network error]: ', networkError);\n    // if (networkError.extensions.code === 'start-failed'){\n\n    // }\n  }\n\n  if (graphQLErrors)\n    graphQLErrors.forEach(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    );\n});\n\nexport const webSocketLink = new WebSocketLink({\n  uri: ws_protocol + process.env.REACT_APP_HASURA_ENDPOINT,\n  // https://github.com/apollographql/subscriptions-transport-ws/issues/171\n  options: {\n    reconnect: true,\n    lazy: true,\n    // reconnectionAttempts: 5,\n    // inactivityTimeout: 10000000,\n    connectionParams: () => ({\n      headers: {\n        'authorization' : `Bearer ${getInMemoryToken()}`\n      }\n    }),\n    \n  }\n})\n\nwebSocketLink.subscriptionClient.onReconnecting(() => {\n  getNewInMemoryToken().then(\n    newToken => {\n      reinitWSConnection(newToken)\n      console.log('Reiniting websocket connection, probably, because jwt token was expired')\n\n    }\n  );\n})\n\nfunction reinitWSConnection(newToken) {\n  webSocketLink.subscriptionClient.connectionParams.headers = {\n    'authorization': `Bearer ${newToken}`\n  };\n  webSocketLink.subscriptionClient.close(true);\n  webSocketLink.subscriptionClient.connect();\n}\n","import { onError } from '@apollo/client/link/error';\nimport { setContext } from \"@apollo/client/link/context\";\nimport { HttpLink, Observable } from \"@apollo/client\";\n\nimport { getInMemoryToken, getNewInMemoryToken } from '../../index'\n\nconst http_protocol = process.env.REACT_APP_NODE_ENV === 'development' ? 'http://' : 'https://'\n\n\nexport const httpErrorLink = onError( ({ graphQLErrors, networkError, operation, forward }) => {\n\n  return new Observable(observer => {\n    getNewInMemoryToken()\n      .then(newToken => {\n        operation.setContext(({ headers = {} }) => ({\n          headers: {\n            // Re-add old headers\n            ...headers,\n            // Switch out old access token for new one\n            Authorization: `Bearer ${newToken}` || null,\n          }\n        }));\n      })\n      .then(() => {\n        const subscriber = {\n          next: observer.next.bind(observer),\n          error: observer.error.bind(observer),\n          complete: observer.complete.bind(observer)\n        };\n        // Retry last failed request\n        forward(operation).subscribe(subscriber);\n      })\n      .catch(error => {\n        // No refresh or client token available, we force user to login\n        observer.error(error);\n      });\n  });\n}\n)\n\nexport const httpAuthLink = setContext((_, { headers }) => ({\n    headers: {\n      ...headers,\n      Authorization: getInMemoryToken() ? `Bearer ${getInMemoryToken()}` : \"\",\n    }\n  }));\n\n\nexport const httpLink = new HttpLink({\n    uri: http_protocol + process.env.REACT_APP_HASURA_ENDPOINT\n  });\n  \n\n","import {\n  ApolloClient,\n  InMemoryCache,\n  from,\n} from \"@apollo/client\";\nimport { split } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\n\nimport { wsRetryLink, wsErrorLink, webSocketLink } from './wsLinks';\nimport { httpErrorLink, httpAuthLink, httpLink } from './httpLinks';\n\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  from([ wsRetryLink, wsErrorLink, webSocketLink ]),\n  from([ httpErrorLink, httpAuthLink, httpLink ]),\n);\n\nexport const apolloClient = new ApolloClient({\n  link:  splitLink,\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n        erp_CheckListUnits: {\n          keyFields: ['CheckListUnitID']\n        },\n        erp_Comments: {\n          keyFields: ['CommentID']\n        }\n    },\n  })\n})\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\n\n\nimport { ApolloProvider } from \"@apollo/client\";\nimport { apolloClient } from './http/apollo/apolloClient';\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\nexport function getInMemoryToken(){\n  return store.inMemoryToken\n}\nexport async function getNewInMemoryToken(){\n  const token = await store.getNewToken()\n  return token\n}\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsListWrapper\":\"Comments_commentsListWrapper__25Ylk\",\"commentListThread\":\"Comments_commentListThread__2VjRS\",\"commentInputForm\":\"Comments_commentInputForm__2W6Of\",\"checklistUnit\":\"Comments_checklistUnit__2rS_e\",\"checklistUnit_complited\":\"Comments_checklistUnit_complited__1J6jW\",\"mentionedUserHiglight\":\"Comments_mentionedUserHiglight__MWwVB\",\"saveButton\":\"Comments_saveButton__FkrZB\",\"commentUnit\":\"Comments_commentUnit__1L_o5\",\"actions\":\"Comments_actions__2pxUd\",\"commentContent\":\"Comments_commentContent__EsGgq\",\"commentHeader\":\"Comments_commentHeader__3aEgO\",\"sender\":\"Comments_sender__3ld3S\",\"time\":\"Comments_time__2egg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"main_tableRow__16MTc\",\"table\":\"main_table__3CeAC\",\"tbody\":\"main_tbody__1dNi4\",\"thead\":\"main_thead__1ZFS9\",\"tr\":\"main_tr__Yroqr\",\"td\":\"main_td__3bd4d\",\"th\":\"main_th__2KSv_\",\"tableWrapper\":\"main_tableWrapper__3lHmG\",\"tableFooter\":\"main_tableFooter__1Egk2\",\"tableMain\":\"main_tableMain__GJwKh\",\"awaitingDispatch\":\"main_awaitingDispatch__ZF9uh\",\"needAttention\":\"main_needAttention__io1X5\",\"unpaidOrder\":\"main_unpaidOrder__22HJx\",\"customerTableInfo\":\"main_customerTableInfo__JKJM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reclatationLayout\":\"ReclamationLayout_reclatationLayout__FiTwi\",\"columnWrapper\":\"ReclamationLayout_columnWrapper__1SCgf\",\"reclColumn\":\"ReclamationLayout_reclColumn__2kHvs\",\"draggableWrapper\":\"ReclamationLayout_draggableWrapper__10OPa\",\"heading\":\"ReclamationLayout_heading__1S6l3\",\"item\":\"ReclamationLayout_item__2uY2m\",\"orderItem\":\"ReclamationLayout_orderItem__3U0kY\",\"customerInfo\":\"ReclamationLayout_customerInfo__1hI73\",\"needAttention\":\"ReclamationLayout_needAttention__2S9H-\",\"awaitingDispatch\":\"ReclamationLayout_awaitingDispatch__GUQT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotificationCenter_wrapper__2ZNFd\",\"notificationUnit\":\"NotificationCenter_notificationUnit__Wu0MX\",\"unreadedWrapper\":\"NotificationCenter_unreadedWrapper__GTWeM\",\"notificationHeader\":\"NotificationCenter_notificationHeader__1deII\",\"item1\":\"NotificationCenter_item1__3mfID\",\"normal\":\"NotificationCenter_normal__19zme\",\"item3\":\"NotificationCenter_item3__gCbUg\",\"item2\":\"NotificationCenter_item2__2wKoS\",\"commentContent\":\"NotificationCenter_commentContent__1bz-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__1O75u\",\"quantity\":\"composition_quantity__2YtVw\",\"unitName\":\"composition_unitName__3YGne\",\"addOrderItem\":\"composition_addOrderItem__2AnFf\",\"quantityInput\":\"composition_quantityInput__2zcBe\",\"Unit\":\"composition_Unit__2Fqng\",\"index\":\"composition_index__2aXz6\",\"fullName\":\"composition_fullName__NObJ0\"};"],"sourceRoot":""}