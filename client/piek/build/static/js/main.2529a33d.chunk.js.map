{"version":3,"sources":["pages/OrderListPage/Archive/archive.module.sass","pages/OrderDetailPage/sass/order.module.sass","pages/OrderListPage/Search/search.module.sass","pages/OrderDetailPage/OrderItemActions/index.module.sass","pages/Settings/styles.module.sass","components/Sidebar/SettingsDrawer/index.module.sass","components/TableSearch/table_search.module.sass","pages/OrderListPage/PreOrders/preorders.module.sass","routers/PrivateRoute.js","utils/notification.js","pages/LoginPage/index.js","pages/OrderListPage/reducer.js","pages/OrderListPage/queries/getOrders.js","hasura-queries/getUsers.js","pages/OrderListPage/queries/MutationInsertOrder.js","pages/OrderListPage/UniversalTable/columnList.js","pages/OrderListPage/UniversalTable/TableMarkup.jsx","components/TableSearch/index.jsx","pages/OrderListPage/Search/filter.js","pages/OrderListPage/Search/index.js","pages/OrderListPage/PreOrders/MutationOrderStatus.js","pages/OrderListPage/PreOrders/index.js","pages/OrderListPage/Priority/index.js","pages/OrderListPage/Recently/index.jsx","pages/OrderListPage/Recently/spreadOrders.js","pages/OrderListPage/Archive/queries/getArchivedSearchOrders.js","pages/OrderListPage/Archive/queries/getAllOrdersAmount.js","pages/OrderListPage/Archive/queries/getArchivedLatestOrders.js","pages/OrderListPage/Archive/queries/getArchivedUnpaidOrders.js","pages/OrderListPage/Archive/PreviewTable.jsx","utils/OrderStatus.js","pages/OrderListPage/Archive/index.jsx","pages/OrderListPage/index.jsx","pages/OrderDetailPage/queries/GetOrderByID.js","pages/OrderDetailPage/queries/MutationOrderItem.js","pages/OrderDetailPage/OrderItemActions/index.jsx","pages/OrderDetailPage/Composition.jsx","pages/OrderDetailPage/RightInfoPanel/index.jsx","pages/OrderDetailPage/queries/MutationOrderInfo.js","pages/OrderDetailPage/queries/MutationPaymentHistory.js","pages/OrderDetailPage/RightInfoPanel/EditRightInfoPanel.jsx","pages/OrderDetailPage/queries/MutationOrderDocs.js","pages/OrderDetailPage/Docs/DocumentUnit.jsx","pages/OrderDetailPage/Docs/ConfirmDialog.jsx","http/index.js","services/S3Service.js","pages/OrderDetailPage/Docs/Docs.jsx","utils/cookies.js","pages/OrderDetailPage/queries/MutationOrderCommnets.js","pages/OrderDetailPage/queries/MutationNotification.js","pages/OrderDetailPage/queries/SubscriptionComments.js","pages/OrderDetailPage/Comments/Comment.jsx","pages/OrderDetailPage/queries/GetAllUsers.js","pages/OrderDetailPage/Comments/Ð¡ommandsPopover.jsx","pages/OrderDetailPage/Comments/UserListPopover.jsx","utils/placeCaretAtEnd.js","pages/OrderDetailPage/Comments/InputForm.js","pages/OrderDetailPage/Comments/CommentsList.jsx","pages/OrderDetailPage/queries/MutationDeleteOrder.js","utils/UserStatus.js","components/muiCustom/mui/ConfirmDialog.js","pages/OrderDetailPage/OrderActions/Dialogs/TransferOrderDialog.jsx","pages/OrderDetailPage/OrderActions/Dialogs/DeleteOrderDialog.jsx","pages/OrderDetailPage/OrderActions/Actions/OrderStatuses.jsx","pages/OrderDetailPage/OrderActions/Actions/index.jsx","pages/OrderDetailPage/OrderHeader.jsx","pages/OrderDetailPage/Dropzone.js","pages/OrderDetailPage/index.jsx","pages/ReclamationPage/reducer.js","pages/ReclamationPage/queries.js","pages/ReclamationPage/index.js","utils/SystemPreferTheme.js","pages/Settings/index.jsx","pages/AttendancePage/time_ helpers.js","pages/AttendancePage/functions.js","pages/AttendancePage/Table.jsx","pages/AttendancePage/queries/updateTimeDeduction.js","pages/AttendancePage/ReportConfigurator.jsx","pages/AttendancePage/reducer.js","pages/AttendancePage/queries/getUsers.js","pages/AttendancePage/index.js","routers/Router.js","components/BaseLayout/index.js","components/muiCustom/mui/CustomDrawer.js","components/Sidebar/NotificationCenter/getNotifications.js","components/Sidebar/NotificationCenter/index.js","components/Sidebar/SettingsDrawer/SettingsDrawer.jsx","components/Sidebar/Sidebar.js","App.js","materialStyles.js","reportWebVitals.js","services/AuthService.js","store/store.js","http/apollo/wsLinks.js","http/apollo/httpLinks.js","http/apollo/apolloClient.js","index.js","pages/OrderDetailPage/Comments/index.module.sass","pages/OrderListPage/sass/main.module.sass","pages/ReclamationPage/index.module.sass","pages/OrderDetailPage/Docs/docs.module.sass","components/Sidebar/NotificationCenter/index.module.sass","pages/OrderDetailPage/sass/composition.module.sass","pages/AttendancePage/sass/attendance.module.sass"],"names":["module","exports","PrivateRoute","Component","component","rest","store","useContext","Context","useState","isLoaded","setisLoaded","inMemoryToken","token","setToken","a","checkAuth","then","res","useEffect","getToken","render","props","to","notif","type","title","message","duration","Store","addNotification","insert","container","dismiss","slidingExit","LoginForm","email","setEmail","password","setPassword","history","useHistory","login","status","push","className","TextField","variant","label","onChange","e","target","value","trim","Button","width","onClick","reducer","state","action","payload","managerFilter","search","keyword","brief","GetOrdersSubscription","gql","GET_USERS","INSERT_ORDER","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","OrderID","map","item","Name","OrderItemID","Quantity","order","ShippingDate","moment","format","sass","customerTableInfo","Entity","City","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","statusHighlighting","showUnpaid","unpaid","mainsass","unpaidOrder","NeedAttention","split","needAttention","AwaitingDispatch","awaitingDispatch","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","tableMain","table","thead","headerGroup","i","tr","getHeaderGroupProps","headers","column","th","getHeaderProps","tbody","row","original","tableRow","getRowProps","cells","cell","td","getCellProps","TableSearch","placeholder","defaultValue","disableAutoFocus","table_search_wrapper","autoFocus","compare","finded","arg","toLowerCase","includes","filter","array","result","newOrders","ord","ManagerID","Search","dispatch","users","Box","sx","display","breifname","val","arr","selectedTab","orders","preOrders","adjacentSearch","breif","orderListLastSearckKeyword","showonTab","el","briefOnClick","adjacentSearchWrap","filterPlaceholder","FormControl","Select","name","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","MUTATE_ORDER_STATUS","PreOrders","useMutation","newColumnList","filtredData","tableWrapper","preOrdersTableWrapper","Priority","useMemo","sortedData","sort","b","Date","AccessLevelID","styles","secondary","color","fontSize","padding","textTransform","borderTop","Recently","spreadData","days","subtract","dateCreation","AcceptanceDate","date","objs","spread","ifNothing","Typography","style","m","GET_ARCHIVED_SEARCH_ORDERS","GET_ALL_ORDERS_AMOUNT","GET_ARCHIVED_LATEST_ORDERS","GET_ARCHIVED_UNPAID_ORDERS","PreviewTable","useQuery","variables","limit","OrderStatus","reqOrderStatus","fetchPolicy","latestOrders","loading","onCompleted","erp_Orders","unpaidIDs","unpaidOrders","ActualShippingDate","archiveTable","ordRegistration","ordProduction","ordArchived","reclInbox","reclDecision","reclProduction","reclArchived","Archive","useReducer","OS","searchKeyword","error","console","setTimeout","filterFormControl","InputLabel","labelId","filterInputBase","event","marginTop","StyledTabs","styled","Tabs","theme","background","minHeight","StyledTab","Tab","fontWeight","typography","pxToRem","borderRight","borderLeft","boxShadow","opacity","backgroundColor","OrderListLayout","cachedOrders","cachedPreOrders","reclamations","archived","initialState","useSubscription","onSubscriptionData","options","subscriptionData","forEach","ID","setCachedOrders","setCachedPreOrders","createNewOrder","TabPanel","children","index","other","role","hidden","aria-labelledby","mb","a11yProps","newValue","aria-label","marginLeft","marginRight","alignSelf","log","insert_erp_Orders","returning","erp_Users","GET_ORDER_BY_ID","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","UPDATE_ORDER_ITEM","UPDATE_ORDER_ITEM_METADATA","OrderItemActions","editState","editItemHandler","deleteItemHandler","setOIDialog","updateItem","anchorEl","setAnchorEl","SerialNumber","Fitter","handleClose","minWidth","aria-controls","aria-haspopup","currentTarget","size","moreVertIcon","Menu","keepMounted","open","Boolean","onClose","actionsWrapper","deleteButton","fullName","quantity","OrderComposition","refetch","orderID","OIDialog","deleteOrderItemMutation","insertOrderItemMutation","updateOrderItemMutation","updateOrderItemMetadataMutation","itemID","orderItemID","FullName","closeOIDialog","insertOrderItem","parseInt","Unit","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","addOrderItem","multiline","fullNameInput","quantityInput","DialogActions","justifyContent","OrderInfoCard","heading","secondaryHeading","Pre","palette","text","OrderMeta","OrderNumber","Comment","CreatingDate","aboutOrder","PaymentHistories","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","UPDATE_NEED_ATTENTION","MOVE_ORDER_TO_ARCHIVE","MOVE_ORDER_TO_PRIORITY","INSERT_PAYMENT","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","insertPayment","Object","keys","JSON","stringify","saveChanges","InputProps","inputComponent","Autocomplete","getOptionLabel","option","renderInput","params","managerID","indexOf","find","findSelectedManeger","DELETE_ORDER_FILE","DocumentUnit","file","canDelete","deleteFileCb","docsItem","onUpload","docsItemOnUpload","href","process","Key","rel","filename","fileExtension","svg","getIcon","FileName","Math","floor","pow","humanFileSize","Size","UploadingDate","deleteBtn","ConfirmDialog","onConfirmF","aria-describedby","DialogContentText","API_URL","$api","axios","create","withCredentials","baseURL","interceptors","request","use","config","Authorization","getInMemoryToken","S3Service","acceptedFiles","formData","FormData","append","put","this","s3_url","key","deleteFileMutation","delete","Docs","setOpen","fileOnDelete","setFileOnDelete","initShowDocs","document","cookie","pop","shift","isVisible","setisVisible","handleClickOpen","deleteFile","sectionHead","expandBtn","expires","setFullYear","getFullYear","setUnexpiredCookie","INSERT_ORDER_COMMENT","DELETE_ORDER_COMMENT","UPDATE_ORDER_COMMENT","INSERT_NOTIFICATION","SUBSCRIBTION_ORDER_COMMENT","userID","updateComment","deleteComment","nowEditing","setNowEditing","commentUnit","commentHeader","sender","actions","CommentID","time","Timestamp","timestamp","contentEditable","commentContent","suppressContentEditableWarning","onBlur","innerHTML","onMouseLeave","dangerouslySetInnerHTML","__html","Text","toString","checklistUnit","GET_ALL_USERS","Ð¡ommandsPopover","setAnchorULP","root","getElementById","elem","createElement","classList","add","appendChild","insertTodoinDOM","current","UserListPopover","getAttribute","inputform","innerText","slice","join","mentionedUserHiglight","dataset","mentionedUser","focus","window","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","select","placeCaretAtEnd","space","userid","InputForm","insertComment","anchorULP","commentInputForm","ref","data-ph","onInput","onKeyUp","ctrlKey","metaKey","keyCode","saveButton","CommentsList","insertOrderCommentMutation","updateOrderCommentMutation","deleteOrderCommentMutation","insertNotificationMutation","useRef","comments","newText","switchTodo","toggle","checklistUnit_complited","els","querySelectorAll","addEventListener","once","removeEventListener","line","erp_Comments","commentListThread","commentsListWrapper","mentioned","insert_erp_Comments_one","MentionedUser","comment","DELETE_ORDER","UserStatus","general","management","bookkeeping","manufacture","confirmLabel","onCloseComplete","isDangerous","p","TransferOrderDialog","handler","DeleteOrderDialog","renderAlg","mutationAwaitingDispatch","mutationNeedAttention","tip","curDate","toISOString","nd","icon","UilExclamationTriangle","requirement","OrderStatusID","optimisticResponse","__typename","UilClockThree","arrayOfBtns","renderResult","each","undefined","btnComponent","data-tip","dialog","dialogHandler","groupOrderButtons","OrderActions","setEditState","mutationMoveOrderToArchive","mutationMoveOrderToPriority","mutationDeleteOrder","transferOrderToArchive","update_erp_Orders_by_pk","buttons","UilFileCheck","UilTruck","delete_erp_Orders_by_pk","UilTrashAlt","UilPlus","UilUnlock","UilLock","US","OrderStatuses","orderStatus","orderStatusHighlighting","OrderHeader","orderActionsRow","isFileOnDropzone","isDragActive","remove","OrderLayout","onUploadFiles","setOnUploadFiles","ReactTooltip","rebuild","editStateQueryArg","URLSearchParams","useLocation","get","useParams","fileUploader","useCallback","uploadFile","useDropzone","onDrop","getRootProps","childrens_props","Composition","RightInfoPanel","inbox","decision","inproduction","SUBSCRIPTION_RECLAMATION_ORDERS","UPDATE_ORDER_STATUS","Reclamation","getState","columnName","droppableId","orderStatusID","mutateOrderStatusID","insertOrder","col","getOrderStatus","reclatationLayout","onDragEnd","source","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","movedObj","move","entries","columnWrapper","reclColumn","provided","snapshot","innerRef","draggableWrapper","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","orderItem","customerInfo","DARK_CLASS","SystemPreferTheme","appTheme","setAppTheme","systemPrefersDark","useMediaQuery","query","mode","documentElement","changeTheme","newTheme","Settings","UItheme","logout","GridCard","gridCard","grid","Email","selectThemeWrapper","convertInterval","t","hour","decpart","min","round","minute","monthAdd","month","temp","getMonth","setMonth","setDate","getDate","getTimedelta","time1","time2","mtime1","mtime2","diff","abs","asSeconds","daysInMonth","selectedMonth","year","sec2hours","seconds","fill_columns","timeDeduction","columnDay","intervals","ent","ext","total_duration","intervalgrid","interval","intervalred","generateColumns","lastname","firstname","Cell","total_t","with_human_mistakes","day","findedIntervalsForCurrentDay","property","dur","parseFloat","human_mistakes","calc_hours_for_mounth","UPDATE_TIME_DEDUCTION","months","ReportConfigurator","updateTimeDeductionMutation","timedeductionRef","reportMonthHandler","d","attributes","TimeDeduction","update_attendance_config_by_pk","suitable","chooseMonth","Error","Attendance","defaultDate","s_keyword","getInitialState","replace","gte","lte","getVarsForSubscription","attendance_config","attendance_users_aggregate","nodes","reportConfigurator","header","attendanceTable","AppRouter","path","exact","BaseLayout","CustomDrawer","toggleDrawer","Drawer","PaperProps","backdropFilter","onKeyDown","GET_NOTIFICATIONS","UPDATE_VIEWED","NotificationCenter","notifications","setNotifications","updateViewedMutration","erp_Notifications","unviewed","Viewed","viewed","_eq","setState","notificationUnit","notificationHeader","item1","normal","item2","Order","item3","Badge","badgeContent","unviewedCounter","wrapper","unreadedWrapper","ToggleButtonGroup","border","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","Sidebar","wrap","activeClassName","observer","parts","getCookie","setUItheme","createTheme","primary","main","light","fontFamily","subtitle1","letterSpacing","subtitle2","subtitle3","getDesignTokens","components","MuiDialog","styleOverrides","paper","borderRadius","MuiDialogTitle","borderBottom","MuiDialogContent","MuiDialogActions","MuiMenu","MuiMenuItem","defaultProps","disableRipple","MuiListItemText","MuiListItemIcon","MuiButton","textInfo","iconic","strokeWidth","stroke","disableElevation","MuiToggleButton","MuiTextField","autoComplete","MuiAutocomplete","MuiInputLabel","transform","position","shrink","MuiFilledInput","disableUnderline","MuiInput","MuiInputBase","MuiOutlinedInput","notchedOutline","MuiPopover","MuiSelect","boxSizing","outline","MuiTab","MuiCheckbox","MuiDrawer","muicomponents","ThemeProvider","delayShow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AuthService","post","isLoading","pageParams","makeAutoObservable","bool","isAuth","setInMemoryToken","accessToken","setUser","response","r","setLoading","url","wsRetryLink","RetryLink","delay","initial","max","Infinity","jitter","attempts","retryIf","_operation","wsErrorLink","onError","graphQLErrors","networkError","operation","forward","locations","webSocketLink","WebSocketLink","uri","ws_protocol","reconnect","lazy","connectionParams","subscriptionClient","onReconnecting","getNewInMemoryToken","newToken","close","connect","reinitWSConnection","httpErrorLink","Observable","setContext","subscriber","next","bind","complete","subscribe","catch","httpAuthLink","_","httpLink","HttpLink","http_protocol","splitLink","definition","getMainDefinition","kind","apolloClient","ApolloClient","link","cache","InMemoryCache","typePolicies","keyFields","erp_CheckListUnits","createContext","getNewToken","ReactDOM","client","sessionData","session","Provider"],"mappings":"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","file":"static/js/main.2529a33d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterFormControl\":\"archive_filterFormControl__1uVNU\",\"filterInputBase\":\"archive_filterInputBase__1-l5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"needAttention\":\"order_needAttention__36HJS\",\"awaitingDispatch\":\"order_awaitingDispatch__2aIpT\",\"groupOrderButtons\":\"order_groupOrderButtons__3MvrK\",\"orderActionsRow\":\"order_orderActionsRow__1ro0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"search_filter__F_ZsO\",\"filterPlaceholder\":\"search_filterPlaceholder__1WCV5\",\"filterIndicator\":\"search_filterIndicator__33hWx\",\"circle\":\"search_circle__28B_G\",\"pulsate\":\"search_pulsate__c8CLI\",\"adjacentSearchWrap\":\"search_adjacentSearchWrap__1v790\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"OrderItemActions_deleteButton__366_d\",\"moreVertIcon\":\"OrderItemActions_moreVertIcon__1nfZK\",\"inputListItem\":\"OrderItemActions_inputListItem__2r1Lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"styles_grid__2B7og\",\"gridCard\":\"styles_gridCard__Zz1TM\",\"selectThemeWrapper\":\"styles_selectThemeWrapper__2JWIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeToggleButtons\":\"SettingsDrawer_themeToggleButtons__hIzSP\",\"user\":\"SettingsDrawer_user__3iVNA\",\"logoutButton\":\"SettingsDrawer_logoutButton__2_Id_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_search_wrapper\":\"table_search_table_search_wrapper__2YVA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preOrdersTableWrapper\":\"preorders_preOrdersTableWrapper__28dMd\"};","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const { store } = useContext(Context)\n  const [isLoaded, setisLoaded] = useState(false);\n  const [token, setToken] = useState(store.inMemoryToken);\n\n    async function getToken() {\n      store.checkAuth().then(\n        (res) => {\n          setToken(res)\n          setisLoaded(true)\n        }\n      )\n    }\n\n    useEffect(() => {\n      if (token) setisLoaded(true)\n      else getToken();\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n          if (token) return <Component {...props} />\n          else return <Redirect to='/login'/>;\n        }\n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import { Store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\nexport const notif = (type, title, message = '', duration = 2000 ) =>  Store.addNotification({\n  title,\n  message,\n  type,\n  insert: \"bottom\",\n  container: \"top-right\",\n  dismiss: {\n    duration,\n  },\n  slidingExit: {\n    duration: 50, \n  }\n});\n","import { useState, useContext } from 'react';\nimport { Context } from '../../index';\nimport { useHistory } from \"react-router-dom\";\n\nimport { TextField, Button } from '@mui/material';\nimport './LoginForm.sass'\nimport { notif } from '../../utils/notification'\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    \n    const { store } = useContext(Context);\n    const history = useHistory();\n\n\n    const login = async () => {\n      const res = await store.login(email, password)\n      if (res?.status === 200){\n        history.push('/')\n      }\n      else{\n        notif('warning', 'Unauthorized error', 'Invalig email or password')\n      }\n      \n    }\n\n    return(<>\n      <div className='loginCard'>\n        <TextField\n        className='loginInput'\n        variant='filled'\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          variant='filled'\n          className='loginInput'\n          onChange={e => setPassword(e.target.value.trim()) }\n        />\n        <Button\n          className=\"Button\"\n          variant=\"outlined\"\n          width='300px'\n          onClick={login}\n        >ÐÐ¾Ð¹ÑÐ¸</Button>\n      </div>\n    </>);\n}\n\nexport default LoginForm\n","export const initialState = (store) => ({\n    orders: store.cachedOrders || [],\n    preOrders: store.cachedPreOrders || [],\n    selectedTab : store.selectedTab,\n\n    managerFilter: 0,\n\n    search : {\n        // search in adjacent groups as an additional information\n        // Ð¿Ð¾Ð¸ÑÐº Ð² ÑÐ¼ÐµÐ¶Ð½ÑÑ ÑÐ°Ð·Ð´ÐµÐ»Ð°Ñ Ð´Ð»Ñ Ð²ÑÐ²Ð¾Ð´Ð°, ÐºÐ°Ðº ÑÐ¿ÑÐ°Ð²Ð¾ÑÐ½Ð¾Ð¹ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸\n        keyword: store.orderListLastSearckKeyword,\n        brief: {\n            orders : 0,\n            preOrders: 0,\n            reclamations: 0,\n            archived: 0,\n        }\n    }\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'searchResult': \n        case 'managerFilter': \n            return {...state, [action.type]: action.payload };\n\n        case 'resetFilters': \n            return {...state, managerFilter: 0, search: { ...state.search, keyword: '' }}\n\n\n        case 'search.brief': \n            return {...state, search: {\n                ...state.search,\n                brief: action.payload\n            }}\n        case 'search.keyword':\n            return {...state, search: {\n                ...state.search,\n                keyword: action.payload\n            }  }\n\n\n        default: \n            return {...state}\n    }\n}","import gql from 'graphql-tag'; \n\n// ÐÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð·Ð°ÐºÐ°Ð·Ñ Ð½Ð°ÑÐ¾Ð´ÑÑÐ¸ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð² ÐÑÐµÐ·Ð´Ð°ÐºÐ°Ð·Ð°Ñ Ð¸ Ð² Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ \n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [1,2]} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      NeedAttention\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems(order_by: {OrderItemID: asc}){\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n        LastName\n      }\n\n    }  \n  }\n`\n","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n    AccessLevelID\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\nimport sass from '../sass/main.module.sass'\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ' - 0%'\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row, counter) => counter +1\n    },\n    {\n      Header: 'ÐÐ°Ð¸Ð¼.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length === 0) return <Link to={`/orders/${data.OrderID}`}><div>ÐÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ð¼Ð¾Ð³Ð¾</div></Link>\n\n        else return (<>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </>)\n      }\n      \n    },\n    {\n      Header: 'ÐÐ¾Ð»-Ð²Ð¾',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'ÐÑÐ³ÑÑÐ·ÐºÐ°',\n      accessor: (order) => \n      <> { order.ShippingDate && moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'ÐÐ¾Ð¼Ð¿Ð°Ð½Ð¸Ñ / Ð³Ð¾ÑÐ¾Ð´',\n      accessor: data => \n      <div className={sass.customerTableInfo}>\n        <div>{data.Entity}</div>\n        <div>{data.City}</div>\n      </div>\n    },\n    {\n      Header: 'Ð¡ÑÐµÑ- Ð¾Ð¿Ð»Ð°ÑÐ°',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'ÐÐ´Ð¶.',\n      accessor: data => <> {data.User?.FirstName[0] || ''} </>\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../sass/main.module.sass'\nimport { Link } from 'react-router-dom'\n\nfunction statusHighlighting(order, showUnpaid){\n  if (showUnpaid && order.unpaid) return mainsass.unpaidOrder\n\n  // ÐÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð¾Ð² ÑÑÐµÐ±ÑÑÑÐ¸Ñ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ Ð¸Ð¼ÐµÑÑ Ð¿ÑÐ¸Ð¾ÑÐ¸ÑÐµÑ\n  if (order.NeedAttention?.split(',')[0] === 'true') return mainsass.needAttention\n  else if (order.AwaitingDispatch) return mainsass.awaitingDispatch\n  else return ''\n}\n\nexport default function Table({columns, data, className, showUnpaid }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return null;\n   return (\n     <>\n    <div className={`${mainsass.tableMain} ${className} ${mainsass.table}`} {...getTableProps()}>\n      <div className={mainsass.thead}>\n        {headerGroups.map((headerGroup, i) => (\n          <div className={mainsass.tr} key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <div  className={mainsass.th} {...column.getHeaderProps()}>{column.render('Header')}</div>\n            ))}\n          </div>\n        ))}\n      </div>\n      <div {...getTableBodyProps()} className={mainsass.tbody}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n\n          const { OrderID } = row.original\n          return (\n              <Link to={`/orders/${OrderID}`} className={`${statusHighlighting(row.original, showUnpaid)} ${mainsass.tableRow}`} {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <div  className={mainsass.td} {...cell.getCellProps()}>{cell.render('Cell')}</div>\n                })}\n              </Link>\n          )\n        })}\n      </div>\n    </div>\n    </>\n  )\n}","import { UilSearch } from '@iconscout/react-unicons'\nimport PropTypes from 'prop-types';\nimport sass from './table_search.module.sass'\n\n\nconst TableSearch = (props) => {\n  const {placeholder, onChange, defaultValue, disableAutoFocus} = props\n   return (\n    <div className={sass.table_search_wrapper}>\n      <UilSearch/>\n      \n      <input \n      type='text' \n      placeholder={placeholder} \n      onChange={onChange} \n      autoFocus={disableAutoFocus? false : true} \n      defaultValue={defaultValue}\n      />\n    </div>\n   )\n}\n\nTableSearch.propTypes = { \n  placeholder: PropTypes.string,\n  onChange:    PropTypes.func,\n  defaultValue:  PropTypes.string, \n  disableAutoFocus: PropTypes.bool,\n}\n\nexport default TableSearch","function compare(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // Ð¿ÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ Ð¿Ð¾Ð¸ÑÐº Ð¿Ð¾ ÐºÐ»ÑÑÐµÐ²Ð¾Ð¼Ñ ÑÐ»Ð¾Ð²Ñ\n    if (keyword !== '') {\n        result = array.filter( (order) => compare(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //Ð¿ÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ Ð¿Ð¾Ð¸ÑÐº Ð¿Ð¾ ÑÐ¸Ð»ÑÑÑ\n    if (managerFilter !== 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID === managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}\n\n\nexport const search_alg = (array, keyword) => {\n    return array.filter( (order) => compare( keyword, order.InvoiceNumber, order.Entity )) \n}","import sass from './search.module.sass'\nimport { FormControl, Select, MenuItem, Box } from '@mui/material';\nimport TableSearch from '../../..//components/TableSearch'\n\nimport { search_alg } from '../Search/filter';\nimport { useContext } from 'react';\nimport { Context } from '../../..';\n\n\nconst Search = ({ state, dispatch, users  }) => {\n    const { store } = useContext(Context)\n   \n\n    const searchHandler = (e) => {\n        const val = e.target.value.trim()\n        var arr = [];\n        var breifname;\n\n        if (state.selectedTab === 0){\n            arr = state.orders;\n            breifname = 'orders'\n        }\n        else if (state.selectedTab === 1) {\n            arr = state.preOrders;\n            breifname = 'preOrders'\n        }\n       \n        const adjacentSearch = search_alg(arr, val)\n       \n        dispatch({ \n            type: 'search.brief', payload: {\n                ...state.search.breif,\n                [breifname]: adjacentSearch.length\n            }\n        })\n\n        store.orderListLastSearckKeyword = val\n        dispatch({ type: 'search.keyword', payload: val }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter !== 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>ÐÑÐ´Ð°ÑÐ° Ð¾Ð³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð° ÑÐ¸Ð»ÑÑÑÐ¾Ð¼</p>\n            </div>\n        ) \n    }\n\n    function briefOnClick(dispatch, brief){\n        dispatch({\n            type: 'selectedTab',\n            payload: brief.showonTab,\n        })\n    }\n\n    const briefSearch = () => ([\n        {\n            showonTab: 1,\n            data: state.search.brief.orders,\n            title: 'Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸' ,\n        },\n        {\n            showonTab: 0,\n            data: state.search.brief.preOrders,\n            title: 'Ð² Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ð°Ñ' ,\n        }\n    ].map( el => {\n        if (!state.search.keyword || !el.data) return null\n        if (el.showonTab === state.selectedTab) return null;\n\n        return ( <div \n            onClick={() => briefOnClick(dispatch, el) } \n            className={sass.adjacentSearchWrap }>\n                {el.data} {el.title} \n            </div> )\n        })\n    )\n    \n    return (\n        <>\n        <Box sx={{ display: 'flex' }}>\n            <TableSearch placeholder=\"Ð¡ÑÐµÑ, ÐºÐ¾Ð½ÑÑÐ°Ð³ÐµÐ½Ñ\" onChange={searchHandler} defaultValue={state.search.keyword}/>\n            {briefSearch()}\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>ÐÐµÐ½ÐµÐ´Ð¶ÐµÑ</span>\n\n                <FormControl>\n                  <Select\n                  name    = \"managerFilter\"\n                  value    = {state.managerFilter}\n                  onChange = {managerHandler}\n                  >\n                      <MenuItem value={0}>ÐÑÐµ</MenuItem>\n                      { users.map( (user) => \n                      <MenuItem value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                      )}\n                  </Select>\n                </FormControl>\n            </div>)}\n        </Box>\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamp!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n    }\n  }\n\n`;","import { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\nimport Search from '../Search';\nimport { filter } from '../Search/filter'\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport { UilFileCheck} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\nimport mainsass from '../sass/main.module.sass'\nimport { Button } from '@mui/material';\n\nconst PreOrders = ({ state, dispatch }) => {\n    const data = state.preOrders\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    // const onClickTransfer = (order) => {\n    //     data.splice(data.indexOf(order), 1)\n    //     dispatch({ type: 'preOrders', payload: data })\n\n    //     const res = mutationOrderStatus({ variables: { \n    //         OrderID: order.OrderID, \n    //         AcceptanceDate: new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"}) } \n    //     })\n    //     console.log(res);\n    // }\n\n    var newColumnList = [...columnsList];\n    const filtredData = filter(data, state.search.keyword)\n    \n    // newColumnList.push({\n    //     Header: 'ÐÑÐ¸Ð½ÑÑÑ',\n    //     accessor: data => \n    //     <Button onClick={() => onClickTransfer(data)} variant='iconic'><UilFileCheck/></Button>\n    //     ,\n    //   })\n   \n    return(\n    <div className={`${mainsass.tableWrapper} ${sass.preOrdersTableWrapper}`}>\n        <Search state={state} dispatch={dispatch} />\n        {filtredData && <Table columns = {newColumnList} data = {filtredData} />}\n    </div>\n    )\n}\nexport default PreOrders","import { useMemo, useContext } from 'react'\nimport { Context } from '../../..'\n// ui \nimport mainsass from '../sass/main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ users, state, dispatch }) => {\n    const {store} = useContext(Context)\n\n    const columns = useMemo(\n        () => columnsList, []\n    )\n    \n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n    })\n\n    const filtredData = filter(sortedData, state.search.keyword, state.managerFilter)\n    \n    return(\n        <div className={mainsass.tableWrapper}>\n            {users && <Search state={state} dispatch={dispatch} users={ users.filter(e => [1,2].includes(e?.AccessLevelID)) }/>}\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import Table from '../UniversalTable/TableMarkup'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport { Typography } from '@mui/material'\n\nconst styles = {\n  secondary: {\n    color: 'var(--lowContrast)',\n    fontSize: '.8rem',\n    padding: '0 8px',\n    textTransform: 'none'\n  },\n  table: {\n    borderTop: 'var(--border)'\n  }\n}\n\nconst Recently = ({ state }) => {\n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(b.AcceptanceDate) - new Date(a.AcceptanceDate);\n      });\n\n    const spreadData = spread(sortedData);\n\n    function ifNothing(data){\n        if (data.length === 0) return <Typography style={styles.secondary}>Ð½Ð¸ÑÐµÐ³Ð¾ Ð½Ðµ Ð±ÑÐ»Ð¾ Ð´Ð¾Ð±Ð°Ð²Ð»ÐµÐ½Ð¾</Typography>\n    } \n\n    return(\n        <>\n            <Typography \n            variant = \"subtitle1\" \n            m       = '10px 10px'>\n            Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ {ifNothing(spreadData[0].objs)} \n            </Typography>\n\n            { spreadData[0].objs.length ? ( <>\n              <Table \n              columns = {columnsList} \n              data    = {spreadData[0].objs} \n              style   = {styles.table} />\n              </>): \n            null}\n\n\n            <Typography  \n            variant=\"subtitle1\" \n            m='10px 10px'>\n            ÐÑÐµÑÐ° {ifNothing(spreadData[1].objs)} \n            </Typography>\n\n            { spreadData[1].objs.length ? ( <>\n              <Table \n                columns = {columnsList} \n                data    = {spreadData[1].objs} \n                style   = {styles.table} />\n            </>): null}\n        </>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'ÐÑÐµÑÐ°',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.AcceptanceDate?.split('T')[0]\n\n        if (dateCreation === days[0].date) days[0].objs.push(order);\n        else if (dateCreation === days[1].date) days[1].objs.push(order);  \n    }\n\n    return days;\n};\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_SEARCH_ORDERS = gql`\n    query ($keyword: String!, $OrderStatus: Int!){\n    erp_Orders(\n      order_by: {ActualShippingDate: desc_nulls_last},\n      where: {\n      _or: [\n        { Entity: {_ilike: $keyword} }, \n        { InvoiceNumber: {_ilike: $keyword} },\n        { OrderItems: {_and: [{SerialStarts: {_lte: $keyword}}, {SerialEnds: {_gte: $keyword }}] } },\n\n        ],\n      OrderStatusID: {_eq: $OrderStatus}\n      }) {\n        ActualShippingDate\n        AwaitingDispatch\n        OrderID\n        Entity\n        InvoiceNumber\n        City\n        ShippingDate\n        PaidAmount\n        TotalAmount\n        CreatingDate\n        ManagerID\n        OrderItems {\n          Quantity\n          OrderItemID\n          Name\n        } \n        User {\n          FirstName\n        }\n    }\n  }\n`\n\n\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ALL_ORDERS_AMOUNT = gql`\nquery{\n  erp_Orders(\n    where: {OrderStatusID: {_eq: 3}},\n    order_by: {OrderID: desc},\n    limit: 1000,\n    ){\n\t\tOrderID\n    PaidAmount\n    TotalAmount\n  }\n}\n`\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_LATEST_ORDERS = gql`\nquery($limit: Int!, $OrderStatus: Int!){\n  erp_Orders(\n    order_by: {ActualShippingDate: desc_nulls_last}\n    where: { OrderStatusID: {_eq: $OrderStatus } } \n    limit: $limit\n    ){\n    ActualShippingDate\n    ShippingDate\n    AwaitingDispatch\n    OrderID\n    Entity\n    InvoiceNumber\n    City\n    PaidAmount\n    TotalAmount\n    CreatingDate\n    ManagerID\n    OrderItems {\n      Quantity\n      OrderItemID\n      Name\n    } \n    User {\n      FirstName\n    }\n  }\n}\n`","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_UNPAID_ORDERS = gql`\nquery MyQuery($unpaidIDs: [Int!], $OrderStatus: Int!) {\n    erp_Orders(where: { OrderStatusID: {_eq: $OrderStatus}, OrderID: {_in: $unpaidIDs } } ) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      ActualShippingDate\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n    }\n  }\n`","//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ALL_ORDERS_AMOUNT } from './queries/getAllOrdersAmount'\nimport { GET_ARCHIVED_LATEST_ORDERS } from './queries/getArchivedLatestOrders'\nimport { GET_ARCHIVED_UNPAID_ORDERS } from './queries/getArchivedUnpaidOrders'\n\nimport Table from '../UniversalTable/TableMarkup'\nimport sass from './archive.module.sass'\nimport { Typography } from '@mui/material/';\n\nconst PreviewTable = (props) => {\n  const { state, dispatch, columns } = props\n\n  const { data : latestOrders = [], loading: latestOrdersloading } = useQuery(GET_ARCHIVED_LATEST_ORDERS, { variables: {\n     limit: 15, \n     OrderStatus: state.reqOrderStatus\n    },\n    fetchPolicy: \"cache-and-network\"\n    });\n\n  const { loading } = useQuery(GET_ALL_ORDERS_AMOUNT, { onCompleted: (res) => {\n    dispatch({ type: 'unpaidIDs', payload: res.erp_Orders.filter(e => e.PaidAmount / e.TotalAmount < .999).map(e => e.OrderID)})\n  }})\n\n  const { data : unpaidOrders = [], loading: unpaidOrdersLoading } = useQuery(GET_ARCHIVED_UNPAID_ORDERS, { variables: {\n    unpaidIDs: state.unpaidIDs,\n    OrderStatus: state.reqOrderStatus\n  } })\n\n  const previewData = () => {\n    if (!unpaidOrders.erp_Orders || !latestOrders.erp_Orders) return []\n    return ([\n      ...unpaidOrders.erp_Orders.map(e => ({...e, unpaid: true})),\n      // Ð¿ÑÐ¾Ð²ÐµÑÑÐµÐ¼ ÐµÑÑÑ Ð»Ð¸ Ð² Ð¿Ð¾ÑÐ»ÐµÐ´Ð½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð°Ñ Ð½ÐµÐ¾Ð¿Ð»Ð°ÑÐµÐ½Ð½ÑÐ¹, ÐµÑÐ»Ð¸ ÐµÑÑÑ, ÑÐ¾ ÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð¸Ð· Ð¸Ñ Ð·Ð°ÐºÐ°Ð· Ð¸Ð· latestOrders\n      ...latestOrders.erp_Orders\n      .filter(e => !state.unpaidIDs.includes(e.OrderID))\n      .sort(function(a,b){\n        return new Date(b.ActualShippingDate) - new Date(a.ActualShippingDate);\n      })\n      ])\n  }\n\n  return (<>\n    <Typography color='textSecondary' variant=\"subtitle1\" m='10px 1rem'>\n      ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 15 Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½Ð½ÑÑ  \n    </Typography>\n\n      <Table columns = {columns} data = {previewData()} className={sass.archiveTable} showUnpaid/>\n  </>)\n}\nexport default PreviewTable","export default class OrderStatus {\n  static ordRegistration = 1 // Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ñ\n  static ordProduction = 2\n  static ordArchived = 3\n\n  static reclInbox = 10\n  static reclDecision = 11\n  static reclProduction = 12\n  static reclArchived = 13\n}\n\n","import { useMemo, useReducer } from 'react';\n\n//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ARCHIVED_SEARCH_ORDERS } from './queries/getArchivedSearchOrders'\n\n//ui\nimport sass from './archive.module.sass'\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\nimport { Typography } from '@mui/material/';\n\nimport PreviewTable from './PreviewTable';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport OS from '../../../utils/OrderStatus'\nimport moment from 'moment'\n\nimport TableSearch from '../../..//components/TableSearch'\nimport { Box } from '@mui/system';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n      case 'reqOrderStatus': \n      case 'searchKeyword': \n      case 'unpaidIDs': \n          return {...state, [action.type]: action.payload };\n      default: \n          return {...state}\n  }\n}\nconst Archive = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    //Ð·Ð°ÐºÐ°Ð·Ñ ÐºÐ¾ÑÐ¾ÑÑÐµ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½Ð¾, Ð½Ð¾ ÐµÑÐµ Ð½Ðµ Ð¾Ð¿Ð»Ð°ÑÐµÐ½Ñ\n    reqOrderStatus: OS.ordArchived,\n    unpaidIDs: [],\n    searchKeyword: '',\n  });\n\n  const handleChange = (event) => {\n    dispatch({ type: 'reqOrderStatus', payload: event.target.value })\n  };\n\n  const { data = [], error } = useQuery(GET_ARCHIVED_SEARCH_ORDERS, { variables: {\n    keyword: '%' + state.searchKeyword + '%',\n    OrderStatus: state.reqOrderStatus\n  }})\n\n  if (error) console.error(error);\n\n  var columns = useMemo(\n    () => [...columnsList], []\n  )\n  \n  columns[3] = {\n    Header: 'Ð¤Ð°ÐºÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ°',\n    accessor: order => \n    <> { order.ActualShippingDate && moment(order.ActualShippingDate).format('DD.MM.YY') }\n    </>\n  }\n\n  const searchHandler = (e) => {\n    setTimeout(() => {\n      dispatch({ type: 'searchKeyword', payload: e.target.value})\n    }, 400)\n  }\n\n  return(\n    <>\n      <TableSearch\n      placeholder='CÑÐµÑ, ÐºÐ¾Ð½ÑÑÐ°Ð³ÐµÐ½Ñ'\n      onChange={searchHandler}\n      />\n\n      <FormControl className={sass.filterFormControl}>\n        <InputLabel variant=\"filter\">ÐÑÐ±ÑÐ°ÑÑ ÑÐ¾Ð»ÑÐºÐ¾ </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={state.reqOrderStatus}\n          label=\"Age\"\n          className={sass.filterInputBase}\n          onChange={handleChange}\n        >\n          <MenuItem value={OS.ordArchived}>ÐÐ°ÐºÐ°Ð·Ñ</MenuItem>\n          <MenuItem value={OS.reclArchived}>Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ð¸</MenuItem>\n        </Select>\n      </FormControl>\n\n    <Box marginTop={6}>\n    {!state.searchKeyword && < PreviewTable \n          state    = {state} \n          dispatch = {dispatch} \n          columns  = {columns} \n          /> }\n\n      {state.searchKeyword &&  data.erp_Orders && <>\n          <Typography color='textSecondary' variant=\"subtitle1\" m='10px 1rem'>\n            Ð ÐµÐ·ÑÐ»ÑÑÐ°Ñ Ð¿Ð¾Ð¸ÑÐºÐ° Ð¿Ð¾ Ð°ÑÑÐ¸Ð²Ñ\n          </Typography>\n          <Table columns = {columns} data = {data.erp_Orders} className={sass.archiveTable}/>\n          {!data.erp_Orders.length && \n            <Typography color='textPrimary'  m={2} variant=\"subtitle2\">-> Ð½Ð¸ÑÐµÐ³Ð¾ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð¾</Typography>\n          }  \n      </>}\n    </Box>\n\n    </>\n  )\n}\nexport default Archive;","import { useContext, useReducer, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\n\n// apollo\nimport { useSubscription, useQuery, useMutation } from '@apollo/client'\nimport { GetOrdersSubscription } from './queries/getOrders'\nimport { GET_USERS } from '../../hasura-queries/getUsers'\nimport { INSERT_ORDER } from './queries/MutationInsertOrder';\n\n// ui \nimport {Tabs, Tab, Box, Button} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { UilPlusCircle } from '@iconscout/react-unicons';\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport Archive from './Archive/';\n\nconst StyledTabs = styled((props) => <Tabs {...props} />)(\n  ({ theme }) => ({\n    background: 'var(--LI)',\n    minHeight: '10px',\n    '& .MuiTabs-indicator': {\n      display: 'none'\n    },\n  }),\n  );\n\nconst StyledTab = styled((props) => <Tab {...props} />)(\n    ({ theme }) => ({\n      textTransform: 'none',\n      fontWeight: 500,\n      fontSize: theme.typography.pxToRem(14),\n      borderRight: '1px solid transparent',\n      borderLeft: '1px solid transparent',\n      minHeight: '10px',\n      color: 'var(--lowContrast)',\n      '&.Mui-selected': {\n        boxShadow: '0 0 15px 0px var(--shadow-color)',\n        opacity: 1,\n        backgroundColor: 'var(--L0)',\n        color: 'var(--accent) !important',\n        borderRight: 'var(--border)',\n        borderLeft: 'var(--border)',\n      },\n      '&:first-of-type':{\n        borderLeft: 'none !important',\n      },\n      '&.Mui-selected:first-of-type': {\n        borderLeft: 'none !important',\n      }\n    }),\n  );\n\n\nconst OrderListLayout = (props) => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState(store));\n    const { selectedTab } = state; \n\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n  \n        options.subscriptionData.data.erp_Orders.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n          });\n\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID === 1) preOrders.push(order)\n            else if (order.OrderStatus.ID === 2) orders.push(order)\n        })\n        store.setCachedOrders(orders)\n        store.setCachedPreOrders(preOrders)\n\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    \n    const { error, loading } = useSubscription(GetOrdersSubscription, { onSubscriptionData });\n    if (error) console.error(error)\n    \n    const { data: users = []} = useQuery(GET_USERS);\n\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n      'managerID':     store.user.UserID,\n      'orderStatusID': 1,\n    }})\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        dispatch({ type: 'resetFilters'})\n        store.selectedTab = newValue\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box mb='30px'>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n  \n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            console.log(res)\n            history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n  \n    const styles = {\n      adddtn: {\n        marginLeft: 'auto',\n        marginRight: '10px',\n        display: 'flex',\n        alignSelf: 'center',\n      }\n    }\n\n\n    return(\n        <>\n        <StyledTabs value={selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\">\n            <StyledTab label=\"ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ñ\" {...a11yProps(0)} />\n            <StyledTab label=\"ÐÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ\" {...a11yProps(1)} />\n            <StyledTab label=\"ÐÐµÐ´Ð°Ð²Ð½Ð¸Ðµ\"   {...a11yProps(2)} />\n            <StyledTab label='ÐÑÑÐ¸Ð²'      {...a11yProps(3)} />\n\n           <Box style={styles.adddtn}>\n            <Button onClick={createOrderHandler} variant='iconic'><UilPlusCircle /></Button>\n           </Box>\n        </StyledTabs>\n\n\n        <TabPanel value={selectedTab} index={0}>\n            <PreOrders state={state} dispatch={dispatch}/>\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={1} >\n            <Priority state={state} dispatch={dispatch} users={users.erp_Users} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={2}>\n            <Recently state={state} dispatch={dispatch} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={3}>\n            <Archive state={state} dispatch={dispatch} />\n        </TabPanel>\n\n      </>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    # visual statuses\n    NeedAttention\n    AwaitingDispatch\n    OrderStatusID\n\n    # dates\n    ActualShippingDate\n    AcceptanceDate\n    ShippingDate\n    CreatingDate\n\n    OrderID\n    ManagerID\n    \n    City\n    \n    Comment\n    Entity\n    InvoiceNumber\n    \n    OrderNumber\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems(order_by: {OrderItemID: asc}) {\n      Name\n      FullName\n      OrderItemID\n      Quantity\n    }\n    Docs {\n      Key\n      FileName\n      Size\n      UploadingDate\n    }\n\n    # finances\n    PaidAmount\n    TotalAmount\n    PaymentHistories(\n      where: {PaidAmount: {_neq: 0}}\n    ){\n      PaidAmount\n      Date\n    }\n\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;\n\n\nexport const UPDATE_ORDER_ITEM = gql`\nmutation($OrderItemID: Int!, $FullName: String!, $Name: String!, $Quantity: Int!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n    _set: {FullName: $FullName, Name: $Name, Quantity: $Quantity}) {\n    Name\n    FullName\n    OrderItemID\n    Quantity\n  }\n}\n\n`;\nexport const UPDATE_ORDER_ITEM_METADATA = gql`\nmutation($OrderItemID: Int!, $Fitter: String!, $SerialNumber: String!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n     _set: {Fitter: $Fitter, SerialNumber: $SerialNumber}\n  ){\n    OrderItemID\n  }\n}\n`","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu, MenuItem, TextField } from '@mui/material';\nimport { UilEllipsisV } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n  \nconst OrderItemActions = ({ editState, item, editItemHandler, deleteItemHandler, updateItem, setOIDialog }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    'serialNumber': item.SerialNumber,\n    'fitter': item.Fitter\n  });\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n\n    // if (item.SerialNumber !== state.serialNumber || item.Fitter !== state.fitter){\n    //   updateItem({ variables: {\n    //     'OrderItemID': item.OrderItemID,\n    //     'Fitter': state.fitter,\n    //     'SerialNumber': state.serialNumber.toString()\n    //   } })\n    // }\n  };\n    \n  return (\n  <div className='noprint'>\n    <Button sx={{\n      minWidth: '20px'\n    }} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size='small'>\n      <UilEllipsisV className={sass.moreVertIcon}/>\n    </Button>\n    <Menu\n      id       = \"simple-menu\"\n      anchorEl = {anchorEl}\n      keepMounted\n      open     = {Boolean(anchorEl)}\n      onClose  = {handleClose}\n    >\n      {/* <div className={sass.inputListItem} >\n        <TextField \n          type=\"number\"\n          label=\"Ð¡ÐµÑÐ¸Ð¹Ð½ÑÐ¹ Ð½Ð¾Ð¼ÐµÑ\" \n          multiline\n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'serialNumber': e.target.value\n          }))}\n          // defaultValue={state.serialNumber}\n          />\n      </div>\n\n      <div className={sass.inputListItem} >\n        <TextField \n          label=\"Ð¡Ð±Ð¾ÑÑÐ¸Ðº\"  \n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'fitter': e.target.value\n          }))}\n          defaultValue={state.fitter}\n        />\n      </div> */}\n\n\n      {editState && (\n        <div className={sass.actionsWrapper}>\n          <MenuItem onClick={ (e) => {\n              setOIDialog(true)\n              handleClose();\n              editItemHandler(e, item);\n          }}>Ð ÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°ÑÑ</MenuItem>\n\n          <MenuItem \n            className={sass.deleteButton}\n            onClick={ ()=> {\n              handleClose();\n              deleteItemHandler(item.OrderItemID);\n          }}>Ð£Ð´Ð°Ð»Ð¸ÑÑ</MenuItem>\n        </div>\n      )}\n\n    </Menu>\n  </div>\n  );\n}\n\nOrderItemActions.propTypes = { \n    editState: PropTypes.bool,\n    item:      PropTypes.object,\n    editItemHandler:  PropTypes.func, \n    deleteItemHandler: PropTypes.func,\n    updateItem: PropTypes.func\n}\n\nexport default OrderItemActions\n\n","import { useReducer, useEffect, useState } from 'react'\n\n//apollo \nimport { useMutation } from \"@apollo/client\"\nimport { \nDELETE_ORDER_ITEM, \nINSERT_ORDER_ITEM, \nUPDATE_ORDER_ITEM, \nUPDATE_ORDER_ITEM_METADATA \n} from \"./queries/MutationOrderItem\";\n\n// ui \nimport { Button, TextField, Box, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport sass from './sass/composition.module.sass'\nimport OrderItemActions from './OrderItemActions'\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n    id: null,\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                id: action.payload[0],\n                name: action.payload[1],\n                fullName: action.payload[2],\n                quantity: action.payload[3]\n            }\n        default: \n            return {...state}\n    }\n\n}\n\nconst OrderComposition = props => {\n    const { data, editState, refetch, orderID, OIDialog, setOIDialog } = props\n    const [ deleteOrderItemMutation ]         = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ]         = useMutation(INSERT_ORDER_ITEM);\n    const [ updateOrderItemMutation ]         = useMutation(UPDATE_ORDER_ITEM);\n    const [ updateOrderItemMetadataMutation ] = useMutation(UPDATE_ORDER_ITEM_METADATA);\n    const [state, dispatch ] = useReducer(reducer, initialState)\n    \n    const deleteItemHandler = (itemID) => {\n        deleteOrderItemMutation({ variables: { orderItemID: itemID} })\n        refetch()    \n    }\n    const editItemHandler = (e, item) => {\n        dispatch({ type: 'editItem', payload: [item.OrderItemID, item.Name, item.FullName, item.Quantity] })\n    }\n\n    const closeOIDialog = () => {\n      setOIDialog(false);\n    };\n\n    useEffect(() => {\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n    const insertOrderItem = () => {\n        closeOIDialog();\n        if (state.quantity === '' || state.name === '') return null\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const updateOrderItem = () => {\n      if (state.quantity === '' || state.name === '') return null\n      closeOIDialog();\n      updateOrderItemMutation({variables: { \n        OrderItemID: state.id,\n        Name: state.name, \n        Quantity: parseInt(state.quantity),\n        FullName: state.fullName, }}).then( () => { dispatch({ type: 'reset'}); refetch() })    \n  }\n  \n    return(<div className='Composition'>     \n        {data.OrderItems.map( (el, index) => \n        <div\n          key={el.OrderItemID}\n          className={sass.Unit} \n        >\n              <span className={sass.index}>{index+1}</span>\n              <Typography color='textPrimary' className={sass.name}> {el.Name} </Typography>\n              <span  className={sass.quantity}> {el.Quantity}</span>\n\n              {editState && \n              <OrderItemActions\n                  {...props}\n                  item={el}\n                  editItemHandler={editItemHandler}\n                  deleteItemHandler={deleteItemHandler}\n                  updateItem={updateOrderItemMetadataMutation}\n               />\n               }\n\n              <div className={sass.fullName}> { el.FullName }</div>\n\n        </div>\n        )}\n        \n      <Dialog maxWidth='sm' fullWidth={true} open={OIDialog} onClose={closeOIDialog}>\n        <DialogTitle>ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ñ</DialogTitle>\n        <DialogContent>\n        <Box className={sass.addOrderItem}>\n          <TextField\n            label=\"ÐÐ°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ\"\n            value={state.name}\n            variant='filled'\n            sx={{mb: '8px'}}\n            onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"ÐÐ¾Ð»Ð½Ð¾Ðµ Ð½Ð°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ\"\n            multiline\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.fullNameInput}\n            value={state.fullName}\n            onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"ÐÐ¾Ð»-Ð²Ð¾\"\n            type=\"number\"\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.quantityInput}\n            value={state.quantity}\n            onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n            />\n        </Box>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'start'}} >\n            {state.name && state.quantity && (!state.id \n            ? <Box><Button variant='contained' onClick={insertOrderItem}>ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ</Button> </Box>\n            : <Box><Button variant='contained' onClick={updateOrderItem}>ÐÐ·Ð¼ÐµÐ½Ð¸ÑÑ</Button></Box> )}\n              <Box  ><Button onClick={() => {\n                  closeOIDialog();\n                  dispatch({type: 'reset'});\n              }}>ÐÐ°ÐºÑÑÑÑ</Button></Box>\n        </DialogActions>\n      </Dialog>\n    </div>)\n}\n\nexport default OrderComposition","import  moment  from 'moment'\nimport \"./rightPanel.sass\";\nimport { Typography, Box } from '@mui/material/';\n\nimport { styled } from '@mui/material/styles';\n\nconst OrderInfoCard = (props) => {\n  const { heading, secondaryHeading } = props;\n  return (\n    <Box className=\"OrderInfoCard\" sx={{ color: 'text.primary' }}>\n    <div className='row'>\n      <Typography variant='subtitle2'>{heading}</Typography>\n      <Typography variant='subtitle3' className='noprint secondaryHeadingAnimation'>{secondaryHeading}</Typography>\n    </div>\n\n    <div className='body'>\n      {props.children}\n    </div>\n  </Box>\n  )\n}\nconst Pre = styled((props) => <Typography {...props} />)(\n  ({ theme }) => ({\n    color: theme.palette.text.secondary,\n    fontSize: '.7rem'\n  }),\n  );\n\nconst OrderMeta = (props) => {\n   const { data } = props;\n    \n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ' '\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n   \n    const paidVisualization = () => {\n      if (data.PaymentHistories.length === 0 || !data.PaidAmount || !data.TotalAmount) return null\n\n      return (\n        <OrderInfoCard className='noprint' heading=\"ÐÐ»Ð°ÑÐµÐ¶Ð¸\" secondaryHeading={`${data.TotalAmount} â½`}>\n           <table className='paidVisualization'>\n           <tbody>\n            {data.PaymentHistories.map(e => (\n                <tr key={e.Date}>\n                  <td>{(e.PaidAmount / data.TotalAmount * 100).toFixed(0)} % </td>\n                  <td>{moment(e.Date).format('DD.MM.YY')}</td>\n              </tr>\n            ))}\n          </tbody>\n          </table>\n        </OrderInfoCard>\n      )\n    }\n    \n    const aboutOrder = () => {\n      const columns = [\n        {\n          'heading': \"ÐÐµÐ½ÐµÐ´Ð¶ÐµÑ\",\n          'data': `${data.User?.FirstName} ${data.User?.LastName || 'undefined'}`, \n        },\n        {\n          'heading': \"Ð¡Ð¾Ð·Ð´Ð°Ð½\",\n          'data': moment(data.CreatingDate).format('DD.MM.YY'),\n        },\n        {\n          'heading': \"Ð Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸\",\n          'data': moment(data.AcceptanceDate).format('DD.MM.YY'), \n        },\n        {\n          'heading': \"Ð¤Ð°ÐºÑ. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°\",\n          'data': moment(data.ActualShippingDate).format('DD.MM.YY'), \n        }, \n        {\n          'heading': 'ÐÑÐ¾Ð±Ð»ÐµÐ¼ÐºÐ¸ Ñ',\n          'data': moment(data.NeedAttention?.split(',')[1] || null).format('DD.MM.YY hh:mm')\n        }\n      ]\n      return (\n        <OrderInfoCard heading=\"Ð Ð·Ð°ÐºÐ°Ð·Ðµ\">\n          <table><tbody>\n             {columns.map(el => {\n                if (!el.data || el.data === 'Invalid date') return null\n                return <tr key={`${el.heading} ${el.data}`}>\n                  <td>{el.heading}</td>\n                  <td>{el.data}</td>\n                </tr>\n                }\n              )}\n          </tbody></table>\n        </OrderInfoCard>\n      )\n    }\n  return (<>\n      <div className=\"wrap\">\n\n          <Box className='significantInfo' sx={{ color: 'text.primary' }}>\n            <div className='bold'>\n              <Pre>ÐÐ»Ð°Ð½. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°</Pre>\n              {data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY')}\n            </div>\n            <div className='bold'>\n              <Pre>ÐÐ¾Ð¼ÐµÑ Ð·Ð°ÐºÐ°Ð·Ð°</Pre>\n              {data.OrderNumber}\n            </div>\n            <div className='bold'>\n              <Pre>Ð¡ÑÐµÑ / Ð¾Ð¿Ð»Ð°ÑÐ°</Pre>\n              {\"â \"+ (data.InvoiceNumber || '')+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n            </div>\n          </Box>\n\n          <Box className='OrderComment'>\n              <Pre>ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹</Pre>\n              {data.Comment}\n          </Box>\n\n        {aboutOrder()}\n        {paidVisualization()}\n      </div>\n  </>)\n}\n\nexport default OrderMeta\n","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($OrderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $OrderID}, _set: $fields) {\n\t\tOrderID\n    Entity\n    City\n    CreatingDate\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($OrderID: Int!, $AwaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { AwaitingDispatch: $AwaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;\nexport const UPDATE_NEED_ATTENTION = gql`\nmutation MyMutation($OrderID: Int!, $NeedAttention: String! ) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { NeedAttention: $NeedAttention }\n  ) {\n\t\tOrderID\n    NeedAttention\n  }\n}\n`\n\nexport const MOVE_ORDER_TO_ARCHIVE = gql`\n  mutation MyMutation($OrderID: Int!, $ActualShippingDate: timestamp!, $OrderStatusID: Int!) {\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID}, \n      _set: {\n        OrderStatusID: $OrderStatusID,\n        AwaitingDispatch: false,\n        ActualShippingDate: $ActualShippingDate,\n        }){\n      OrderID\n      OrderStatusID\n    }\n  }\n`;\n\nexport const MOVE_ORDER_TO_PRIORITY = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamp!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_PAYMENT = gql`\n  mutation($PaidAmount: numeric!, $Date: timestamp!, $OrderID: Int!) {\n    insert_erp_PaymentHistory_one(object: {PaidAmount: $PaidAmount, OrderID: $OrderID, Date: $Date}) {\n      ID\n      OrderID\n    }\n}\n`;","import moment  from 'moment'\nimport { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport NumberFormat from 'react-number-format';\nimport { TextField, Autocomplete } from '@mui/material';\n\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\nimport { INSERT_PAYMENT } from '../queries/MutationPaymentHistory'\n\nimport { notif } from '../../../utils/notification'\nimport './EditRightInfoPanel.sass'\n\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'â½ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch, users }) => {  \n  \n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n    const [insertPayment] = useMutation(INSERT_PAYMENT)\n  \n    async function saveChanges(){\n        if (!Object.keys(fields).length) return;\n\n        try {\n            const res = await updateOrderInfo({variables: {\n                OrderID: orderID,\n                fields,\n            }})\n            \n            if (res.data)\n                notif('info', 'ÐÐ°ÐºÐ°Ð· Ð¿Ð¾Ð¿ÑÐ°Ð²Ð»ÐµÐ½')\n\n            if (fields.PaidAmount) insertPayment({ variables: {\n                Date: new Date(),\n                OrderID: orderID,\n                PaidAmount: fields.PaidAmount\n                }})\n            \n            refetch()\n        } catch (error) {\n            console.log(error);\n            notif('danger', 'Ð§ÑÐ¾-ÑÐ¾ Ð¿Ð¾ÑÐ»Ð¾ Ð½Ðµ ÑÐ°Ðº...', JSON.stringify(error), 0)\n        }\n    }\n\n    useEffect(() => {\n        fields = {};\n        return () => {\n            saveChanges()\n        };\n    }, []);\n\n    function findSelectedManeger(users, managerID){\n        if (!users) return null\n        const index = users.indexOf(users.find(user => user.UserID === managerID))\n        return users[index]\n    }\n\n  return(\n    <form className=\"EditableInfo\">  \n      <div className=\"wrap\">\n       <TextField\n          label=\"ÐÐ»Ð°Ð½. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            if (e.target.value === 'Invalid date') e.target.value=null\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          InputProps={{\n            inputComponent: DateFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼ÐµÑ ÑÑÐµÑÐ°\"\n          type=\"number\"\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼ÐµÑ Ð·Ð°ÐºÐ°Ð·Ð°\"\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={users.filter( (user) => user.AccessLevelID != 3)}\n          getOptionLabel={(option) => `${option.FirstName} ${option.LastName}`}\n          renderInput={(params) => <TextField {...params} label=\"ÐÐµÐ½ÐµÐ´Ð¶ÐµÑ\"/>}\n          defaultValue={() => findSelectedManeger(users, data.ManagerID)}\n          onChange={(event, newValue) => {\n            fields['ManagerID'] = (newValue?.UserID || null)\n          }}\n        />\n\n         <TextField\n          label=\"ÐÐ¾Ð½ÑÑÐ°Ð³ÐµÐ½Ñ\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"ÐÐ¾ÑÐ¾Ð´\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Ð¡ÑÐ¼Ð¼Ð° Ð·Ð°ÐºÐ°Ð·Ð°\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n          />\n        \n        <TextField\n          label=\"ÐÐ¿Ð»Ð°ÑÐµÐ½Ð¾\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹\"\n          multiline\n          InputProps={{\n            sx: {fontSize: '.9rem !important'}\n          }}\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n       </div>\n    </form>\n  )\n}\n\nexport default EditableInfo","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import moment from 'moment'\nimport sass from './docs.module.sass'\n\nimport { UilImage, UilFile, UilFileAlt, UilTimes } from '@iconscout/react-unicons'\nimport { Button } from '@mui/material'\n\n const DocumentUnit = props => {\n    const { file, canDelete, deleteFileCb } = props\n    \n    function humanFileSize(size) {\n        if (!size) return ''\n        var i = Math.floor( Math.log(size) / Math.log(1024) );\n        return ( size / Math.pow(1024, i) ).toFixed(1) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n    };\n    \n    function getIcon(filename){\n        const fileExtension = filename.split('.')[filename.split('.').length -1]\n    \n        if ([ 'png', 'jpg', 'jpeg' ].includes(fileExtension)) return <UilImage className={sass.svg}/>  \n        if ([ 'pdf', 'doc', 'docx' ].includes(fileExtension)) return <UilFileAlt className={sass.svg}/>  \n        else return <UilFile className={sass.svg}/>  \n    }\n\n    function isFileOnUpload(){\n        if (props.onUpload) return true\n        else return false\n    }\n\n    return <div className={`${sass.docsItem} ${isFileOnUpload() && sass.docsItemOnUpload}`}>\n\n            <a href={`${process.env.REACT_APP_API_URL}/s3/${file.Key}`} \n                target='_blank' rel=\"noreferrer\"\n                >\n                \n                { getIcon(file.FileName) } \n                <div className={sass.name} >{file.FileName}</div>\n                <div className={sass.date}> {humanFileSize(file.Size)} | {moment(file.UploadingDate).format('D MMMM')}</div>\n            </a>\n\n            {canDelete && <Button variant='iconic' className={sass.deleteBtn} onClick={() => deleteFileCb(file) }> <UilTimes/> </Button>}\n    </div>\n}\n\nexport default DocumentUnit","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nexport default function ConfirmDialog(props) {\n  const { filename, open, handleClose, onConfirmF} = props\n  return (\n    <div>\n      <Dialog\n        open={open}\n        minWidth='xs'\n\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" sx={{\n          color: 'var(--lowContrast) !important',\n          'span': {\n            color: 'var(--highContrast) !important'\n          }\n        }}>\n            Ð£Ð´Ð°Ð»Ð¸ÑÑ <span>{filename}</span> ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>ÐÑÐ¼ÐµÐ½Ð¸ÑÑ</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Ð£Ð´Ð°Ð»Ð¸ÑÑ \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import axios from 'axios';\nimport { getInMemoryToken } from '..';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL + '/s3' || 'http://localhost:9000/api/s3'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n$api.interceptors.request.use( (config) => {\n    config.headers.Authorization = `Bearer ${getInMemoryToken()}`\n    return config;\n})\n\nexport default $api;","import $api from '../http';\n\nexport default class S3Service {\n    static s3_url  = '/s3/'\n    static async uploadFile(acceptedFiles, OrderID){\n\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n\n        const res = await $api.put(this.s3_url, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              \"orderid\": OrderID\n            }\n          });\n        return res\n    }\n\n\n    static  async deleteFile(key, deleteFileMutation){\n        const res = await $api.delete(this.s3_url + key);\n\n        if (res.status !== 200) return 'server error during delete file'\n\n        return await deleteFileMutation({variables: {\n            'key': key,\n        }})\n    }\n\n}","import { useState, useEffect } from 'react';\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from '../queries/MutationOrderDocs';\n\n// import './docs.sass'\n\nimport DocumentUnit from './DocumentUnit';\nimport ConfirmDialog from './ConfirmDialog';\nimport S3Service from '../../../services/S3Service';\n\nimport { Button, Typography } from '@mui/material';\nimport sass from './docs.module.sass'\nimport { getCookie, setUnexpiredCookie } from '../../../utils/cookies';\n\nconst Docs = props => {\n    const { data, onUpload, editState, refetch } = props;\n\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n\n   \n    const initShowDocs = (getCookie(\"orderDetailShowDocs\") !== \"false\" );\n    const [isVisible, setisVisible] = useState(initShowDocs)\n\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    useEffect(() => {\n        setOpen(false)\n    }, [editState]);\n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        await S3Service.deleteFile(fileOnDelete.Key, deleteFileMutation)\n        refetch()\n    }\n     \n    function switchDocsVisibility(){\n        setUnexpiredCookie(\"orderDetailShowDocs\", !isVisible)\n        setisVisible(!isVisible)\n    }\n\n   \n    useEffect(() => {\n        onUpload.map( file => ({ ...file, FileName: file.name}) )\n    \n      \n    }, [onUpload])\n    \n    return (        \n        <div className=\"Docs\" >\n\n            <div className={sass.sectionHead}>\n                <Typography variant='subtitle2'>ÐÐ¾ÐºÑÐ¼ÐµÐ½ÑÑ [{data.Docs.length}]</Typography>\n                <Button className={sass.expandBtn} onClick={switchDocsVisibility}>\n                   { isVisible?  \"Ð¡Ð²ÐµÑÐ½ÑÑÑ\" : \"Ð Ð°Ð·Ð²ÐµÑÐ½ÑÑÑ\"}\n                </Button>\n            </div>\n            \n            <div className='filesContainer'>\n                {isVisible && data.Docs.map(file => (\n                    <DocumentUnit \n                        key = {file.Key}\n                        file = {file} \n                        canDelete = {editState} \n                        deleteFileCb = {handleClickOpen}\n                    />\n                ))}\n                \n                {/* {onUploadFiles()} */}\n                {!!onUpload.length && onUpload.map( file => (\n                    <DocumentUnit \n                        file = {{...file, FileName: file.name }} \n                        key = {file.name}\n                        canDelete = {editState} \n                        deleteFileCb = {handleClickOpen}\n                        onUpload = {true}\n                    />\n                ))}\n\n            </div>\n          \n            <ConfirmDialog \n                filename={fileOnDelete?.FileName} \n                open={open}  \n                handleClose={handleClose}\n                onConfirmF={deleteFile}/>\n\n        </div>\n    )\n}\n\nexport default Docs","export function getCookie(title){\n    const cookies = `; ${document.cookie}`;\n    const parts = cookies.split(`; ${title}=`);\n    const value = parts.pop().split(';').shift();\n    return value\n}\n\nexport function setUnexpiredCookie(title, value){\n    var expires = new Date()\n    expires.setFullYear(expires.getFullYear()+10)\n    document.cookie = `${title}=${value}; expires=${expires}; path=/`\n}","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_COMMENT = gql`\nmutation($OrderID: Int!, $Text: String!, $UserID: Int!) {\n  insert_erp_Comments_one(\n    object: {OrderID: $OrderID, Text: $Text, UserID: $UserID}) \n    {\n    CommentID\n    OrderID\n    Text\n    Timestamp\n    UserID\n  }\n}\n`;\n\nexport const DELETE_ORDER_COMMENT = gql`\n mutation($CommentID: Int!) {\n  delete_erp_Comments_by_pk(CommentID: $CommentID) {\n    CommentID\n  }\n}\n`;\n\nexport const UPDATE_ORDER_COMMENT = gql`\nmutation($CommentID: Int!, $Text: String!) {\n  update_erp_Comments_by_pk(\n    pk_columns: {CommentID: $CommentID},\n    _set: {Text: $Text}) \n    {\n    OrderID\n    Text\n    Timestamp\n    UserID\n    CommentID\n  }\n  }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_NOTIFICATION = gql`\nmutation($CommentID: Int!, $MentionedUser: Int!, $OrderID: Int!){\n  insert_erp_Notifications(objects: \n    { CommentID: $CommentID, MentionedUser: $MentionedUser, OrderID: $OrderID }\n    ){\n    returning {\n      MentionedUser\n      ID\n    }\n  }\n}\n`;\n\n\n","import gql from 'graphql-tag'\n\nexport const SUBSCRIBTION_ORDER_COMMENT = gql`\n  subscription MySubscritp($OrderID: Int!) {\n    erp_Comments(where: {OrderID: {_eq: $OrderID}}, order_by: {CommentID: desc}) {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n  }\n`\n","import sass from './index.module.sass'\nimport moment from 'moment'\n\nconst Comment = (props) => {\n  const { data, userID, updateComment, deleteComment, nowEditing, setNowEditing } = props\n\n  function sender(){\n    return `${data.User.FirstName} ${data.User.LastName}`\n  }\n  \n  function actions(){\n    if (userID === data.User.UserID && nowEditing?.CommentID !== data.CommentID ) return (\n        <div onClick={()=> deleteComment(data.CommentID)}>Ð£Ð´Ð°Ð»Ð¸ÑÑ</div>\n    )\n  }\n  function timestamp(){\n    const date = moment(data.Timestamp)\n    return date.format('MMM D') +' at '+ date.format('hh:mm')\n  }\n\n  function getCommentContent(){\n    if (userID === data.User.UserID) return <div \n    contentEditable = \"true\"\n    key             = {data.CommentID}\n    className       = {sass.commentContent}\n    suppressContentEditableWarning = \"true\"\n    onBlur={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n    }}\n    onMouseLeave={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n      setNowEditing(null)\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text}}>\n    </div>\n\n    else return <div \n    onClick={(e) => {\n      // ÐµÑÐ»Ð¸ ÐºÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ ÑÐµÐº-Ð»Ð¸ÑÑ Ð²ÑÐ¿Ð¾Ð»Ð½ÑÐµÐ¼ Ð¼ÑÑÐ°ÑÐ¸Ñ Ð½Ð° Ð¾Ð±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ðµ ÑÐ¾ÑÑÐ¾ÑÐ½Ð¸Ñ\n      if (e.currentTarget.innerHTML.toString().includes(sass.checklistUnit, 0)){\n        updateComment(data.CommentID, e.currentTarget.innerHTML)\n      }\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text }} \n    className={sass.commentContent}>\n    </div>\n\n  }\n\n  return (\n    <div className={sass.commentUnit}>\n\n      <div className={sass.commentHeader}>\n        <div className={sass.sender}> {sender()} </div>\n        <div className={sass.actions}>{actions()}</div>\n        <div className={sass.time}> {timestamp()} </div>\n      </div>\n      {getCommentContent()}\n\n    </div>\n  )\n}\nexport default Comment ","import gql from 'graphql-tag'\n\nexport const GET_ALL_USERS = gql`\nquery MyQuery {\n  erp_Users {\n    FirstName\n    LastName\n    UserID\n  }\n}\n\n`\n","import { Menu, MenuItem } from '@mui/material/';\nimport sass from './index.module.sass'\n\nconst Ð¡ommandsPopover = props => {\n  const {anchorEl, open, handleClose, setAnchorULP, inputRef} = props\n\n  function insertTodoinDOM (){\n    const root = document.getElementById('Comments_InputForm')\n    const elem = document.createElement('div')\n    elem.classList.add(sass.checklistUnit)\n    root.appendChild(elem)\n  }\n\n  function mentionHandler(){\n    handleClose();\n    setAnchorULP(inputRef.current)\n  }\n  return (\n    <Menu\n        id=\"Comments__commandMenu\"\n        aria-labelledby=\"Comments_InputForm\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => {\n          handleClose();\n          insertTodoinDOM();\n        }}>Ð§ÐµÐºÐ»Ð¸ÑÑ</MenuItem>\n        <MenuItem onClick={mentionHandler}>Ð£Ð¿Ð¾Ð¼ÑÐ½ÑÑÑ</MenuItem>\n    </Menu>\n  )\n}\n\nexport default Ð¡ommandsPopover\n","import { Menu, MenuItem } from '@mui/material/';\nimport sass from './index.module.sass'\nimport placeCaretAtEnd from '../../../utils/placeCaretAtEnd'\n\n\nconst UserListPopover = props => {\n  const { anchorEl, open, handleClose, users, inputRef } = props;\n\n  const onClick = (e) => {\n    handleClose();\n    const userID = e.target.getAttribute('userid')\n    const user = users.find(e => e.UserID == userID)\n    const inputform = document.getElementById('Comments_InputForm')\n    const elem = document.createElement('span')\n    inputRef.current.innerText = inputRef.current.innerText.slice(0, -1)\n\n    elem.innerHTML= '@' + [user.FirstName, user.LastName].join(' ') + ', '\n    elem.classList.add(sass.mentionedUserHiglight)\n    elem.dataset.mentionedUser = user.UserID\n    elem.contentEditable = 'false'\n    inputform.appendChild(elem)\n\n    placeCaretAtEnd(inputform)\n\n    const space = document.createElement('span')\n    inputform.appendChild(space)\n  }\n\n  return (\n    <Menu\n    id=\"Comments__userListMenu\"\n    aria-labelledby=\"Comments_InputForm\"\n    anchorEl={anchorEl}\n    open={open}\n    onClose={handleClose}\n  >\n  \n    { users && users.map( (user) => (\n      <MenuItem \n      sx      = {{\n        padding: '4px 10px',\n      }}\n      userid  = {user.UserID} \n      key     = {user.UserID} \n      onClick = {onClick}>\n        {user.FirstName} {user.LastName}\n      </MenuItem>\n    ))}\n \n  </Menu>\n  )\n}\nexport default UserListPopover","export default function placeCaretAtEnd(el) {\n  el.focus();\n  if (typeof window.getSelection != \"undefined\"\n          && typeof document.createRange != \"undefined\") {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n  } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n  }\n}","import { useState } from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../queries/GetAllUsers';\n\n//ui\nimport { Box } from '@mui/material/';\nimport { UilMessage } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n\n// components\nimport Ð¡ommandsPopover from './Ð¡ommandsPopover'\nimport UserListPopover from './UserListPopover';\n\nconst InputForm = props => {\n  const { insertComment, inputRef } = props\n\n  const { data: users = [] } = useQuery(GET_ALL_USERS)\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  // User List Popover\n  const [anchorULP, setAnchorULP] = useState(null)\n\n  function inputHandler(e){\n    if (e.target.innerText.trim() === '/'){\n      setAnchorEl(e.target)\n      e.target.innerHTML = ''\n    }\n    if (e.target.innerText.trim() === '@'){\n      setAnchorULP(e.target)\n    }\n  }\n\n  function keyPressHandler(e){\n    if ((e.ctrlKey || e.metaKey) && (e.keyCode === 13 || e.keyCode === 10)) {\n      insertComment()\n    }\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleCloseUserListPopover = () => {\n    setAnchorULP(null)\n  }\n\n  return (\n    <div className={`${sass.commentInputForm} noprint`}>\n      \n      <Ð¡ommandsPopover \n      setAnchorULP = {setAnchorULP} \n      anchorEl     = {anchorEl} \n      open         = {Boolean(anchorEl)} \n      handleClose  = {handleClose}\n      inputRef     = {inputRef} />\n      <UserListPopover \n      anchorEl    = {anchorULP} \n      open        = {Boolean(anchorULP)} \n      handleClose = {handleCloseUserListPopover}\n      users       = {users.erp_Users}\n      inputRef    = {inputRef} />\n\n      <Box id=\"Comments_InputForm\"\n        aria-controls=\"Comments__commandMenu\"\n        aria-haspopup=\"true\"\n        contentEditable='true'\n        ref={inputRef}\n        sx={{ minHeight: 20, padding: '10px 5px'}}\n        data-ph=\"ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹ Ð¸Ð»Ð¸ ' / ' Ð´Ð»Ñ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ\"\n        suppressContentEditableWarning={true}\n        onInput={inputHandler}\n        onKeyUp={keyPressHandler}\n        >\n      </Box>\n    \n      <div onClick={insertComment} className={sass.saveButton}><UilMessage/></div>\n    </div>\n  )\n}\nexport default InputForm","import { useState, useRef, useEffect } from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { \n  INSERT_ORDER_COMMENT,\n  UPDATE_ORDER_COMMENT,\n  DELETE_ORDER_COMMENT \n} from '../queries/MutationOrderCommnets'\nimport { INSERT_NOTIFICATION } from '../queries/MutationNotification';\nimport { SUBSCRIBTION_ORDER_COMMENT } from '../queries/SubscriptionComments'\nimport sass from './index.module.sass'\n\nimport Comment from './Comment'\nimport InputForm from './InputForm';\nimport { Typography } from '@mui/material';\n\nconst CommentsList = (props) => {\n  const { orderID, user } = props\n  const [ insertOrderCommentMutation ] = useMutation(INSERT_ORDER_COMMENT);\n  const [ updateOrderCommentMutation ] = useMutation(UPDATE_ORDER_COMMENT);\n  const [ deleteOrderCommentMutation ] = useMutation(DELETE_ORDER_COMMENT);\n  const [ insertNotificationMutation ] = useMutation(INSERT_NOTIFICATION);\n\n  var   inputRef = useRef();\n  const [nowEditing, setNowEditing] = useState();\n  \n  const { data: comments = [], loading } = useSubscription(SUBSCRIBTION_ORDER_COMMENT, { variables: { OrderID: orderID }});\n\n  function insertComment(){\n    const text = inputRef.current.innerHTML\n    if (!text) return null\n    \n    const root = document.getElementById('Comments_InputForm')\n    const mentioned = root.querySelectorAll(`.${sass.mentionedUserHiglight}`)\n    insertOrderCommentMutation({ variables: {\n      OrderID: orderID,\n      UserID: user.UserID,\n      Text: text\n      }\n    }).then((res) => {\n      const { CommentID, OrderID } = res.data.insert_erp_Comments_one\n        mentioned.forEach( el => {\n          const MentionedUser = el.dataset.mentionedUser\n          insertNotificationMutation({ variables: {\n            CommentID, OrderID, MentionedUser\n          }})\n    \n        })\n      }\n    )\n    inputRef.current.innerText = ''\n  }\n\n  function updateComment(id, newText){\n    updateOrderCommentMutation({ variables: {\n      CommentID: id,\n      Text: newText,\n    }})\n  }\n\n  function deleteComment(id){\n    deleteOrderCommentMutation({ variables: {\n      CommentID: id\n    }\n  })\n  }\n  \n  function switchTodo(e) {\n    e.target.classList.toggle(sass.checklistUnit_complited)\n  }\n\n  useEffect(() => {\n    const els = [...document.querySelectorAll(`div.${sass.commentUnit} div.${sass.checklistUnit}`)]\n    els.forEach( el => {\n      el.addEventListener('click', switchTodo, false);\n    }, {once : true})\n    return () => {\n      els.forEach( el => {\n        el.removeEventListener('click', switchTodo, false);\n      })\n    }\n  }, [comments])\n\n  const line = comments?.erp_Comments?.length ? sass.commentListThread : ''\n  \n  return(\n    <div className={`${sass.commentsListWrapper} ${line}`}>\n      <InputForm \n      insertComment={insertComment} \n      inputRef={inputRef} \n      />\n\n     {!loading ?\n      comments?.erp_Comments?.map( (comment) => <Comment \n        data={comment} \n        key={comment.CommentID}\n        userID={user.UserID}\n        deleteComment={deleteComment}\n        updateComment={updateComment}\n        nowEditing={nowEditing}\n        setNowEditing={setNowEditing}\n      />): (\n        <Typography m=\"10px\" variant='subtitle2'>Ð·Ð°Ð³ÑÑÐ·ÐºÐ°..</Typography>\n      )}\n    </div>\n  )\n}\n\nexport default CommentsList","import {gql} from 'graphql-tag'; \n\nexport const DELETE_ORDER = gql`\nmutation MyMutation($OrderID: Int!) {\n  delete_erp_Orders_by_pk(OrderID: $OrderID) {\n    OrderID\n  }\n}\n`;","export default class UserStatus {\n  static general    = 1 \n  static management = 2\n  static bookkeeping = 4\n  static manufacture = 3\n}","import { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Button } from '@mui/material';\n // extrnalÐ¡omponent is the whichever component which will be go out \n// like as icon or textButton or something else \nexport default function ConfirmDialog(props) {   \n    const { confirmLabel, onCloseComplete, isDangerous, title, body, children } = props\n\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (<>\n    <div onClick={handleClickOpen}> {children} </div>\n\n    <Dialog\n      id={title}\n      open={open}\n      maxWidth='xs'\n      onClose={handleClose}\n    >\n        <DialogTitle> {title} </DialogTitle>\n        <DialogContent>\n            <DialogContentText p={1}>\n                {body}\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <Button color='info' key=\"dialog-close-btn\" onClick={()=> handleClose()}>ÐÑÐ¼ÐµÐ½Ð°</Button>\n            <Button color={isDangerous? 'secondary': 'primary'} key=\"dialog-target-btn\" onClick={() => { handleClose(); onCloseComplete()}} >{confirmLabel}</Button>\n        </DialogActions>\n    </Dialog>\n  </>);\n}","import ConfirmDialog from \"../../../../components/muiCustom/mui/ConfirmDialog\"\n\n\n\n//  return <ConfirmDialog {...rest} isDangerous title={title} body={body} onCloseComplete={handler} confirmLabel=\"Ð£Ð´Ð°Ð»Ð¸ÑÑ\"/>\n\n\nexport default function TransferOrderDialog({ handler, ...rest }) {\n  const title = 'ÐÐµÑÐµÐ½ÐµÑÑÐ¸ Ð² Ð°ÑÑÐ¸Ð²?'\n  const body = \"ÐÐ°ÐºÐ°Ð· ÑÐ´Ð°Ð»Ð¸ÑÑÑ Ð¸Ð· Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸, Ð½Ð¾ ÐµÐ³Ð¾ Ð² Ð»ÑÐ±Ð¾Ðµ Ð²ÑÐµÐ¼Ñ Ð¼Ð¾Ð¶Ð½Ð¾ Ð±ÑÐ´ÐµÑ Ð½Ð°Ð¹ÑÐ¸ Ð² Ð°ÑÑÐ¸Ð²Ðµ Ð¿Ð¾ Ð½Ð¾Ð¼ÐµÑÑ ÑÑÐµÑÐ°, ÑÑÐ»Ð¸ÑÑ, Ð¼Ð°ÑÐºÐ¸ÑÐ¾Ð²ÐºÐµ Ð¿ÑÐ¸Ð²Ð¾Ð´Ð°.\"\n\n  return <ConfirmDialog {...rest} title={title} body={body} onCloseComplete={handler} confirmLabel=\"ÐÐµÑÐµÐ½ÐµÑÑÐ¸\"/>\n}","import ConfirmDialog from \"../../../../components/muiCustom/mui/ConfirmDialog\"\n\nexport default function DeleteOrderDialog ({ handler, ...rest }){\n    const title = 'Ð£Ð´Ð°Ð»Ð¸ÑÑ Ð·Ð°ÐºÐ°Ð·?'\n    const body = \"Ð£Ð´Ð°Ð»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð° / ÑÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ð¸ Ð½ÐµÐ¾Ð±ÑÐ°ÑÐ¸Ð¼Ð¾.\"\n\n    return <ConfirmDialog {...rest} isDangerous title={title} body={body} onCloseComplete={handler} confirmLabel=\"Ð£Ð´Ð°Ð»Ð¸ÑÑ\"/>\n}\n","import OS from '../../../../utils/OrderStatus'\nimport { useMutation } from \"@apollo/client\"\nimport { \n    UPDATE_AWAITING_DISPATCH,\n    UPDATE_NEED_ATTENTION,\n  } from '../../queries/MutationOrderInfo'\n\nimport {  UilExclamationTriangle,  UilClockThree } from '@iconscout/react-unicons'\n\n\nconst OrderStatus = (props) => {\n    const { order, renderAlg} = props\n    \n    const [mutationAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n    const [mutationNeedAttention] = useMutation(UPDATE_NEED_ATTENTION);\n\n    // ÐÑÐ¸ ÑÑÐ°ÑÑÑÐµ \"ÑÑÐµÐ±ÑÐµÑ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ\" Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð° ÐºÑÐ°ÑÐ½ÑÐ¼ ÑÐ²ÐµÑÐ¾Ð¼ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸. \n    // Ð Ð»ÐµÐ²Ð¾Ð¼ Ð¼ÐµÐ½Ñ Ð² Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸ Ð¾ Ð·Ð°ÐºÐ°Ð·Ðµ ÑÐ¸ÐºÑÐ¸ÑÑÐµÑÑÑ  Ð´Ð°ÑÐ° Ð²ÐºÐ»ÑÑÐµÐ½Ð¸Ñ ÑÑÐ¾Ð³Ð¾ ÑÑÐ°ÑÑÑÐ°.  \n    // ÐÐµÐ»Ð°ÑÐµÐ»ÑÐ½Ð¾ ÑÑÐ¾Ð±Ñ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÑ ÑÐ½ÑÑÐ¸Ñ Ð±ÑÐ»Ð° ÑÐ¾Ð»ÑÐºÐ¾ Ñ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð½ÑÑ Ð°ÐºÐºÐ°ÑÐ½ÑÐ¾Ð² .  \n    // Ð­ÑÐ¾ Ð½ÐµÐ¾Ð±ÑÐ¾Ð´Ð¸Ð¼Ð¾ ÐºÐ¾Ð³Ð´Ð° Ð¿ÑÐ¸ Ð¾ÑÐºÑÑÑÐ¸Ð¸ Ð·Ð°ÐºÐ°Ð·Ð° Ð²ÑÑÑÐ½ÑÐµÑÑÑ Ð´ÐµÑÐ¸ÑÐ¸Ñ ÐºÐ¾Ð¼Ð¿Ð»ÐµÐºÑÑÑÑÐ¸Ñ Ð¸Ð»Ð¸ Ð¿Ð¾ Ð·Ð°ÐºÐ°Ð·Ñ ÑÑÐµÐ±ÑÑÑÑÑ ÑÑÐ¾ÑÐ½ÑÐµ ÑÑÐ¾ÑÐ½ÐµÐ½Ð¸Ñ Ð¾Ñ Ð·Ð°ÐºÐ°Ð·ÑÐ¸ÐºÐ° ÐºÐ°ÐºÐ¸Ðµ-Ð½Ð¸Ð±ÑÐ´Ñ.\n    function needAttentionHandler(){\n        const curDate = new Date().toISOString()\n        var payload = [];\n        if (!order.NeedAttention) payload = ['true', curDate, 'null']\n        else {\n        const nd = order.NeedAttention.split(',')\n        if (nd[0] === 'true') payload = ['false', nd[1], curDate]\n        if (nd[0] === 'false') payload = ['true', curDate, 'null']\n        }\n        \n        mutationNeedAttention({\n        variables: {\n            OrderID: order.OrderID, \n            NeedAttention: payload.join(',')\n        },\n        // optimisticResponse: {\n        //     erp_Orders: {\n        //         __typename: 'erp_Orders',\n        //         OrderID: order.OrderID,\n        //         NeedAttention: payload.join(',')\n        //     }\n        //     }\n        })\n    }\n    // ÐÑÐ¸ ÑÑÐ°ÑÑÑÐµ \"Ð¾Ð¶Ð¸Ð´Ð°ÐµÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ¸\" Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ\n    //  Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·ÐµÐ»ÐµÐ½ÑÐ¼ ÑÐ²ÐµÑÐ¾Ð¼ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸, ÑÑÐ¾ Ð¾Ð·Ð½Ð°ÑÐ°ÐµÑ, ÑÑÐ¾ Ð·Ð°ÐºÐ°Ð· ÑÐ¶Ðµ ÑÐ¾Ð±ÑÐ°Ð½,\n    // Ð¸ Ð½Ðµ Ð¾ÑÐ³ÑÑÐ¶Ð°ÐµÑÑÑ Ð¿Ð¾ Ð±ÑÐ¼Ð°Ð¶Ð½ÑÐ¼ Ð¿ÑÐ¸ÑÐ¸Ð½Ð°Ð¼\n    function awaitingDispatchHandler(){\n        mutationAwaitingDispatch({\n        variables: {OrderID: order.OrderID, AwaitingDispatch: !order.AwaitingDispatch },\n        optimisticResponse: {\n            erp_Orders: {\n\n                __typename: 'erp_Orders',\n                // OrderID: order.OrderID,\n                ...order,\n                AwaitingDispatch: !order.AwaitingDispatch\n            }\n            }\n        })\n    }\n\n    const needAttention = ( order.NeedAttention?.split(',')[0] === 'true' )\n    \n    const statusButtons = [\n        {\n            tip: 'Ð¢ÑÐµÐ±ÑÐµÑ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ',\n            handler: needAttentionHandler,\n            icon: UilExclamationTriangle,\n            className: needAttention ? 'iconBtnPressed' : '',\n            requirement: ![OS.ordArchived, OS.reclArchived].includes(order.OrderStatusID) \n        },\n        {\n            tip: 'ÐÐ¾ÑÐ¾Ð² Ðº Ð¾ÑÐ³ÑÑÐ·ÐºÐµ',\n            handler: awaitingDispatchHandler,\n            icon: UilClockThree,\n            className: order.AwaitingDispatch ? 'iconBtnPressed' : '',\n            requirement: [OS.ordProduction, OS.reclProduction].includes(order.OrderStatusID) \n        }\n    ]\n\n    return renderAlg(statusButtons)\n}\n\nexport default OrderStatus","import { useContext } from 'react';\nimport { Context } from '../../../../index'\nimport { useHistory } from \"react-router-dom\";\n\n//apollo\nimport { useMutation } from \"@apollo/client\"\nimport { \n  MOVE_ORDER_TO_ARCHIVE,\n  MOVE_ORDER_TO_PRIORITY\n} from '../../queries/MutationOrderInfo'\nimport { DELETE_ORDER } from '../../queries/MutationDeleteOrder';\n\nimport OS from '../../../../utils/OrderStatus';\nimport US from \"../../../../utils/UserStatus\";\n\nimport { Button, Box } from '@mui/material'\nimport { UilPlus, UilLock, UilUnlock, UilTruck, UilFileCheck, UilTrashAlt } from '@iconscout/react-unicons';\nimport sass from '../../sass/order.module.sass'\nimport { notif } from \"../../../../utils/notification\";\n\n\nimport TransferOrderDialog from '../Dialogs/TransferOrderDialog';\nimport DeleteOrderDialog from '../Dialogs/DeleteOrderDialog';\n\nimport OrderStatuses from \"./OrderStatuses.jsx\";\n\n\nfunction renderAlg(arrayOfBtns){\n    /*The buttons render algoritm recive an array which consists of buttons, like an object\n    {\n        tip: tooltip name,\n        handler: mutation or some another function,\n        icon: icon component,\n        requirement: the condition under which will be render this button,\n        className: specific class \n    },\n    */\n\n    // if (!arrayOfBtns.length) return null\n    const renderResult = arrayOfBtns.map( each => {\n        if (each.requirement || each.requirement === undefined){\n\n            const btnComponent = <Button key={each.tip} \n                variant = \"iconic\" data-tip={each.tip} \n                onClick={each.handler} className={each.className}>\n                    <each.icon/>\n                </Button>\n\n            if (each.dialog) return <each.dialog handler={each.dialogHandler} key={each}> {btnComponent} </each.dialog>\n            else return btnComponent\n        }\n    })\n    \n    // if (!renderResult.filter( each=> each)) return null\n    if (!renderResult.filter( each=> each).length) return null\n    // console.log(renderResult,renderResult.filter( each=> each));\n    return <Box className={sass.groupOrderButtons}>{renderResult.filter( each=> each)}</Box>\n}\n\nconst OrderActions = props => {\n    const { order, editState, setEditState, setOIDialog } = props\n    const OrderID = order.OrderID\n    const { store } = useContext(Context);\n\n    const [mutationMoveOrderToArchive] = useMutation(MOVE_ORDER_TO_ARCHIVE);\n    const [mutationMoveOrderToPriority] = useMutation(MOVE_ORDER_TO_PRIORITY);\n    const [mutationDeleteOrder] = useMutation(DELETE_ORDER);\n  \n    const history = useHistory();\n  \n    const baseurl = () => {\n      if ( [1,2].includes(order.OrderStatusID) ) return '/'\n      if ( [10,11,12].includes(order.OrderStatusID) ) return '/reclamation'\n    }\n  \n    // ÐÐµÑÐµÐºÐ¸Ð´ÑÐ²Ð°ÐµÑ Ð·Ð°ÐºÐ°Ð· Ð² Ð°ÑÑÐ¸Ð² (ÑÐ±Ð¸ÑÐ°ÐµÑ Ð¸Ð· Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸)\n    async function transferOrderToArchive(OrderStatusID){\n      mutationMoveOrderToArchive({ variables: { \n        OrderID,\n        ActualShippingDate: new Date(),\n        OrderStatusID\n       }}).then(\n        (res) =>{\n          if (res.data.update_erp_Orders_by_pk.OrderID){\n            notif('success', 'ÐÐ°ÐºÐ°Ð· Ð¿ÐµÑÐµÐ½ÐµÑÐµÐ½ Ð² Ð°ÑÑÐ¸Ð²')\n          }\n        }\n      )\n    }\n  \n    // ÐÐµÑÐµÐºÐ¸Ð´ÑÐ²Ð°ÐµÑ Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð· Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ \n    async function transferOrderToPriority(){\n      const res = await mutationMoveOrderToPriority({ variables: { \n        OrderID,\n        AcceptanceDate: new Date(),\n       }})\n       if (res.data.update_erp_Orders_by_pk.OrderID){\n        notif('success', 'ÐÐ°ÐºÐ°Ð· Ð²Ð½ÐµÑÐµÐ½ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ Ð²ÑÐ¿Ð¾Ð»Ð½ÐµÐ½Ð¸Ñ');\n      }\n    }\n    \n    // Ð´Ð»Ñ ÑÐ´Ð°Ð»ÐµÐ½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð°\n    function mutationDeleteOrderHandler(){\n      mutationDeleteOrder({ variables: {\n        OrderID\n      }}).then( res => {\n        if (res.data.delete_erp_Orders_by_pk.OrderID){\n          history.push(baseurl())\n        }\n      })\n    }\n\n\n    const buttons = [\n        {\n            tip: 'Ð Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ',\n            handler: transferOrderToPriority,\n            icon: UilFileCheck,\n            requirement: [OS.ordRegistration].includes(order.OrderStatusID),\n        },\n        {\n            dialog: TransferOrderDialog,\n            dialogHandler: () => transferOrderToArchive(3),\n            tip: 'ÐÐ°ÐºÑÑÑÑ Ð·Ð°ÐºÐ°Ð·',\n            icon: UilTruck,\n            requirement:  [ OS.ordProduction ].includes(order.OrderStatusID),\n        },\n        {\n            dialog: TransferOrderDialog,\n            dialogHandler: () => transferOrderToArchive(13),\n            tip: 'ÐÐ°ÐºÑÑÑÑ ÑÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ',\n            icon: UilTruck,\n            requirement:  [ OS.reclProduction].includes(order.OrderStatusID),\n        },\n        {\n            dialog: DeleteOrderDialog,\n            dialogHandler: mutationDeleteOrderHandler,\n            tip: 'Ð£Ð´Ð°Ð»Ð¸ÑÑ Ð·Ð°ÐºÐ°Ð·',\n            icon: UilTrashAlt,\n            requirement: [OS.ordRegistration, OS.reclInbox, OS.reclDecision, OS.reclInbox].includes(order.OrderStatusID),\n        },\n        {\n            tip: 'ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ñ',\n            handler: () => setOIDialog(true),\n            icon: UilPlus,\n            requirement: ![OS.ordArchived, OS.reclArchived].includes(order.OrderStatusID),\n        },\n        {\n            tip: 'ÐÐ¾Ð¼ÐµÐ½ÑÑÑ ÑÑÐ¾-ÑÐ¾',\n            handler: () => setEditState(!editState),\n            icon: editState ? UilUnlock : UilLock,\n            requirement: [ US.general, US.management , US.bookkeeping ].includes(store.user.AccessLevelID),\n        }\n    ]\n\n    return <>\n            <OrderStatuses order={order} renderAlg={renderAlg}/>\n            \n            {renderAlg(buttons)}\n    </>\n}\n\nexport default OrderActions","import { useState, useRef } from \"react\";\n\nimport { Typography, Box } from '@mui/material'\n\nimport OS from \"../../utils/OrderStatus\";\n\nimport sass from './sass/order.module.sass'\nimport OrderActions from \"./OrderActions/Actions/\";\n\nfunction orderStatus(order){\n  // add a note to the title if this is a pre-order\n  if (order.OrderStatusID === OS.ordRegistration) return ' ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·';\n  if (order.OrderStatusID === OS.ordArchived) return ' Ð Ð°ÑÑÐ¸Ð²Ðµ';\n  if ([ OS.reclInbox, OS.reclDecision , OS.reclProduction, OS.reclArchived ].includes(order.OrderStatusID)) return ' Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ';\n}\n\nfunction orderStatusHighlighting(order){\n  // ÐÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð¾Ð² ÑÑÐµÐ±ÑÑÑÐ¸Ñ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ Ð¸Ð¼ÐµÑÑ Ð¿ÑÐ¸Ð¾ÑÐ¸ÑÐµÑ\n  if (order.NeedAttention?.split(',')[0] === 'true') return sass.needAttention\n  else if (order.AwaitingDispatch) return sass.awaitingDispatch\n  else return ''\n}\n\n\nconst OrderHeader = (props) => {\n  const { data: order, editState, setEditState, setOIDialog, refetch } = props;\n          \n \n    return(\n        <div className={`page-header ${orderStatusHighlighting(order)}`}>\n            <Typography sx={{ fontWeight: 600, fontSize: '1rem'}}>\n                {order.Entity} __ {order.City} \n\n                { orderStatus(order) ? <span className=\"preorderTitle\">{orderStatus(order)}</span> : null}\n            </Typography>\n\n            <Box className={`${sass.orderActionsRow} noprint`}>\n                <OrderActions\n                    order = {order}\n                    editState = {editState}\n                    setEditState = {setEditState}\n                    setOIDialog = {setOIDialog}\n                />\n            </Box>\n    </div>\n\n    \n    )\n}\n\nexport default OrderHeader;","import { UilCloudUpload } from '@iconscout/react-unicons'\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <div>\n             <UilCloudUpload className='inCloudconIcon'/>\n            </div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","import { useContext, useCallback, useState, useEffect} from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_USERS } from '../../hasura-queries/getUsers';\nimport { GET_ORDER_BY_ID } from './queries/GetOrderByID'\nimport { useQuery } from \"@apollo/client\";\n\n//components\nimport Composition from \"./Composition\";\nimport RightInfoPanel from \"./RightInfoPanel/\";\nimport EditRightInfoPanel from \"./RightInfoPanel/EditRightInfoPanel\";\nimport Docs from './Docs/Docs';\nimport CommentsList from \"./Comments/CommentsList\";\nimport OrderHeader from \"./OrderHeader\"\n\nimport { isFileOnDropzone } from \"./Dropzone\";\nimport ReactTooltip from \"react-tooltip\";\n\n//ui\nimport './sass/index.sass';\n\nimport S3Service from \"../../services/S3Service\";\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    useEffect(() => {\n        ReactTooltip.rebuild();\n    });\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    // Add new Order Item Dialog\n    const [OIDialog, setOIDialog] = useState(false)\n\n\n    const orderID = useParams().id\n\n    const fileUploader = useCallback(async acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        const res = await S3Service.uploadFile(acceptedFiles, orderID);\n\n        if (res.status === 200){\n            refetch();\n        }\n        else {\n            console.log('S3 file upload error', res)\n            refetch();\n        };\n\n        setOnUploadFiles([])\n      }, [])\n\n    var { data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID} });\n    const { data: users = []} = useQuery(GET_USERS);\n    \n    const { getRootProps, isDragActive } = useDropzone({className: 'dropzone', onDrop: fileUploader });\n\n    if (!data.erp_Orders) return <></>\n    \n    const childrens_props = { editState, store, refetch, orderID, \n        data: data.erp_Orders[0]\n    }\n\n    return(\n    <div> \n        \n        {isFileOnDropzone(isDragActive)}\n        { data.erp_Orders && users.erp_Users ? (<>\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n            <div className='LeftSideContent'>\n\n                <OrderHeader\n                { ...childrens_props}\n                setEditState = {setEditState}\n                setOIDialog = {setOIDialog}\n                />\n\n                <Composition \n                { ...childrens_props}\n                OIDialog    = {OIDialog}\n                setOIDialog = {setOIDialog}\n                 /> \n\n                <CommentsList \n                { ...childrens_props}\n                user    = {store.user} \n                /> \n\n                <Docs \n                { ...childrens_props}\n                onUpload  = {onUploadFiles} \n                />\n\n            </div>\n\n            <div className=\"Info\">\n                { editState? <EditRightInfoPanel \n                { ...childrens_props} \n                users     = {users.erp_Users} /> : (\n\n                <RightInfoPanel \n                { ...childrens_props}\n                />\n                )}\n            </div>\n            \n        </section> \n        </>): null }\n    </div>\n    )\n}\n\nexport default OrderLayout","const getItems = (count, offset = 0) =>\n    Array.from({ length: count }, (v, k) => k).map(k => ({\n        id: (k + offset).toString(),\n        content: `item ${k + offset}`\n    }));\n    \nexport const initialState ={\n  //ÐÑÐ¾Ð´ÑÑÐ¸Ðµ\n  inbox: [],\n  // ÐÑÐ¸Ð½ÑÑÐ¸Ðµ ÑÐµÑÐµÐ½Ð¸Ñ\n  decision: [],\n  //Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n  inproduction: []\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n      case 'inbox': \n      case 'decision': \n      case 'inproduction': \n          return {...state, [action.type]: action.payload };\n\n      case 'reset': \n          return initialState\n      default: \n          return {...state}\n  }\n}","import gql from 'graphql-tag'; \n\n// ÐÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð·Ð°ÐºÐ°Ð·Ñ Ð½Ð°ÑÐ¾Ð´ÑÑÐ¸ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð² ÐÑÐµÐ·Ð´Ð°ÐºÐ°Ð·Ð°Ñ Ð¸ Ð² Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ \n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const SUBSCRIPTION_RECLAMATION_ORDERS = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [10,11,12]} }) {\n      AwaitingDispatch\n      NeedAttention\n      OrderID\n      Entity\n      City\n      OrderStatusID\n      OrderItems(order_by: {OrderItemID: asc}){\n        OrderItemID\n        Name\n      }   \n    }  \n  }\n`\n\nexport const UPDATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $OrderStatusID: Int!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: $OrderStatusID,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;\n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link, useHistory } from 'react-router-dom'\nimport { useReducer } from 'react'\n\n\nimport sass from './index.module.sass'\nimport { Button, Typography, Box } from \"@mui/material\"\n\nimport { UilWrench, UilPlusCircle } from '@iconscout/react-unicons'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { reducer, initialState } from './reducer';\n//apollo\nimport { useSubscription, useMutation } from '@apollo/client'\nimport { \n  SUBSCRIPTION_RECLAMATION_ORDERS, \n  UPDATE_ORDER_STATUS,\n  INSERT_ORDER } from './queries';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return {result, movedObj: removed };\n};\n\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n\n    // change background colour if dragging\n    background: isDragging ? 'var(--accentLight)' : 'transparent',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\n\nconst Reclamation = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { inbox, decision, inproduction } = state;\n  const history = useHistory();\n\n\n  const getState = id => {\n    if (id === 'inbox') return inbox\n    if (id === 'decision') return decision\n    if (id === 'inproduction') return inproduction\n  };\n\n  const columns = [\n    {\n      columnName: 'ÐÑÐ¾Ð´ÑÑÐ¸Ðµ',\n      droppableId: 'inbox',\n      data: inbox,\n      orderStatusID: 10\n    },\n    {\n      columnName: 'ÐÑÐ¸Ð½ÑÑÐ¸Ðµ ÑÐµÑÐµÐ½Ð¸Ñ',\n      droppableId: 'decision',\n      data: decision,\n      orderStatusID: 11\n    },\n    {\n      columnName: 'Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ',\n      droppableId: 'inproduction',\n      data: inproduction,\n      orderStatusID: 12\n    }\n  ]\n\n  const [mutateOrderStatusID] = useMutation(UPDATE_ORDER_STATUS);\n  const [ insertOrder ] = useMutation(INSERT_ORDER, {variables: {\n    'orderStatusID': columns[0].orderStatusID,\n  }})\n\n  function insertOrderHandler (){\n    insertOrder().then( (res) => {\n        history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n    })\n  }\n\n  const onSubscriptionData = (options) => {\n    const data = options.subscriptionData.data.erp_Orders \n    // Ð´Ð»Ñ dnd Ð½ÐµÐ±ÑÐ¾Ð´Ð¸Ð¼Ð¾ ÑÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÑ id Ð² string\n    data.map( el => {\n      el.id = el.OrderID.toString()\n      return el\n    })\n    columns.forEach(col => {\n      dispatch({\n        type: col.droppableId,\n        payload: data.filter(order => order.OrderStatusID === col.orderStatusID)\n      })\n    })\n  }\n\n  useSubscription(SUBSCRIPTION_RECLAMATION_ORDERS, { onSubscriptionData})\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n        return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n        const items = reorder(\n            getState(source.droppableId),\n            source.index,\n            destination.index\n        );\n\n        dispatch({ type: source.droppableId, payload: items })\n    } else {\n      //Ð¾ÑÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ Ð¿ÑÐ¸ Ð¿ÐµÑÐµÐ¼ÐµÑÐ¸Ð½Ð¸Ð¸ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ° Ð² Ð´ÑÑÐ³Ð¾Ð¹ ÑÑÐ¾Ð»Ð±Ð¸Ðº\n        const {result, movedObj } = move(\n            getState(source.droppableId),\n            getState(destination.droppableId),\n            source,\n            destination\n        );\n        Object.entries(result).map( el => {\n          if (el[0] === el[0]) dispatch({ type: el[0], payload: el[1] })\n        } )\n        mutateOrderStatusID({\n          variables: {\n            OrderID: movedObj.OrderID, \n            OrderStatusID: columns.find(col => col.droppableId === destination.droppableId).orderStatusID\n          }\n        })\n    }\n};\n\n  function getOrderStatus(order){\n    if (order.NeedAttention && order.NeedAttention.split(',')[0] === 'true' ) return sass.needAttention\n    if (order.AwaitingDispatch) return sass.awaitingDispatch\n  }\n\n  function getOrderUnit(order){\n      if (order.OrderItems.length === 0) return <Link to={`/orders/${order.OrderID}`} className={sass.item} ><div>ÐÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ð¼Ð¾Ð³Ð¾</div></Link>\n\n      else return (\n      <Link to={`/orders/${order.OrderID}`} className={`${sass.item} ${getOrderStatus(order)}`}>\n        <div className={sass.items}>\n          {order.OrderItems.map(item => (\n            <div key={item.OrderItemID} className={sass.orderItem}>\n              {item.Name}\n            </div>\n          ))}\n        </div>\n        <div className={sass.customerInfo}>\n          <div>{order.Entity}</div>\n          <div>{order.City}</div>\n        </div>\n      </Link>)\n  }\n\n  return(\n    <div className={sass.reclatationLayout}>\n      \n      <div className='pageLayout__header'>\n        <UilWrench className='pageLayout__icon'/>\n        <div className=\"pageLayout__title\">Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ</div>\n\n        <div className='pageLayout__actions'>\n          <Button variant='iconic' onClick={insertOrderHandler}>\n            <UilPlusCircle/>\n          </Button>\n        </div>\n      </div>\n\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Box className={sass.columnWrapper}>\n\n        {columns.map( e => (<div key={e.columnName} className={sass.reclColumn}>\n          <Typography className={sass.heading}>{e.columnName}</Typography>\n          <Droppable droppableId={e.droppableId} >\n          {(provided, snapshot) => (\n              <div\n                  ref={provided.innerRef}\n                  className={sass.draggableWrapper}>\n                  {e.data.map((item, index) => (\n                      <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}>\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}   \n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  style={getItemStyle(\n                                      snapshot.isDragging,\n                                      provided.draggableProps.style\n                                  )}>\n                                    {getOrderUnit(item)}\n                              </div>\n                          )}\n                      </Draggable>\n                  ))}\n                  {provided.placeholder}\n              </div>\n          )}\n          </Droppable>\n        </div>))}\n        \n        </Box>\n      </DragDropContext>\n    </div>\n  )\n}\nexport default Reclamation","import { useEffect } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DARK_CLASS = \"dark\";\n\nexport function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n    else return 'light'\n}\n\nexport const SystemPreferTheme = (appTheme, setAppTheme) => {\n    // theme can will be dark, light or system (used for corrent displaying selected theme in preferences)\n    // mode can be only dark or light (used for material ui pallete)\n    const systemPrefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\"}, undefined);\n    var mode = appTheme\n\n    function changeTheme(newTheme){\n        var expires = new Date()\n        expires.setFullYear(expires.getFullYear()+1)\n        document.cookie = `theme=${newTheme}; expires=${expires}; path=/`\n        setAppTheme(newTheme)\n    }\n\n    useEffect(() => {\n      if (appTheme === 'dark') document.documentElement.classList.add(DARK_CLASS)\n      else if (appTheme === 'light') document.documentElement.classList.remove(DARK_CLASS)\n\n      else if (appTheme === 'system'){\n        if (systemPrefersDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n      };\n    }, [appTheme, systemPrefersDark]);\n\n    if (appTheme === 'system'){\n      if (systemPrefersDark) mode = 'dark'\n      else mode = 'light'\n    }\n    return {appTheme, mode, changeTheme}\n};\n","import { useContext } from 'react';\nimport { Context } from '../../';\nimport { useHistory } from 'react-router-dom';\n\nimport { SystemPreferTheme } from \"../../utils/SystemPreferTheme\"\n\nimport { Typography } from \"@mui/material\"\nimport { Box } from '@mui/system';\nimport Button from '@mui/material/Button';\n\nimport sass from './styles.module.sass'\n\nconst Settings = (props) => {\n    const {store} = useContext(Context);\n    const {changeTheme} = SystemPreferTheme(store.UItheme.state, store.UItheme.dispatch)\n    const history = useHistory()\n\n    async function logout(){\n        await store.logout(); \n        history.push('/login')\n    }\n\n    const themeVariants = [{\n        title: 'Ð¡Ð²ÐµÑÐ»Ð°Ñ',\n        value: 'light'\n    },\n    {\n        title: \"ÐÐ°Ðº Ð½Ð° ÑÑÑÐ¾Ð¹ÑÑÐ²Ðµ\",\n        value: 'system'\n    },\n    {\n        title: 'Ð¢ÐµÐ¼Ð½Ð°Ñ', \n        value: 'dark'\n    }]\n\n    const GridCard = (props) => (\n        <Box {...props} className={sass.gridCard}>\n            <Typography variant='h6'>{props.title}</Typography>\n            {props.children}\n        </Box>\n    )\n\n    return (\n        <div className={sass.grid}>\n        <GridCard title='ÐÐºÐºÐ°ÑÐ½Ñ'>\n            <div> {store.user.FirstName} {store.user.LastName}</div>\n            <div> Ð£ÑÐ¾Ð²ÐµÐ½Ñ Ð´Ð¾ÑÑÑÐ¿Ð°: {store.user.AccessLevelID}</div>\n            <div> Email: {store.user.Email}</div>\n            <Button variant='text' onClick={logout}>ÐÑÐ¹ÑÐ¸</Button>\n        </GridCard>\n\n        <GridCard title=\"ÐÑÐµÐ´Ð¿Ð¾ÑÑÐ¸ÑÐ°ÐµÐ¼Ð°Ñ ÑÐµÐ¼Ð°\">\n            <div className={sass.selectThemeWrapper}>\n            {themeVariants.map(each => <Button variant='text' onClick={ () => changeTheme(each.value) }> {each.title} </Button>)}\n            </div>\n        </GridCard>\n\n        <GridCard title=\"ÐÑÑÐ¾ÑÐ½Ð¸ÐºÐ¸ Ð´Ð°Ð½Ð½ÑÑ\">\n            <div>gql_endpoint: {process.env.REACT_APP_HASURA_ENDPOINT}</div>\n        </GridCard>\n\n    </div>)\n}\n\nexport default Settings","import moment from \"moment\";\n\n\n// ÐºÐ¾Ð½Ð²ÐµÑÑÐ°ÑÐ¸Ñ float Ð² ÑÐ°ÑÑ Ð¸ Ð¼Ð¸Ð½ÑÑÑ\nexport function convertInterval(t){\n  var hour = Math.floor(t);\n  var decpart = t - hour;\n  var min = 1 / 60;\n\n  // Round to nearest minute\n  decpart = min * Math.round(decpart / min);\n  var minute = Math.floor(decpart * 60) + '';\n\n  // Add padding if need\n  if (minute.length < 2) {\n      minute = '0' + minute; \n  }\n\n  return hour + ':' + minute;\n}\n\nexport function monthAdd(date, month) {\n  // ÑÑÐ½ÐºÑÐ¸Ñ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑÑÑ Ð´Ð»Ñ ÐºÐ¾ÑÑÐµÐºÑÐ½Ð¾Ð³Ð¾ Ð²ÑÑÐ¸ÑÐ°Ð½Ð¸Ñ Ð¼ÐµÑÑÑÐµÐ² Ð² chooseMonth\n  var temp = date;\n  temp = new Date(date.getFullYear(), date.getMonth(), 1);\n  temp.setMonth(temp.getMonth() + (month + 1));\n  temp.setDate(temp.getDate() - 1); \n\n  if (date.getDate() < temp.getDate()) { \n      temp.setDate(date.getDate()); \n  }\n  return temp;    \n}\n\nexport function getTimedelta(time1, time2){\n  if (!time1 || !time2) return '' \n  const mtime1 = moment(time1, 'YYYY-MM-DDTHH:mm')\n  const mtime2 = moment(time2, 'YYYY-MM-DDTHH:mm')\n  var duration = moment.duration(mtime1.diff(mtime2));\n  return Math.abs(duration.asSeconds())\n}\n\nexport function daysInMonth (selectedMonth) {\n  // ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð´Ð½ÐµÐ¹ Ð² ÑÐµÐºÑÑÐµÐ¼ Ð¼ÐµÑÑÑÐµ\n    const [month, year] = selectedMonth\n    return new Date(year, month+1, 0).getDate();\n}\n\nexport function sec2hours(seconds){\n  return seconds / 3600\n}\n\n","import { daysInMonth, getTimedelta, convertInterval, sec2hours } from \"./time_ helpers\";\nimport moment from \"moment\";\nimport sass from './sass/attendance.module.sass'\n\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}\n\n// export function search_alg(user, keyword){\n//   if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n//   else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n//   else return false\n// }\n\nexport function calc_hours_for_mounth(row, {timeDeduction, selectedMonth}){\n    var total_t = 0;\n    var with_human_mistakes = 0\n    for (var day=1; day<= daysInMonth(selectedMonth); day++){\n\n      const findedIntervalsForCurrentDay = row.row.original.intervals.filter(each =>  new Date(each.ent).getDate() == day)\n\n      // ÐÐ»Ñ ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð¸Ð½ÑÑÐµÐ²Ð°Ð»Ð° Ð² ÑÐµÐºÑÐµÐ¼ Ð´Ð½Ðµ\n      for (const property in findedIntervalsForCurrentDay){\n        const each = findedIntervalsForCurrentDay[property];\n        const dur = parseFloat(getTimedelta(each.ent, each.ext));\n        if (!dur) continue;\n        total_t += dur;\n\n      }\n\n      // Ð²ÑÑÐµÑÐ°ÐµÐ¼ Ð²ÑÐµÐ¼Ñ Ð½Ð° Ð¾Ð±ÐµÐ´\n      if (findedIntervalsForCurrentDay.length > 0){\n        total_t -= timeDeduction * 60\n\n        // with_human_mistakes += total_t  \n        if (findedIntervalsForCurrentDay[0]?.ext == null){\n          with_human_mistakes += 4*3600\n        }\n      };\n    }\n\n    total_t = sec2hours(total_t);\n    with_human_mistakes = total_t + sec2hours(with_human_mistakes)\n  \n    if (!total_t) return '';\n\n    const human_mistakes = () => {\n      if (with_human_mistakes !== total_t) return <div className={sass.intervalred}>{with_human_mistakes.toFixed(0)}</div>\n    }\n\n    return <div>{total_t.toFixed(0)} {human_mistakes()}</div>\n}\n\nexport function fill_columns(row, {timeDeduction}){\n  const columnDay = row.column.Header\n  const data = row.row.original.intervals.filter(el =>  new Date(el.ent).getDate() == columnDay)\n  if (data.length === 0) return <div></div>;\n\n  var ent = moment(data[0].ent, \"YYYY-MM-DDTHH:mm\").format(\"HH:mm\");\n  var ext = moment(data[0].ext, \"YYYY-MM-DDTHH:mm\").format(\"HH:mm\");\n  var total_duration = getTimedelta(data[0].ent, data[0].ext);\n  // console.log(data[0].ext);\n\n  if (ext === \"Invalid date\") ext = ''\n  // If we have several intervals on one day\n  if (data.length >= 2){\n    var i = 1\n    data.forEach(each => {\n      if ( data[data.length-i].ext ) \n        ext = moment(data[data.length-i].ext, \"YYYY-MM-DDTHH:mm\").format(\"HH:mm\");\n      else i++;\n    })\n    data.forEach(each => total_duration += getTimedelta(each.ent, each.ext) )\n  }\n\n  return (\n    <div className={sass.intervalgrid}> \n      <div>{ ent }</div> \n      <div>{ ext }</div>\n      {\n        ext ?  <div className={sass.interval}>{ convertInterval((total_duration/3600) - (timeDeduction / 60) ) }</div>\n            :  <div className={`${sass.interval} ${sass.intervalred}`}>4:00</div>\n      }\n      {/* <div className={sass.countIntervals}>{ data.length }</div> */}\n    </div>\n  ) \n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './time_ helpers'\nimport {fill_columns, calc_hours_for_mounth } from './functions'\n\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  const props = {\n    selectedMonth,\n    timeDeduction\n  }\n\n  let columnsList = [\n      {\n      Header: 'Ð¡Ð¾ÑÑÑÐ´Ð½Ð¸Ðº',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'ÐÑÐ¾Ð³Ð¾',\n      Cell: row => calc_hours_for_mounth(row, props)\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => fill_columns(row, props)\n    })\n  }\n  return columnsList\n}\n\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","import gql from 'graphql-tag'; \n\nexport const UPDATE_TIME_DEDUCTION = gql`\nmutation MyMutation( $TimeDeduction: numeric!, $ID: Int! ) {\n    update_attendance_config_by_pk(pk_columns: {ID: $ID}, _set: {TimeDeduction: $TimeDeduction}) {\n      TimeDeduction\n      ID\n    }\n}\n`\n\n","\nimport { useRef } from \"react\";\nimport { monthAdd } from \"./time_ helpers\";\nimport { useMutation } from \"@apollo/client\"\nimport { UPDATE_TIME_DEDUCTION } from \"./queries/updateTimeDeduction\"\nimport { notif } from '../../utils/notification'\nimport Button from '@mui/material/Button'\n\nconst months = [\"ÑÐ½Ð²\", \"ÑÐµÐ²\", \"Ð¼Ð°Ñ\", \"Ð°Ð¿Ñ\", \"Ð¼Ð°Ð¹\", \"Ð¸ÑÐ½\", \"Ð¸ÑÐ»\", \"Ð°Ð²Ð³\", \"ÑÐµÐ½\", \"Ð¾ÐºÑ\", \"Ð½Ð¾Ñ\", \"Ð´ÐµÐº\"];\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const [ updateTimeDeductionMutation ] = useMutation(UPDATE_TIME_DEDUCTION);\n    const timedeductionRef = useRef();\n\n    const date = new Date()\n  \n    const reportMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'intervals', payload: [] })\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    async function timeDeductionHandler(){\n        const variables = {\n            ID: 1,\n            TimeDeduction:  parseInt(timedeductionRef.current.value)\n        }\n        const responce = await updateTimeDeductionMutation({ variables: variables });\n        if (responce.data.update_attendance_config_by_pk){\n            notif('info', 'ÐÐ½Ð°ÑÐµÐ½Ð¸Ðµ Ð¾Ð±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¾')\n            dispatch({ type: 'timeDeduction', payload: timedeductionRef.current.value})\n        }\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        var i = 0;\n        while ( i < 9){\n            const suitable = monthAdd(date, -i)\n            m.push(<div key={suitable} onClick={reportMonthHandler} \n                        className={suitable.getMonth() === state.selectedMonth[0] ? 'active' : ''}\n                        date={suitable}>\n                    {months[suitable.getMonth()]} \n                    </div>\n                )\n            i++;\n        }\n        return <div className=\"chooseMonth\">{m}</div>\n    }\n    \n    return (\n    <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>Ð¾Ð±ÐµÐ´, Ð¼Ð¸Ð½</span>\n                 <input type='number' defaultValue={state.timeDeduction} ref={timedeductionRef} />\n            </div>\n\n            <Button onClick={timeDeductionHandler} variant='outlined'>Ð¡Ð¾ÑÑÐ°Ð½Ð¸ÑÑ</Button>\n            \n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","export function getInitialState(defaultDate){\n    return {\n        intervals: [],\n        timeDeduction: null,\n        selectedMonth: [defaultDate.getMonth(), defaultDate.getFullYear()],\n        s_keyword: ''\n    }\n}\n\nexport function reducer(state, action) {\n    switch (action.type) {\n\n      case 'intervals':\n        return {...state, [action.type]: action.payload,};\n\n      case 'selectedMonth':\n        return {...state, [action.type]: action.payload,};\n\n      case 'timeDeduction':\n        return {...state, [action.type]: action.payload };\n\n      case 's_keyword': \n        return { ...state, [action.type]: action.payload};\n\n      default:\n        throw new Error();\n    }\n  }","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervals(where: {ent: {_gte: $gte,  _lte: $lte}}) {\n        id \n        ent\n        ext\n        card\n      }\n    }\n  }\n  attendance_config {\n    TimeDeduction\n  }\n}  \n`\n\n\n","import  { useMemo, useReducer } from 'react'\n\nimport Table, { generateColumns } from './Table.jsx'\nimport './sass/reportConfigurator.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport { UilConstructor } from '@iconscout/react-unicons'\nimport sass from './sass/attendance.module.sass'\nimport { Typography } from '@mui/material'\n\nimport { monthAdd } from './time_ helpers'\n\nimport { reducer, getInitialState } from './reducer'\n// ÑÑÐµÑ ÑÐ°Ð±Ð¾ÑÐµÐ³Ð¾ Ð²ÑÐµÐ¼ÐµÐ½Ð¸\n\n//apollo\nimport { GET_USERS } from './queries/getUsers';\nimport { useQuery } from '@apollo/client';\nimport { getVarsForSubscription } from './functions'\n\n\nconst Attendance = props => {\n    const date = new Date()\n    const defaultDate = monthAdd(date, -1);\n    const [state, dispatch] = useReducer(reducer, getInitialState(defaultDate));\n    \n    function onCompleted(data){\n        dispatch({ type:'timeDeduction', payload: data.attendance_config[0].TimeDeduction })\n        const intervals = data.attendance_users_aggregate.nodes.filter( user => user.intervals.length);\n        dispatch({ type: 'intervals', payload: intervals})\n    }\n\n    const { gte, lte } = getVarsForSubscription(state.selectedMonth)\n    var { loading, data } = useQuery(GET_USERS, { variables: { gte, lte }, fetchPolicy: 'no-cache', onCompleted });\n\n    const columns = useMemo( function(){\n          return generateColumns(state.selectedMonth, state.timeDeduction)\n        },\n      [state.selectedMonth, state.timeDeduction]\n    )\n\n    const reportConfigurator = <ReportConfigurator data={data} state={state} dispatch={dispatch}/>\n    const header = ( <div className=\"pageLayout__header\">\n                        <UilConstructor className='pageLayout__icon'/>\n                        <div className='pageLayout__title'> Ð Ð°Ð±Ð¾ÑÐµÐµ Ð²ÑÐµÐ¼Ñ </div>                    \n                    </div> )\n    return(<>\n            {header}\n            {reportConfigurator}\n\n            { !loading && state.intervals.length ? \n                <Table \n                columns   = {columns} \n                data      = {state.intervals} \n                className = {sass.attendanceTable} /> \n            : <Typography m=\"10px\" variant='subtitle2'>Ð·Ð°Ð³ÑÑÐ·ÐºÐ°..</Typography> }\n\n    </>)\n\n}\n\nexport default Attendance","import {Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\n\nimport LoginForm from '../pages/LoginPage';\nimport OrderListLayout from \"../pages/OrderListPage\";\nimport OrderLayout from \"../pages/OrderDetailPage\";\nimport Reclamation from '../pages/ReclamationPage';\nimport Settings from '../pages/Settings';\n\nimport Attendance from '../pages/AttendancePage';\n\nconst AppRouter = () => {\n\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/reclamation' component={Reclamation}/>\n            <PrivateRoute path='/settings' component={Settings}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            {/* #if required route was not found */}\n            <Redirect     to=\"/\" />\n        </Switch>\n    )\n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\nconst BaseLayout = (props) => {\n    return(\n        <div className=\"base-container\">\n                <AppRouter/> \n                {props.children}\n        </div>\n    )\n}   \n\nexport default BaseLayout;","import Drawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\n\nconst CustomDrawer = props => {\n  const { icon, children, width = 400, state, toggleDrawer } = props\n \n  return(<>\n    <div onClick={toggleDrawer(true)}>\n      {icon}\n    </div>\n\n    <Drawer\n    open={state}\n    PaperProps = {{\n      sx: {\n        backgroundColor: 'var(--L0-glass)',\n        backdropFilter: 'var(--blurFilter)'\n      }\n    }}\n    onClose={toggleDrawer(false)}\n    >\n      <Box\n      sx={{ width: width }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n      >\n        {children}\n      </Box>\n    </Drawer>\n  </>)\n}\n\nexport default CustomDrawer;","import gql from 'graphql-tag'; \n\nexport const GET_NOTIFICATIONS = gql`\nsubscription MyQuery($_eq: Int!, $limit: Int) {\n  erp_Notifications(where: {MentionedUser: {_eq: $_eq}}, limit: $limit, order_by: {ID: desc} ) {\n    ID\n    Viewed\n    Comment {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n    Order {\n      OrderID\n      City\n      Entity\n    }\n  }\n}\n`\nexport const UPDATE_VIEWED = gql`\nmutation($ID: Int!, $Viewed: Boolean!) {\n  update_erp_Notifications_by_pk(pk_columns: {ID: $ID}, _set: {Viewed: $Viewed}){\n    ID\n    Viewed\n  }\n}\n`\n\n","import { useContext, useState } from 'react'\nimport { Context } from \"../../../\";\nimport { Link } from 'react-router-dom'\n\nimport CustomDrawer from '../../../components/muiCustom/mui/CustomDrawer'\nimport Box from '@mui/material/Box'\nimport Badge from '@mui/material/Badge'\n\n\nimport { UilBell } from '@iconscout/react-unicons'\n\nimport { useMutation, useSubscription } from '@apollo/client'\nimport { GET_NOTIFICATIONS, UPDATE_VIEWED } from './getNotifications'\nimport sass from './index.module.sass'\nimport moment from 'moment'\nimport { Typography } from '@mui/material'\n\nconst NotificationCenter = props => {\n  const { store } = useContext(Context)\n  const [notifications, setNotifications] = useState();\n\n  const [ updateViewedMutration ] = useMutation(UPDATE_VIEWED)\n  function onSubscriptionData(options){\n    const data = options.subscriptionData.data.erp_Notifications\n    setNotifications({\n      unviewed: data.filter(e => !e.Viewed),\n      viewed: data.filter(e => e.Viewed)\n    })\n  }\n  const { data, loading } = useSubscription(GET_NOTIFICATIONS, { onSubscriptionData, variables: {\n    _eq: store.user.UserID,\n    limit: 100\n  }})\n  const [state, setState] = useState(false)\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open)\n  }\n\n  function jumpToOrderHandler(ID){\n    setState(false);\n    updateViewedMutration({ variables: { ID, Viewed: true } })\n  }\n \n  const unviewedCounter = () => {\n    var a=0;\n    data?.erp_Notifications?.forEach(e => {\n      if (!e.Viewed) a+=1\n    });\n    return a\n  }\n  \n  const notificationUnit = (e) => (\n    <Box\n    className={sass.notificationUnit}\n    key={e.ID}>\n      <div className={sass.notificationHeader}>\n        <Typography className={sass.item1}>{e.Comment.User.FirstName} {e.Comment.User.LastName} <span className={sass.normal}>ÑÐ¿Ð¾Ð¼ÑÐ½ÑÐ» Ð²Ð°Ñ</span></Typography>\n        <Typography variant='subtitle2' className={sass.item2}>{moment(e.Comment.Timestamp).format('DD MMM H:mm')}</Typography>\n\n\n          <Link \n        to={`/orders/${e.Order.OrderID}`} \n        onClick={() => jumpToOrderHandler(e.ID)}\n        className={sass.item3}\n        >\n           <Typography variant='subtitle2'>{e.Order.Entity}__{e.Order.City}</Typography>\n        </Link>\n      </div>\n\n        <div \n          className={sass.commentContent}\n          dangerouslySetInnerHTML={{ __html: e.Comment.Text }}\n        >\n        </div>\n    </Box>\n  )\n\n  return (\n    <CustomDrawer icon={ \n      <Badge badgeContent={unviewedCounter()} color=\"secondary\">\n        <UilBell/>\n      </Badge>\n    } width={500} state={state} toggleDrawer={toggleDrawer}>\n      <Box className={sass.wrapper}>\n        <Typography variant='subtitle3'>Ð£Ð²ÐµÐ´Ð¾Ð¼Ð»ÐµÐ½Ð¸Ñ</Typography>\n        \n         {/* unreaderd notifs */}\n        { notifications?.unviewed.length ?\n          <Box className={sass.unreadedWrapper}> \n            <Typography variant='subtitle3'>ÐÐµÐ¿ÑÐ¾ÑÐ¼Ð¾ÑÑÐµÐ½Ð½ÑÐµ </Typography>\n            {!loading && notifications?.unviewed.map(e => notificationUnit(e) )}\n          </Box>\n        : null}\n\n        {!loading && notifications?.viewed.map( e => notificationUnit(e) )}\n\n      </Box>\n    </CustomDrawer>\n  )\n}\nexport default NotificationCenter","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../../../index';\nimport { useHistory } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nimport { UilSun, UilMoon, UilDesktop, UilSetting } from '@iconscout/react-unicons'\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material/';\n\nimport sass from './index.module.sass'\nimport { SystemPreferTheme } from '../../../utils/SystemPreferTheme';\n\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    border: 'var(--border)',\n    padding: 8,\n    textTransform: 'none',\n    '&:not(:first-of-type)': {\n\n    },\n    '&:first-of-type': {\n      borderTopLeftRadius: 'var(--br)',\n      borderBottomLeftRadius: 'var(--br)',\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 'var(--br)',\n      borderBottomRightRadius: 'var(--br)',\n    },\n  },\n}));\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function SettingsDrawer() {\n  const {store} = useContext(Context);\n  const [state, setState] = useState(false);\n  const history = useHistory()\n  const {changeTheme} = SystemPreferTheme(store.UItheme.state, store.UItheme.dispatch)\n\n  async function logout(){\n    await store.logout(); \n    history.push('/login')\n  }\n\n  const themeHandler = (e, newTheme) => {\n    changeTheme(newTheme)\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open);\n  };\n  \n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 400 }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n    >\n\n      <List>\n        <ListItem className={sass.user}>\n        <div>ÐÐ¾Ð±ÑÐ¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°ÑÑ, {store.user.FirstName} {store.user.LastName}!</div>\n        </ListItem>\n\n        <ListItem >\n          <StyledToggleButtonGroup\n            className={sass.themeToggleButtons}\n            color=\"primary\"\n            value={getCookie('theme')}\n            exclusive\n            fullWidth\n            onChange={themeHandler}\n            >\n            <ToggleButton value=\"light\"> <UilSun/> Light</ToggleButton>\n            <ToggleButton value=\"system\"> <UilDesktop/>System</ToggleButton>\n            <ToggleButton value=\"dark\"> <UilMoon/> Dark</ToggleButton>\n          </StyledToggleButtonGroup>\n        </ListItem>\n\n      </List>\n      \n      <div className={sass.logoutButton}>\n        <Button variant=\"outlined\" onClick={logout}>ÐÑÐ¹ÑÐ¸</Button>\n      </div>\n    </Box>\n  );\n\n  return (\n    <>\n          <div onClick={toggleDrawer(true)}>\n            <UilSetting/>\n          </div>\n          <Drawer\n            open={state}\n            onClose={toggleDrawer(false)}\n            PaperProps = {{\n              sx: {\n                backgroundColor: 'var(--L0-glass)',\n                backdropFilter: 'var(--blurFilter)'\n              }\n            }}\n          >\n            {list('left')}\n          </Drawer>\n    </>\n  );\n}","import { NavLink} from 'react-router-dom';\nimport './index.sass';\n\nimport { UilSortAmountDown, UilWrench, UilConstructor,  UilSetting} from '@iconscout/react-unicons';\nimport NotificationCenter from './NotificationCenter';\nimport SettingsDrawer from './SettingsDrawer/SettingsDrawer';\n\nconst Sidebar = () => {\n\n  function wrap(icon){ \n    return <div className='iconWrapper'>{icon}</div>\n  }\n\n  return(\n    <div className='Sidebar'>\n      <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"link\">{wrap(<UilSortAmountDown/>)}</NavLink>\n      <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"link\">{wrap(<UilWrench/>)}</NavLink>\n      <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"link\">{wrap(<UilConstructor/>)}</NavLink>\n      \n      <div className=\"link marginTopAuto\">\n          {wrap(<NotificationCenter/>)}\n      </div>\n\n      {/* <div className=\"link\">\n          {wrap(<SettingsDrawer/>)}\n      </div> */}\n      <NavLink  to='/settings' activeClassName='sidebar-active' className=\"link\"> {wrap(<UilSetting/>) }</NavLink>\n\n    </div>\n  );\n}\n\nexport default Sidebar;","import { useContext, useState, useMemo } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport { ReactNotifications } from 'react-notifications-component'\n\n\nimport {getCookie, SystemPreferTheme} from './utils/SystemPreferTheme'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { muicomponents } from './materialStyles'\nimport ReactTooltip from 'react-tooltip';\n\nfunction App() {  \n  const { store } = useContext(Context);\n  const [appTheme, setAppTheme] = useState(() => getCookie('theme'))\n  store.setUItheme(appTheme, setAppTheme)\n  const { mode } = SystemPreferTheme(appTheme, setAppTheme)\n  \n  const getDesignTokens = (mode) => ({\n    palette: {\n      mode,\n      ...(mode === 'light'\n        ? {\n            // palette values for light mode\n            primary: {\n              main: '#3763FE',\n              light: '#E7E9FB',\n            },\n            secondary: {\n              main: '#e5534b',\n            }\n          }\n        : {\n            // palette values for dark mode\n            primary: {\n              main: '#99affc',\n              light: '#43435c',\n            },\n            secondary: {\n              main: '#e5534b',\n            },\n           \n          }),\n    },\n    typography: {\n      fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',sans-serif`,\n      subtitle1: {\n        // ÐÐºÑÐµÐ½ÑÐ½ÑÐ¹ Ð¿Ð¾Ð´Ð·Ð°Ð³Ð¾Ð»Ð¾Ð²Ð¾Ðº\n        fontSize: '.7rem',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n        letterSpacing: '.5px',\n        color: 'var(--accent) !important',\n      },\n      subtitle2: {\n        // ÐÐµÐ¹ÑÑÐ°Ð»ÑÐ½ÑÐ¹ Ð¿Ð¾Ð´Ð·Ð°Ð³Ð¾Ð»Ð¾Ð²Ð¾Ðº\n        fontWeight: 600,\n        textTransform: 'uppercase',\n        fontSize: '.65rem'\n      },\n      subtitle3: {\n         // ÐÐ¾Ð»ÑÐ¿ÑÐ¾Ð·ÑÐ°ÑÐ½ÑÐ¹ Ð¿Ð¾Ð´Ð·Ð°Ð³Ð¾Ð»Ð¾Ð²Ð¾Ðº\n        fontSize: '.7rem',\n        color: 'var(--lowContrast) !important',\n        textTransform: 'uppercase',\n      }\n    },\n  });\n\n  var theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  theme = createTheme(theme, muicomponents(theme));\n\n\n  return (\n    <ThemeProvider theme={theme}>\n        \n        <div className=\"App\">\n            <ReactTooltip className='reactTooltips' delayShow={300}/>\n            <ReactNotifications/>\n            { store.inMemoryToken && <Sidebar/> }\n            \n            <BaseLayout/>\n        </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default observer(App);\n","export const muicomponents = (theme) => ({\n  components: {\n    MuiDialog: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--LI) !important',\n          borderRadius: 'var(--br) !important',\n          border: 'var(--border)',\n        }\n      }\n    },\n    MuiDialogTitle: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n          background: 'var(--L2)',\n          borderBottom: 'var(--border)',\n          padding: '11px 1rem',\n          fontSize: '.9rem'\n        }\n      }\n    },\n    MuiDialogContent:{\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          padding: '1rem 1rem .5rem !important',\n        }\n      }\n    },\n    MuiDialogActions: {\n      styleOverrides: {\n        root: {\n          background: 'var(--L2)',\n          borderTop: 'var(--border)',\n          padding: '5px 1rem !important',\n        }\n      }\n    },\n    MuiMenu: {\n      styleOverrides: {\n        paper: {\n          border: 'var(--border)',\n          boxShadow: '0 10px 50px 0 var(--shadow-color) !important',\n          borderRadius: 'var(--br)',\n        }\n      }\n    },\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          padding: '4px 15px !important'\n        }\n      },\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          fontSize: '.8rem'\n        }\n      }\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          minWidth: '25px !important',\n          'svg':{\n            width: '17px'\n          }\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          textTransform: 'none !important',\n          borderRadius: 'var(--br10)',\n        },\n        textInfo: {\n          color: 'var(--lowContrast) !important',\n        },\n        iconic: {\n          minWidth: '10px',\n          minHeight: '10px',\n          padding: '4px 6px',\n          'svg':{\n            width: 20\n          },\n          'path': {\n            color: theme.palette.text.secondary,\n            strokeWidth: .2,\n            stroke: 'var(--L0)'\n          },\n          '&:hover': {\n            background: 'var(--accentLight)',\n          }\n        }\n      },\n      defaultProps: {\n        disableElevation: true,\n        disableRipple: true,\n      },\n    },\n    MuiToggleButton: {\n      defaultProps: {\n        disableRipple: true,\n      }\n    },\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n        autoComplete: 'off',\n      }\n    },\n    MuiAutocomplete: {\n      styleOverrides: {\n        root: {\n          borderRadius: 'var(--br) !important',\n        },\n        paper: {\n          background: 'var(--L0) !important',\n          fontSize: '13px',\n          // color: 'var(--lowContrast)',\n        }\n      }\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          color: 'var(--lowContrast) !important',\n        },\n        filter: {\n          fontSize: '.8rem',\n          transform: 'none',\n          position: 'relative',\n        }\n      },\n      defaultProps: {\n        shrink: true,\n      }\n    },\n    MuiFilledInput: {\n      defaultProps: {\n        disableUnderline: 'true',\n        size: 'small',\n      },\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          border: '1px solid var(--border-colorLight)',\n          borderRadius: '10px',\n          ':hover': {\n            background: 'var(--L1)',\n          },\n        },\n\n      }\n    },\n    MuiInput: {\n      defaultProps: {\n        disableUnderline: 'true'\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          color: 'var(--highContrast) !important',\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          border: 'none',\n        }\n      }\n    },\n    MuiPopover: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0)',\n          borderRadius: 'var(--br) !important'\n        }\n      }\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          fontSize: '.8rem',\n          boxSizing: 'border-box',\n          border: 'none !important',\n          outline: 'none !important',\n          boxShadow: 'none !important',\n          padding: 0,\n        }\n      }\n    },\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiCheckbox: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0-glass)',\n          // margin: '.6rem',\n          // height: '98%',\n          // border: 'var(--lowContrast)',\n          // borderRadius: 'var(--br)',\n        }\n      }\n    }\n  },\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  { email, password })\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isLoading = false;\n    UItheme = {\n        state: null,\n        dispatch: null\n    };\n    inMemoryToken = undefined;\n\n    selectedTab = 1;\n    cachedOrders = [];\n    cachedPreOrders = [];\n    \n    orderListLastSearckKeyword = \"\";\n    \n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n  \n    setCachedOrders(array){\n        this.cachedOrders = array\n    }\n    setCachedPreOrders(array){\n        this.cachedPreOrders = array\n    }\n    setUItheme(state, dispatch){\n        this.UItheme = { state, dispatch }\n    }\n   \n    async login(email, password){\n        try {\n            const res = await AuthService.login(email, password)\n            if (res.status === 200){\n              this.setInMemoryToken(res.data.accessToken)\n              this.setUser(res.data.user);\n              return res\n            }\n            \n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            this.setInMemoryToken(null)\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return await axios.get(`${API_URL}/refresh`, { withCredentials: true }).then(\n            (r) => {\n                if (r.status !== 200) new Error('Invalid response while trying to get new access token')\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    \n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            await axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n              (res) => {\n                if (res.status === 200){\n                  this.setUser(res.data.user);\n                  this.setInMemoryToken(res.data.accessToken)      \n                }\n              }\n            )\n        } catch (e) {\n            console.log(e)\n        } finally {\n            this.setLoading(false);\n            return this.inMemoryToken\n        }\n    }\n\n\n    pageParams = [\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Ð Ð°Ð±Ð¾ÑÐµÐµ Ð²ÑÐµÐ¼Ñ',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n}\n","import { onError } from '@apollo/client/link/error';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { RetryLink } from \"@apollo/client/link/retry\";\n\nimport { getInMemoryToken, getNewInMemoryToken } from '../../index'\n\nconst ws_protocol = process.env.REACT_APP_NODE_ENV === 'development' ? 'ws://' : 'wss://'\n\nexport const wsRetryLink = new RetryLink({\n  delay: {\n    initial: 300,\n    max: Infinity,\n    jitter: true\n  },\n  attempts: {\n    max: 100,\n    retryIf: (error, _operation) => !!error\n  }\n});\n\nexport const wsErrorLink = onError( ({ graphQLErrors, networkError, operation, forward}) => {\n  // Error when jwt token expired\n  if (networkError) {\n    console.log('[Network error]: ', networkError);\n    // if (networkError.extensions.code === 'start-failed'){\n\n    // }\n  }\n\n  if (graphQLErrors)\n    graphQLErrors.forEach(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    );\n});\n\nexport const webSocketLink = new WebSocketLink({\n  uri: ws_protocol + process.env.REACT_APP_HASURA_ENDPOINT,\n  // https://github.com/apollographql/subscriptions-transport-ws/issues/171\n  options: {\n    reconnect: true,\n    lazy: true,\n    // reconnectionAttempts: 5,\n    // inactivityTimeout: 10000000,\n    connectionParams: () => ({\n      headers: {\n        'authorization' : `Bearer ${getInMemoryToken()}`\n      }\n    }),\n    \n  }\n})\n\nwebSocketLink.subscriptionClient.onReconnecting(() => {\n  getNewInMemoryToken().then(\n    newToken => {\n      reinitWSConnection(newToken)\n      console.log('Reiniting websocket connection, probably, because jwt token was expired')\n\n    }\n  );\n})\n\nfunction reinitWSConnection(newToken) {\n  webSocketLink.subscriptionClient.connectionParams.headers = {\n    'authorization': `Bearer ${newToken}`\n  };\n  webSocketLink.subscriptionClient.close(true);\n  webSocketLink.subscriptionClient.connect();\n}\n","import { onError } from '@apollo/client/link/error';\nimport { setContext } from \"@apollo/client/link/context\";\nimport { HttpLink, Observable } from \"@apollo/client\";\n\nimport { getInMemoryToken, getNewInMemoryToken } from '../../index'\n\nconst http_protocol = process.env.REACT_APP_NODE_ENV === 'development' ? 'http://' : 'https://'\n\n\nexport const httpErrorLink = onError( ({ graphQLErrors, networkError, operation, forward }) => {\n\n  return new Observable(observer => {\n    getNewInMemoryToken()\n      .then(newToken => {\n        operation.setContext(({ headers = {} }) => ({\n          headers: {\n            // Re-add old headers\n            ...headers,\n            // Switch out old access token for new one\n            Authorization: `Bearer ${newToken}` || null,\n          }\n        }));\n      })\n      .then(() => {\n        const subscriber = {\n          next: observer.next.bind(observer),\n          error: observer.error.bind(observer),\n          complete: observer.complete.bind(observer)\n        };\n        // Retry last failed request\n        forward(operation).subscribe(subscriber);\n      })\n      .catch(error => {\n        // No refresh or client token available, we force user to login\n        observer.error(error);\n      });\n  });\n}\n)\n\nexport const httpAuthLink = setContext((_, { headers }) => ({\n    headers: {\n      ...headers,\n      Authorization: getInMemoryToken() ? `Bearer ${getInMemoryToken()}` : \"\",\n    }\n  }));\n\n\nexport const httpLink = new HttpLink({\n    uri: http_protocol + process.env.REACT_APP_HASURA_ENDPOINT\n  });\n  \n\n","import {\n  ApolloClient,\n  InMemoryCache,\n  from,\n} from \"@apollo/client\";\nimport { split } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\n\nimport { wsRetryLink, wsErrorLink, webSocketLink } from './wsLinks';\nimport { httpErrorLink, httpAuthLink, httpLink } from './httpLinks';\n\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  from([ wsRetryLink, wsErrorLink, webSocketLink ]),\n  from([ httpErrorLink, httpAuthLink, httpLink ]),\n);\n\nexport const apolloClient = new ApolloClient({\n  link:  splitLink,\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n        erp_CheckListUnits: {\n          keyFields: ['CheckListUnitID']\n        },\n        erp_Comments: {\n          keyFields: ['CommentID']\n        }\n    },\n  })\n})\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\n\n\nimport { ApolloProvider } from \"@apollo/client\";\nimport { apolloClient } from './http/apollo/apolloClient';\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\nexport function getInMemoryToken(){\n  return store.inMemoryToken\n}\nexport async function getNewInMemoryToken(){\n  const token = await store.getNewToken()\n  return token\n}\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsListWrapper\":\"Comments_commentsListWrapper___fcsl\",\"commentListThread\":\"Comments_commentListThread__ozjGX\",\"commentInputForm\":\"Comments_commentInputForm__3qC1P\",\"checklistUnit\":\"Comments_checklistUnit__3VLqy\",\"checklistUnit_complited\":\"Comments_checklistUnit_complited__UDryM\",\"mentionedUserHiglight\":\"Comments_mentionedUserHiglight__AMXFd\",\"saveButton\":\"Comments_saveButton__GUyFK\",\"commentUnit\":\"Comments_commentUnit__2eN-_\",\"actions\":\"Comments_actions__2WDkW\",\"commentContent\":\"Comments_commentContent__2OMBI\",\"commentHeader\":\"Comments_commentHeader__3WbIm\",\"sender\":\"Comments_sender__30aSP\",\"time\":\"Comments_time__H8FXy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"main_tableRow__34eUf\",\"table\":\"main_table__1Lnqg\",\"tbody\":\"main_tbody__3DmaN\",\"thead\":\"main_thead__1lihm\",\"tr\":\"main_tr__yR31n\",\"td\":\"main_td__36uim\",\"th\":\"main_th__1f9Q3\",\"tableWrapper\":\"main_tableWrapper__2q39A\",\"tableFooter\":\"main_tableFooter__3GsWH\",\"tableMain\":\"main_tableMain__1OLyv\",\"awaitingDispatch\":\"main_awaitingDispatch__3bf2F\",\"needAttention\":\"main_needAttention__39jvV\",\"unpaidOrder\":\"main_unpaidOrder__2WrWl\",\"customerTableInfo\":\"main_customerTableInfo__hxkEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reclatationLayout\":\"ReclamationPage_reclatationLayout__2EuZy\",\"columnWrapper\":\"ReclamationPage_columnWrapper__tE0Iu\",\"reclColumn\":\"ReclamationPage_reclColumn__1e4nR\",\"draggableWrapper\":\"ReclamationPage_draggableWrapper__3wM-n\",\"heading\":\"ReclamationPage_heading__SzCEM\",\"item\":\"ReclamationPage_item__di9JO\",\"orderItem\":\"ReclamationPage_orderItem__2r6K-\",\"customerInfo\":\"ReclamationPage_customerInfo__1muzb\",\"needAttention\":\"ReclamationPage_needAttention__1dYOo\",\"awaitingDispatch\":\"ReclamationPage_awaitingDispatch__2ncPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionHead\":\"docs_sectionHead__oPl0G\",\"expandBtn\":\"docs_expandBtn__okpby\",\"docsItemOnUpload\":\"docs_docsItemOnUpload__2T2t4\",\"docsItem\":\"docs_docsItem__31c5u\",\"svg\":\"docs_svg__1W2uj\",\"name\":\"docs_name__10m-T\",\"date\":\"docs_date__1LDzY\",\"deleteBtn\":\"docs_deleteBtn__CcMjo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotificationCenter_wrapper__2ZNFd\",\"notificationUnit\":\"NotificationCenter_notificationUnit__Wu0MX\",\"unreadedWrapper\":\"NotificationCenter_unreadedWrapper__GTWeM\",\"notificationHeader\":\"NotificationCenter_notificationHeader__1deII\",\"item1\":\"NotificationCenter_item1__3mfID\",\"normal\":\"NotificationCenter_normal__19zme\",\"item3\":\"NotificationCenter_item3__gCbUg\",\"item2\":\"NotificationCenter_item2__2wKoS\",\"commentContent\":\"NotificationCenter_commentContent__1bz-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__-v-ZG\",\"quantity\":\"composition_quantity__EOCyz\",\"unitName\":\"composition_unitName__1L5Ob\",\"addOrderItem\":\"composition_addOrderItem__3cgdF\",\"quantityInput\":\"composition_quantityInput__qHusO\",\"Unit\":\"composition_Unit__3Sk0C\",\"index\":\"composition_index__33I6t\",\"fullName\":\"composition_fullName__2218_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"attendance_tableWrapper__2rE3D\",\"attendanceTable\":\"attendance_attendanceTable__18B6I\",\"interval\":\"attendance_interval__VjfAk\",\"intervalred\":\"attendance_intervalred__TS5pn\",\"intervalgrid\":\"attendance_intervalgrid__Yc4D0\"};"],"sourceRoot":""}