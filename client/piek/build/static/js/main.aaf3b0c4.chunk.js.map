{"version":3,"sources":["components/OrderListLayout/Archive/archive.module.sass","components/AttendanceLayout/sass/attendance.module.sass","components/OrderLayout/OrderItemActions/index.module.sass","components/OrderListLayout/Search/search.module.sass","components/Sidebar/SettingsDrawer/index.module.sass","components/OrderListLayout/PreOrders/preorders.module.sass","routers/PrivateRoute.js","components/LoginForm/index.js","components/_core/notification.js","components/OrderListLayout/reducer.js","components/OrderListLayout/queries/getOrders.js","hasura-queries/getUsers.js","components/OrderListLayout/queries/MutationInsertOrder.js","components/OrderListLayout/UniversalTable/columnList.js","components/OrderListLayout/UniversalTable/TableMarkup.jsx","components/_core/mui/TableSearch.jsx","components/OrderListLayout/Search/index.js","components/OrderListLayout/Search/filter.js","components/OrderListLayout/PreOrders/MutationOrderStatus.js","components/OrderListLayout/PreOrders/index.js","components/OrderListLayout/Priority/index.js","components/OrderListLayout/Recently/index.jsx","components/OrderListLayout/Recently/spreadOrders.js","components/OrderListLayout/Archive/queries/getArchivedSearchOrders.js","components/OrderListLayout/Archive/queries/getAllOrdersAmount.js","components/OrderListLayout/Archive/queries/getArchivedLatestOrders.js","components/OrderListLayout/Archive/queries/getArchivedUnpaidOrders.js","components/OrderListLayout/Archive/PreviewTable.jsx","components/_core/OrderStatus.js","components/OrderListLayout/Archive/index.jsx","components/OrderListLayout/index.jsx","components/OrderLayout/queries/GetOrderByID.js","components/OrderLayout/queries/MutationOrderDocs.js","components/OrderLayout/queries/MutationOrderItem.js","components/OrderLayout/OrderItemActions/index.jsx","components/OrderLayout/Composition.jsx","components/OrderLayout/Info.jsx","components/OrderLayout/queries/MutationOrderInfo.js","components/OrderLayout/queries/MutationPaymentHistory.js","components/OrderLayout/EditableComponents/EditableInfo.jsx","components/OrderLayout/Docs/ConfirmDialog.jsx","components/OrderLayout/Docs/Docs.jsx","components/OrderLayout/queries/MutationOrderCommnets.js","components/OrderLayout/queries/MutationNotification.js","components/OrderLayout/queries/SubscriptionComments.js","components/OrderLayout/Comments/Comment.jsx","components/OrderLayout/queries/GetAllUsers.js","components/OrderLayout/Comments/Ð¡ommandsPopover.jsx","components/OrderLayout/Comments/UserListPopover.jsx","components/_core/placeCaretAtEnd.js","components/OrderLayout/Comments/InputForm.js","components/OrderLayout/Comments/CommentsList.jsx","components/OrderLayout/queries/MutationDeleteOrder.js","components/OrderLayout/OrderActions/TransferOrderConfirmDialog.jsx","components/OrderLayout/OrderActions/Actions/OrderActions.jsx","components/OrderLayout/OrderActions/Actions/PreOrderActions.jsx","components/OrderLayout/OrderActions/Actions/OrderStatusesActions.jsx","components/OrderLayout/OrderActions/Actions/ReclamationActions.jsx","components/OrderLayout/OrderActions/OrderActionsMenu.jsx","components/OrderLayout/Dropzone.js","components/_core/UserStatus.js","components/OrderLayout/index.jsx","components/AttendanceLayout/queries/getUsers.js","components/AttendanceLayout/functions.js","components/AttendanceLayout/getIntervalData.js","components/AttendanceLayout/table.js","components/AttendanceLayout/ReportConfigurator.jsx","components/AttendanceLayout/index.js","components/ReclamationLayout/reducer.js","components/ReclamationLayout/queries.js","components/ReclamationLayout/index.js","routers/Router.js","components/BaseLayout/index.js","components/_core/mui/CustomDrawer.js","components/Sidebar/NotificationCenter/getNotifications.js","components/Sidebar/NotificationCenter/index.js","components/_core/SystemPreferTheme.js","components/Sidebar/SettingsDrawer/SettingsDrawer.jsx","components/Sidebar/Sidebar.js","App.js","materialStyles.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","http/apollo/wsLinks.js","http/apollo/httpLinks.js","http/apollo/apolloClient.js","index.js","components/OrderLayout/Comments/index.module.sass","components/OrderListLayout/main.module.sass","components/ReclamationLayout/index.module.sass","components/OrderLayout/sass/composition.module.sass","components/Sidebar/NotificationCenter/index.module.sass"],"names":["module","exports","PrivateRoute","Component","component","rest","store","useContext","Context","useState","isLoaded","setisLoaded","inMemoryToken","token","setToken","a","checkAuth","then","res","useEffect","getToken","render","props","to","LoginForm","email","setEmail","password","setPassword","history","useHistory","login","status","push","type","title","message","addNotification","insert","container","dismiss","duration","className","TextField","variant","label","onChange","e","target","value","trim","Button","width","onClick","reducer","state","action","payload","searchKeyword","managerFilter","GetOrdersSubscription","gql","GET_USERS","INSERT_ORDER","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","OrderID","map","item","Name","OrderItemID","Quantity","order","ShippingDate","moment","format","sass","customerTableInfo","Entity","City","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","statusHighlighting","showUnpaid","unpaid","mainsass","unpaidOrder","NeedAttention","split","needAttention","AwaitingDispatch","awaitingDispatch","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","tableMain","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","row","original","tableRow","getRowProps","cells","cell","getCellProps","styles","wrapper","display","height","alignItems","svg","padding","color","opacity","input","border","flexGrow","background","TableSearch","placeholder","defaultValue","disableAutoFocus","style","autoFocus","Search","dispatch","users","Box","sx","filter","filterPlaceholder","FormControl","Select","name","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","filteringAlg","keyword","finded","arg","toLowerCase","includes","array","result","newOrders","ord","ManagerID","MUTATE_ORDER_STATUS","PreOrders","preOrders","useMutation","mutationOrderStatus","onClickTransfer","splice","indexOf","variables","AcceptanceDate","Date","toLocaleString","timeZone","newColumnList","filtredData","tableWrapper","preOrdersTableWrapper","Priority","useMemo","sortedData","orders","sort","b","AccessLevelID","heading","flexDirection","secondary","fontSize","textTransform","table","borderTop","Recently","spreadData","days","subtract","dateCreation","date","objs","spread","ifNothing","Typography","m","GET_ARCHIVED_SEARCH_ORDERS","GET_ALL_ORDERS_AMOUNT","GET_ARCHIVED_LATEST_ORDERS","GET_ARCHIVED_UNPAID_ORDERS","PreviewTable","useQuery","limit","OrderStatus","reqOrderStatus","fetchPolicy","latestOrders","loading","onCompleted","erp_Orders","unpaidIDs","unpaidOrders","ActualShippingDate","archiveTable","ordRegistration","ordProduction","ordArchived","reclInbox","reclDecision","reclProduction","reclArchived","Archive","useReducer","OS","setTimeout","filterFormControl","InputLabel","labelId","filterInputBase","event","marginTop","StyledTabs","styled","Tabs","theme","minHeight","StyledTab","Tab","fontWeight","palette","text","primary","typography","pxToRem","borderRight","borderLeft","backgroundColor","OrderListLayout","selectedTab","cachedOrders","cachedPreOrders","initialState","priorityTab","useSubscription","onSubscriptionData","options","subscriptionData","forEach","ID","setCachedOrders","setCachedPreOrders","error","console","createNewOrder","TabPanel","children","index","other","role","hidden","aria-labelledby","mb","a11yProps","newValue","setPriorutyTab","aria-label","marginLeft","marginRight","alignSelf","insert_erp_Orders","returning","erp_Users","GET_ORDER_BY_ID","PUSH_DOCS_ARRAY","DELETE_ORDER_FILE","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","UPDATE_ORDER_ITEM","UPDATE_ORDER_ITEM_METADATA","OrderItemActions","editState","editItemHandler","deleteItemHandler","updateItem","setOIDialog","anchorEl","setAnchorEl","SerialNumber","Fitter","setState","handleClose","serialNumber","fitter","toString","aria-controls","aria-haspopup","currentTarget","size","moreVertIcon","Menu","keepMounted","open","Boolean","onClose","inputListItem","multiline","prevState","actionsWrapper","deleteButton","fullName","quantity","OrderComposition","refetch","orderID","OIDialog","deleteOrderItemMutation","insertOrderItemMutation","updateOrderItemMutation","updateOrderItemMetadataMutation","itemID","orderItemID","FullName","closeOIDialog","insertOrderItem","parseInt","el","Unit","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","addOrderItem","fullNameInput","quantityInput","DialogActions","justifyContent","OrderInfoCard","secondaryHeading","Pre","OrderMeta","OrderNumber","Comment","CreatingDate","aboutOrder","PaymentHistories","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","UPDATE_NEED_ATTENTION","MOVE_ORDER_TO_ARCHIVE","MOVE_ORDER_TO_PRIORITY","INSERT_PAYMENT","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","insertPayment","log","InputProps","inputComponent","Autocomplete","getOptionLabel","option","renderInput","params","managerID","find","findSelectedManeger","ConfirmDialog","filename","onConfirmF","minWidth","aria-describedby","DialogContentText","Docs","onUpload","setOpen","fileOnDelete","setFileOnDelete","deleteFileMutation","deleteFile","Key","attachedFiles","file","handleClickOpen","FileName","href","process","rel","files","path","onUploadFiles","INSERT_ORDER_COMMENT","DELETE_ORDER_COMMENT","UPDATE_ORDER_COMMENT","INSERT_NOTIFICATION","SUBSCRIBTION_ORDER_COMMENT","userID","updateComment","deleteComment","nowEditing","setNowEditing","commentUnit","commentHeader","sender","actions","CommentID","time","Timestamp","timestamp","contentEditable","commentContent","suppressContentEditableWarning","onBlur","innerHTML","onMouseLeave","dangerouslySetInnerHTML","__html","Text","checklistUnit","GET_ALL_USERS","Ð¡ommandsPopover","setAnchorULP","root","document","getElementById","elem","createElement","classList","add","appendChild","insertTodoinDOM","current","UserListPopover","getAttribute","inputform","innerText","slice","join","mentionedUserHiglight","dataset","mentionedUser","focus","window","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","select","placeCaretAtEnd","space","userid","InputForm","insertComment","anchorULP","commentInputForm","ref","data-ph","onInput","onKeyUp","ctrlKey","metaKey","keyCode","saveButton","CommentsList","insertOrderCommentMutation","updateOrderCommentMutation","deleteOrderCommentMutation","insertNotificationMutation","useRef","comments","newText","switchTodo","toggle","checklistUnit_complited","els","querySelectorAll","addEventListener","once","removeEventListener","line","erp_Comments","commentListThread","commentsListWrapper","mentioned","insert_erp_Comments_one","MentionedUser","comment","DELETE_ORDER","TransferOrderConfirmDialog","React","OrderActions","transferOrderToArchive","OrderStatusID","ListItemIcon","ListItemText","PreOrderActions","transferOrderToPriority","mutationDeleteOrderHandler","OrderStatusesActions","needAttentionHandler","awaitingDispatchHandler","ReclamationActions","ifInproduction","ifInbox","OrderActionsMenu","OAMenu","setOAMenu","OAMenuRef","mutationAwaitingDispatch","mutationNeedAttention","mutationMoveOrderToArchive","mutationMoveOrderToPriority","mutationDeleteOrder","baseurl","update_erp_Orders_by_pk","delete_erp_Orders_by_pk","optimisticResponse","__typename","curDate","toISOString","nd","isFileOnDropzone","isDragActive","remove","UserStatus","orderStatus","general","management","bookkeeping","manufacture","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","search","get","setEditState","pushDocs","useParams","S3Upload","useCallback","acceptedFiles","uploadFile","key","originalname","useDropzone","onDrop","getRootProps","US","Composition","Comments","Info","daysInMonth","selectedMonth","month","year","getDate","getIntervalData","day","intervals","timeDeduction","getMinutes","t","minutes","ent","exit","interval","_entr","_exit","ext","entrance","getHours","number","hour","Math","floor","decpart","min","round","minute","convertInterval","dur","monthAdd","temp","getFullYear","getMonth","setMonth","setDate","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","Attendance","Error","s_keyword","replace","gte","lte","getVarsForSubscription","lastname","firstname","Cell","hours","intervalgrid","generateColumns","searchResult","dt","attendance_users_aggregate","nodes","startsWith","search_alg","attendanceTable","inbox","decision","inproduction","SUBSCRIPTION_RECLAMATION_ORDERS","UPDATE_ORDER_STATUS","Reclamation","getState","columnName","droppableId","orderStatusID","mutateOrderStatusID","insertOrder","col","getOrderStatus","reclatationLayout","onDragEnd","source","destination","items","list","startIndex","endIndex","Array","from","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","movedObj","move","Object","entries","columnWrapper","reclColumn","provided","snapshot","innerRef","draggableWrapper","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","orderItem","AppRouter","exact","BaseLayout","CustomDrawer","icon","toggleDrawer","Drawer","onKeyDown","GET_NOTIFICATIONS","UPDATE_VIEWED","NotificationCenter","notifications","setNotifications","updateViewedMutration","erp_Notifications","unviewed","Viewed","viewed","_eq","notificationUnit","notificationHeader","item1","item2","item3","Order","textDecoration","Badge","badgeContent","unviewedCounter","unreadedWrapper","DARK_CLASS","SystemPreferTheme","appTheme","setAppTheme","systemPrefersDark","useMediaQuery","query","undefined","mode","documentElement","changeTheme","newTheme","expires","setFullYear","cookie","StyledToggleButtonGroup","ToggleButtonGroup","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","getCookie","parts","pop","shift","SettingsDrawer","UItheme","logout","anchor","themeHandler","List","ListItem","themeToggleButtons","exclusive","ToggleButton","logoutButton","Sidebar","wrap","activeClassName","observer","setUItheme","createTheme","main","light","fontFamily","subtitle1","letterSpacing","subtitle2","subtitle3","getDesignTokens","components","MuiDialog","styleOverrides","paper","borderRadius","MuiDialogTitle","MuiMenu","boxShadow","MuiMenuItem","defaultProps","disableRipple","MuiListItemText","MuiListItemIcon","MuiButton","textInfo","iconic","strokeWidth","stroke","disableElevation","MuiToggleButton","MuiTextField","autoComplete","MuiInputLabel","transform","position","shrink","MuiFilledInput","disableUnderline","MuiInput","MuiInputBase","MuiOutlinedInput","notchedOutline","MuiPopover","MuiSelect","boxSizing","outline","MuiTab","MuiCheckbox","MuiDrawer","muicomponents","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","axios","create","withCredentials","baseURL","AuthService","post","Store","isLoading","pageParams","makeAutoObservable","this","bool","isAuth","setInMemoryToken","accessToken","setUser","response","r","setLoading","formData","FormData","append","fetch","hasuraRes","url","wsRetryLink","RetryLink","delay","initial","max","Infinity","jitter","attempts","retryIf","_operation","wsErrorLink","onError","graphQLErrors","networkError","operation","forward","locations","webSocketLink","WebSocketLink","uri","ws_protocol","reconnect","lazy","connectionParams","getInMemoryToken","subscriptionClient","onReconnecting","getNewInMemoryToken","newToken","close","connect","reinitWSConnection","httpErrorLink","Observable","setContext","Authorization","subscriber","next","bind","complete","subscribe","catch","httpAuthLink","_","httpLink","HttpLink","http_protocol","splitLink","definition","getMainDefinition","kind","apolloClient","ApolloClient","link","cache","InMemoryCache","typePolicies","keyFields","erp_CheckListUnits","createContext","getNewToken","ReactDOM","client","sessionData","session","Provider"],"mappings":"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","file":"static/js/main.aaf3b0c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterFormControl\":\"archive_filterFormControl__1DXa5\",\"filterInputBase\":\"archive_filterInputBase__2Du59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"attendance_tableWrapper__3GR7B\",\"attendanceTable\":\"attendance_attendanceTable__1HkhM\",\"interval\":\"attendance_interval__3dqN-\",\"intervalgrid\":\"attendance_intervalgrid__2d_3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsWrapper\":\"OrderItemActions_actionsWrapper__1mryM\",\"deleteButton\":\"OrderItemActions_deleteButton__14fyW\",\"moreVertIcon\":\"OrderItemActions_moreVertIcon__3Qdex\",\"inputListItem\":\"OrderItemActions_inputListItem__22HbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"search_filter__1BI6Q\",\"filterPlaceholder\":\"search_filterPlaceholder__2NcNB\",\"filterIndicator\":\"search_filterIndicator__Rfc0e\",\"circle\":\"search_circle__2PIMx\",\"pulsate\":\"search_pulsate__pgEiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeToggleButtons\":\"SettingsDrawer_themeToggleButtons__hIzSP\",\"user\":\"SettingsDrawer_user__3iVNA\",\"logoutButton\":\"SettingsDrawer_logoutButton__2_Id_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preOrdersTableWrapper\":\"preorders_preOrdersTableWrapper__2ELAZ\"};","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const { store } = useContext(Context)\n  const [isLoaded, setisLoaded] = useState(false);\n  const [token, setToken] = useState(store.inMemoryToken);\n\n    async function getToken() {\n      store.checkAuth().then(\n        (res) => {\n          setToken(res)\n          setisLoaded(true)\n        }\n      )\n    }\n\n    useEffect(() => {\n      if (token) setisLoaded(true)\n      else getToken();\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n          if (token) return <Component {...props} />\n          else return <Redirect to='/login'/>;\n        }\n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import { useState, useContext } from 'react';\nimport { Context } from '../../index';\nimport { useHistory } from \"react-router-dom\";\n\nimport ReactNotification from 'react-notifications-component'\nimport { TextField, Button } from '@mui/material';\nimport './LoginForm.sass'\nimport { notif } from '../_core/notification'\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    \n    const { store } = useContext(Context);\n    const history = useHistory();\n\n\n    const login = async () => {\n      const res = await store.login(email, password)\n      if (res?.status === 200){\n        history.push('/')\n      }\n      else{\n        notif('warning', 'Unauthorized error', 'Invalig email or password')\n      }\n      \n    }\n\n    return(<>\n      <ReactNotification />\n      <div className='loginCard'>\n        <TextField\n        className='loginInput'\n        variant='filled'\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          variant='filled'\n          className='loginInput'\n          onChange={e => setPassword(e.target.value.trim()) }\n        />\n        <Button\n          className=\"Button\"\n          variant=\"outlined\"\n          width='300px'\n          onClick={login}\n        >ÐÐ¾Ð¹ÑÐ¸</Button>\n      </div>\n    </>);\n}\n\nexport default LoginForm\n","import { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\n\nexport const notif = (type, title, message) =>  store.addNotification({\n  title,\n  message,\n  type,\n  insert: \"bottom\",\n  container: \"top-right\",\n  dismiss: {\n    duration: 4000,\n  }\n});\n","export const initialState = (selectedTab, cachedOrders, cachedPreOrders) => ({\n    orders: cachedOrders || [],\n    preOrders: cachedPreOrders || [],\n    selectedTab : selectedTab,\n\n    searchKeyword: '',\n    managerFilter: 0,\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'managerFilter': \n            return {...state, [action.type]: action.payload };\n\n        case 'resetFilters': \n            return {...state, searchKeyword: '', managerFilter: 0}\n        default: \n            return {...state}\n    }\n}","import gql from 'graphql-tag'; \n\n// ÐÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð·Ð°ÐºÐ°Ð·Ñ Ð½Ð°ÑÐ¾Ð´ÑÑÐ¸ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð² ÐÑÐµÐ·Ð´Ð°ÐºÐ°Ð·Ð°Ñ Ð¸ Ð² Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ \n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [1,2]} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      NeedAttention\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems(order_by: {OrderItemID: asc}){\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n        LastName\n      }\n\n    }  \n  }\n`\n","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n    AccessLevelID\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\nimport sass from '../main.module.sass'\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ' - 0%'\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row, counter) => counter +1\n    },\n    {\n      Header: 'ÐÐ°Ð¸Ð¼.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length === 0) return <Link to={`/orders/${data.OrderID}`}><div>ÐÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ð¼Ð¾Ð³Ð¾</div></Link>\n\n        else return (<>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </>)\n      }\n      \n    },\n    {\n      Header: 'ÐÐ¾Ð»-Ð²Ð¾',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'ÐÑÐ³ÑÑÐ·ÐºÐ°',\n      accessor: (order) => \n      <> { order.ShippingDate && moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'ÐÐ¾Ð¼Ð¿Ð°Ð½Ð¸Ñ / Ð³Ð¾ÑÐ¾Ð´',\n      accessor: data => \n      <div className={sass.customerTableInfo}>\n        <div>{data.Entity}</div>\n        <div>{data.City}</div>\n      </div>\n    },\n    {\n      Header: 'Ð¡ÑÐµÑ- Ð¾Ð¿Ð»Ð°ÑÐ°',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'ÐÐ´Ð¶.',\n      accessor: data => <> {data.User?.FirstName[0] || ''} </>\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\nimport { Link } from 'react-router-dom'\n\nfunction statusHighlighting(order, showUnpaid){\n  if (showUnpaid && order.unpaid) return mainsass.unpaidOrder\n\n  // ÐÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð¾Ð² ÑÑÐµÐ±ÑÑÑÐ¸Ñ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ Ð¸Ð¼ÐµÑÑ Ð¿ÑÐ¸Ð¾ÑÐ¸ÑÐµÑ\n  if (order.NeedAttention?.split(',')[0] === 'true') return mainsass.needAttention\n  else if (order.AwaitingDispatch) return mainsass.awaitingDispatch\n  else return ''\n}\nexport default function Table({columns, data, className, showUnpaid }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return null;\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n\n          const { OrderID } = row.original\n          return (\n              <Link to={`/orders/${OrderID}`} className={`${statusHighlighting(row.original, showUnpaid)} ${mainsass.tableRow}`} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </Link>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { UilSearch } from '@iconscout/react-unicons'\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  wrapper: {\n    display: 'flex',\n    height: '50px',\n    alignItems: 'center',\n  },\n  svg : {\n    padding: '0 12px',\n    width: '18px',\n    color: 'var(--highContrast)',\n    opacity: .3,\n  },\n  input : {\n    border: 'none',\n    flexGrow: 1,\n    background: 'transparent',\n    color: 'var(--highContrast)',\n  }\n}  \n\nconst TableSearch = (props) => {\n  const {placeholder, onChange, defaultValue, disableAutoFocus} = props\n   return (\n    <div style={styles.wrapper}>\n    <UilSearch style={styles.svg}/>\n    <input style={styles.input} type='text' placeholder={placeholder} onChange={onChange} autoFocus={disableAutoFocus? false : true} defaultValue={defaultValue}/>\n</div>\n   )\n}\n\nTableSearch.propTypes = { \n  placeholder: PropTypes.string,\n  onChange:    PropTypes.func,\n  defaultValue:  PropTypes.string, \n  disableAutoFocus: PropTypes.bool,\n}\n\nexport default TableSearch","import sass from './search.module.sass'\nimport { FormControl, Select, MenuItem, Box } from '@mui/material';\nimport TableSearch from '../../_core/mui/TableSearch'\n\nconst Search = ({ state, dispatch, users  }) => {\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter !== 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>ÐÑÐ´Ð°ÑÐ° Ð¾Ð³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð° ÑÐ¸Ð»ÑÑÑÐ¾Ð¼</p>\n            </div>\n        ) \n    }\n\n    return (\n        <>\n        <Box sx={{ display: 'flex' }}>\n            <TableSearch placeholder=\"Ð¡ÑÐµÑ, ÑÑÐ»Ð¸ÑÐ¾\" onChange={searchHandler} defaultValue={state.searchKeyword}/>\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl>\n                  <Select\n                  name    = \"managerFilter\"\n                  value    = {state.managerFilter}\n                  onChange = {managerHandler}\n                  >\n                      <MenuItem value={0}>ÐÑÐµ</MenuItem>\n                      { users.map( (user) => \n                      <MenuItem value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                      )}\n                  </Select>\n                </FormControl>\n            </div>)}\n        </Box>\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","function filteringAlg(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // Ð¿ÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ Ð¿Ð¾Ð¸ÑÐº Ð¿Ð¾ ÐºÐ»ÑÑÐµÐ²Ð¾Ð¼Ñ ÑÐ»Ð¾Ð²Ñ\n    if (keyword !== '') {\n        result = array.filter( (order) => filteringAlg(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //Ð¿ÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ Ð¿Ð¾Ð¸ÑÐº Ð¿Ð¾ ÑÐ¸Ð»ÑÑÑ\n    if (managerFilter !== 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID === managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n    }\n  }\n\n`;","import { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\nimport Search from '../Search';\nimport { filter } from '../Search/filter'\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport { UilFileCheck} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\nimport mainsass from '../main.module.sass'\nimport { Button } from '@mui/material';\n\nconst PreOrders = ({ state, dispatch }) => {\n    const data = state.preOrders\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    const onClickTransfer = (order) => {\n        data.splice(data.indexOf(order), 1)\n        dispatch({ type: 'preOrders', payload: data })\n\n        mutationOrderStatus({ variables: { \n            OrderID: order.OrderID, \n            AcceptanceDate: new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"}) } \n        })\n    }\n\n    var newColumnList = [...columnsList];\n    const filtredData = filter(data, state.searchKeyword)\n    \n    newColumnList.push({\n        Header: 'ÐÑÐ¸Ð½ÑÑÑ',\n        accessor: data => \n        <Button onClick={() => onClickTransfer(data)} variant='iconic'><UilFileCheck/></Button>\n        ,\n      })\n   \n    return(\n    <div className={`${mainsass.tableWrapper} ${sass.preOrdersTableWrapper}`}>\n        <Search state={state} dispatch={dispatch} />\n        {filtredData && <Table columns = {newColumnList} data = {filtredData} />}\n    </div>\n    )\n}\nexport default PreOrders","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ users, state, dispatch }) => {\n    const columns = useMemo(\n        () => columnsList, []\n    )\n    \n    const sortedData = state.orders .sort(function(a,b){\n        return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n    })\n\n    const filtredData = filter(sortedData, state.searchKeyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            {users && <Search state={state} dispatch={dispatch} users={users.filter(e => [1,2].includes(e?.AccessLevelID))}/>}\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\nimport Table from '../UniversalTable/TableMarkup'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport { Typography } from '@mui/material'\n\nconst styles = {\n  heading :{\n    display: 'flex',\n    flexDirection: 'row',\n    padding: '0 10px'\n  },\n  secondary: {\n    color: 'var(--lowContrast)',\n    fontSize: '.8rem',\n    padding: '0 8px',\n    textTransform: 'none'\n  },\n  table: {\n    borderTop: '1px solid var(--border)'\n  }\n}\n\nconst Recently = ({ state }) => {\n\n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(b.AcceptanceDate) - new Date(a.AcceptanceDate);\n      });\n\n    const spreadData = spread(sortedData);\n\n    const columns = useMemo(() => columnsList, [] )\n\n   \n\n    function ifNothing(data){\n        if (data.length === 0) return <Typography style={styles.secondary}>(ÐÐ¸ÑÐµÐ³Ð¾ Ð½Ðµ Ð±ÑÐ»Ð¾ Ð´Ð¾Ð±Ð°Ð²Ð»ÐµÐ½Ð¾)</Typography>\n    } \n\n    return(\n        <>\n            <Typography \n            style   = {styles.heading} \n            variant = \"subtitle1\" \n            m       = '10px 0'>\n            Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ {ifNothing(spreadData[0].objs)} \n            </Typography>\n\n            { spreadData[0].objs.length ? ( <>\n              <Table \n              columns = {columns} \n              data    = {spreadData[0].objs} \n              style   = {styles.table} />\n              </>): \n            null}\n\n\n            <Typography  \n            style={styles.heading} \n            variant=\"subtitle1\" \n            m='10px 0'>\n            ÐÑÐµÑÐ° {ifNothing(spreadData[1].objs)} \n            </Typography>\n\n            { spreadData[1].objs.length ? ( <>\n              <Table \n                columns = {columns} \n                data    = {spreadData[1].objs} \n                style   = {styles.table} />\n            </>): null}\n        </>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'ÐÑÐµÑÐ°',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.AcceptanceDate?.split('T')[0]\n\n        if (dateCreation === days[0].date) days[0].objs.push(order);\n        else if (dateCreation === days[1].date) days[1].objs.push(order);  \n    }\n\n    return days;\n};\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_SEARCH_ORDERS = gql`\n  query ($keyword: String!, $OrderStatus: Int!){\n  erp_Orders(\n    order_by: {ActualShippingDate: desc_nulls_last},\n    where: {\n    _or: [\n      { Entity: {_ilike: $keyword} }, \n      { InvoiceNumber: {_ilike: $keyword} }\n\n      ],\n    OrderStatusID: {_eq: $OrderStatus}\n    }) {\n      ActualShippingDate\n      AwaitingDispatch\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n  }\n}\n`\n\n\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ALL_ORDERS_AMOUNT = gql`\nquery{\n  erp_Orders(\n    where: {OrderStatusID: {_eq: 3}},\n    order_by: {OrderID: desc},\n    limit: 1000,\n    ){\n\t\tOrderID\n    PaidAmount\n    TotalAmount\n  }\n}\n`\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_LATEST_ORDERS = gql`\nquery($limit: Int!, $OrderStatus: Int!){\n  erp_Orders(\n    order_by: {ActualShippingDate: desc_nulls_last}\n    where: { OrderStatusID: {_eq: $OrderStatus } } \n    limit: $limit\n    ){\n    ActualShippingDate\n    ShippingDate\n    AwaitingDispatch\n    OrderID\n    Entity\n    InvoiceNumber\n    City\n    PaidAmount\n    TotalAmount\n    CreatingDate\n    ManagerID\n    OrderItems {\n      Quantity\n      OrderItemID\n      Name\n    } \n    User {\n      FirstName\n    }\n  }\n}\n`","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_UNPAID_ORDERS = gql`\nquery MyQuery($unpaidIDs: [Int!], $OrderStatus: Int!) {\n    erp_Orders(where: { OrderStatusID: {_eq: $OrderStatus}, OrderID: {_in: $unpaidIDs } } ) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      ActualShippingDate\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n    }\n  }\n`","//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ALL_ORDERS_AMOUNT } from './queries/getAllOrdersAmount'\nimport { GET_ARCHIVED_LATEST_ORDERS } from './queries/getArchivedLatestOrders'\nimport { GET_ARCHIVED_UNPAID_ORDERS } from './queries/getArchivedUnpaidOrders'\n\nimport Table from '../UniversalTable/TableMarkup'\nimport sass from './archive.module.sass'\nimport { Typography } from '@mui/material/';\n\nconst PreviewTable = (props) => {\n  const { state, dispatch, columns } = props\n\n  const { data : latestOrders = [], loading: latestOrdersloading } = useQuery(GET_ARCHIVED_LATEST_ORDERS, { variables: {\n     limit: 15, \n     OrderStatus: state.reqOrderStatus\n    },\n    fetchPolicy: \"cache-and-network\"\n    });\n\n  const { loading } = useQuery(GET_ALL_ORDERS_AMOUNT, { onCompleted: (res) => {\n    dispatch({ type: 'unpaidIDs', payload: res.erp_Orders.filter(e => e.PaidAmount / e.TotalAmount < .999).map(e => e.OrderID)})\n  }})\n\n  const { data : unpaidOrders = [], loading: unpaidOrdersLoading } = useQuery(GET_ARCHIVED_UNPAID_ORDERS, { variables: {\n    unpaidIDs: state.unpaidIDs,\n    OrderStatus: state.reqOrderStatus\n  } })\n\n  const previewData = () => {\n    if (!unpaidOrders.erp_Orders || !latestOrders.erp_Orders) return []\n    return ([\n      ...unpaidOrders.erp_Orders.map(e => ({...e, unpaid: true})),\n      // Ð¿ÑÐ¾Ð²ÐµÑÑÐµÐ¼ ÐµÑÑÑ Ð»Ð¸ Ð² Ð¿Ð¾ÑÐ»ÐµÐ´Ð½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð°Ñ Ð½ÐµÐ¾Ð¿Ð»Ð°ÑÐµÐ½Ð½ÑÐ¹, ÐµÑÐ»Ð¸ ÐµÑÑÑ, ÑÐ¾ ÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð¸Ð· Ð¸Ñ Ð·Ð°ÐºÐ°Ð· Ð¸Ð· latestOrders\n      ...latestOrders.erp_Orders\n      .filter(e => !state.unpaidIDs.includes(e.OrderID))\n      .sort(function(a,b){\n        return new Date(b.ActualShippingDate) - new Date(a.ActualShippingDate);\n      })\n      ])\n  }\n\n  return (<>\n    <Typography color='textSecondary' variant=\"subtitle1\" m='10px 1rem'>\n      ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 15 Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½Ð½ÑÑ  \n    </Typography>\n\n      <Table columns = {columns} data = {previewData()} className={sass.archiveTable} showUnpaid/>\n  </>)\n}\nexport default PreviewTable","export default class OrderStatus {\n  static ordRegistration = 1 // Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ñ\n  static ordProduction = 2\n  static ordArchived = 3\n\n  static reclInbox = 10\n  static reclDecision = 11\n  static reclProduction = 12\n  static reclArchived = 13\n}","import { useMemo, useReducer } from 'react';\n\n//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ARCHIVED_SEARCH_ORDERS } from './queries/getArchivedSearchOrders'\n\n//ui\nimport sass from './archive.module.sass'\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\nimport { Typography } from '@mui/material/';\n\nimport PreviewTable from './PreviewTable';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport OS from '../../_core/OrderStatus'\nimport moment from 'moment'\n\nimport TableSearch from '../../_core/mui/TableSearch'\nimport { Box } from '@mui/system';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n      case 'reqOrderStatus': \n      case 'searchKeyword': \n      case 'unpaidIDs': \n          return {...state, [action.type]: action.payload };\n      default: \n          return {...state}\n  }\n}\nconst Archive = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    //Ð·Ð°ÐºÐ°Ð·Ñ ÐºÐ¾ÑÐ¾ÑÑÐµ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½Ð¾, Ð½Ð¾ ÐµÑÐµ Ð½Ðµ Ð¾Ð¿Ð»Ð°ÑÐµÐ½Ñ\n    reqOrderStatus: OS.ordArchived,\n    unpaidIDs: [],\n    searchKeyword: '',\n  });\n\n  const handleChange = (event) => {\n    dispatch({ type: 'reqOrderStatus', payload: event.target.value })\n  };\n\n  const { data = [] } = useQuery(GET_ARCHIVED_SEARCH_ORDERS, { variables: {\n    keyword: '%' + state.searchKeyword + '%',\n    OrderStatus: state.reqOrderStatus\n  }})\n\n  var columns = useMemo(\n    () => [...columnsList], []\n  )\n  \n  columns[3] = {\n    Header: 'Ð¤Ð°ÐºÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ°',\n    accessor: order => \n    <> { order.ActualShippingDate && moment(order.ActualShippingDate).format('DD.MM.YY') }\n    </>\n  }\n\n  const searchHandler = (e) => {\n    setTimeout(() => {\n      dispatch({ type: 'searchKeyword', payload: e.target.value})\n    }, 400)\n  }\n\n  return(\n    <>\n      <TableSearch\n      placeholder='CÑÐµÑ, ÑÑÐ»Ð¸ÑÐ¾'\n      onChange={searchHandler}\n      />\n\n      <FormControl className={sass.filterFormControl}>\n        <InputLabel variant=\"filter\">ÐÑÐ±ÑÐ°ÑÑ ÑÐ¾Ð»ÑÐºÐ¾ </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={state.reqOrderStatus}\n          label=\"Age\"\n          className={sass.filterInputBase}\n          onChange={handleChange}\n        >\n          <MenuItem value={OS.ordArchived}>ÐÐ°ÐºÐ°Ð·Ñ</MenuItem>\n          <MenuItem value={OS.reclArchived}>Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ð¸</MenuItem>\n        </Select>\n      </FormControl>\n\n    <Box marginTop={6}>\n    {!state.searchKeyword && < PreviewTable \n          state    = {state} \n          dispatch = {dispatch} \n          columns  = {columns} \n          /> }\n\n      {state.searchKeyword &&  data.erp_Orders && <>\n          <Typography color='textSecondary' variant=\"subtitle1\" m='10px 1rem'>\n            Ð ÐµÐ·ÑÐ»ÑÑÐ°Ñ Ð¿Ð¾Ð¸ÑÐºÐ° Ð¿Ð¾ Ð°ÑÑÐ¸Ð²Ñ\n          </Typography>\n          <Table columns = {columns} data = {data.erp_Orders} className={sass.archiveTable}/>\n          {!data.erp_Orders.length && \n            <Typography color='textPrimary'  m={2} variant=\"subtitle2\">-> Ð½Ð¸ÑÐµÐ³Ð¾ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð¾</Typography>\n          }  \n      </>}\n    </Box>\n\n    </>\n  )\n}\nexport default Archive;","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\n\n// apollo\nimport { useSubscription, useQuery, useMutation } from '@apollo/client'\nimport { GetOrdersSubscription } from './queries/getOrders'\nimport { GET_USERS } from '../../hasura-queries/getUsers'\nimport { INSERT_ORDER } from './queries/MutationInsertOrder';\n\n// ui \nimport {Tabs, Tab, Box, Button} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { UilPlusCircle } from '@iconscout/react-unicons';\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport Archive from './Archive/';\n\nconst StyledTabs = styled((props) => <Tabs {...props} />)(\n  ({ theme }) => ({\n    background: 'var(--LI)',\n    minHeight: '10px',\n    '& .MuiTabs-indicator': {\n      display: 'none'\n    },\n  }),\n  );\n\nconst StyledTab = styled((props) => <Tab {...props} />)(\n    ({ theme }) => ({\n      textTransform: 'none',\n      fontWeight: 500,\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      borderRight: '1px solid transparent',\n      borderLeft: '1px solid transparent',\n      minHeight: '10px',\n      '&.Mui-selected': {\n        backgroundColor: 'var(--L0)',\n        color: theme.palette.primary,\n        borderRight: '1px solid var(--border)',\n        borderLeft: '1px solid var(--border)',\n      },\n      '&:first-of-type':{\n        borderLeft: 'none !important',\n      },\n      '&.Mui-selected:first-of-type': {\n        borderLeft: 'none !important',\n      }\n    }),\n  );\n\n\nconst OrderListLayout = (props) => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState( store.priorityTab, store.cachedOrders, store.cachedPreOrders ));\n    const { selectedTab } = state; \n\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n  \n        options.subscriptionData.data.erp_Orders.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n          });\n\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID === 1) preOrders.push(order)\n            else if (order.OrderStatus.ID === 2) orders.push(order)\n        })\n        store.setCachedOrders(orders)\n        store.setCachedPreOrders(preOrders)\n\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    \n    const { error, loading } = useSubscription(GetOrdersSubscription, { onSubscriptionData });\n    if (error) console.error(error)\n    \n    const { data: users = []} = useQuery(GET_USERS);\n\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n      'managerID':     store.user.UserID,\n      'orderStatusID': 1,\n    }})\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        dispatch({ type: 'resetFilters'})\n        store.setPriorutyTab(newValue)\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box mb='30px'>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n  \n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n  \n    const styles = {\n      adddtn: {\n        marginLeft: 'auto',\n        marginRight: '10px',\n        display: 'flex',\n        alignSelf: 'center',\n      }\n    }\n    return(\n        <>\n        <StyledTabs value={selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\">\n            <StyledTab label=\"ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·Ñ\" {...a11yProps(0)} />\n            <StyledTab label=\"ÐÑÐµÑÐµÐ´Ð¾ÑÑÑ\" {...a11yProps(1)} />\n            <StyledTab label=\"ÐÐµÐ´Ð°Ð²Ð½Ð¸Ðµ\"   {...a11yProps(2)} />\n            <StyledTab label='ÐÑÑÐ¸Ð²'      {...a11yProps(3)} />\n\n           <Box style={styles.adddtn}>\n            <Button onClick={createOrderHandler} variant='iconic'><UilPlusCircle /></Button>\n           </Box>\n        </StyledTabs>\n\n\n        <TabPanel value={selectedTab} index={0}>\n            <PreOrders state={state} dispatch={dispatch}/>\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={1} >\n            <Priority state={state} dispatch={dispatch} users={users.erp_Users} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={2}>\n            <Recently state={state} dispatch={dispatch} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={3}>\n            <Archive state={state} dispatch={dispatch} />\n        </TabPanel>\n\n      </>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    AwaitingDispatch\n    ActualShippingDate\n    AcceptanceDate\n    OrderID\n    ManagerID\n    OrderStatusID\n    City\n    ShippingDate\n    CreatingDate\n    Comment\n    Entity\n    InvoiceNumber\n    NeedAttention\n    OrderNumber\n    PaidAmount\n    TotalAmount\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems(order_by: {OrderItemID: asc}) {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialNumber\n    }\n    CheckListUnits(order_by: {CheckListUnitID: desc}) {\n      CheckListUnitID\n      OrderID\n      IsComplited\n      Point\n    }\n    Docs {\n      Key\n      FileName\n    }\n    PaymentHistories(\n      where: {PaidAmount: {_neq: 0}}\n    ){\n      PaidAmount\n      Date\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;\n\n\nexport const UPDATE_ORDER_ITEM = gql`\nmutation($OrderItemID: Int!, $FullName: String!, $Name: String!, $Quantity: Int!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n    _set: {FullName: $FullName, Name: $Name, Quantity: $Quantity}) {\n    Name\n    FullName\n    OrderItemID\n    Quantity\n  }\n}\n\n`;\nexport const UPDATE_ORDER_ITEM_METADATA = gql`\nmutation($OrderItemID: Int!, $Fitter: String!, $SerialNumber: String!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n     _set: {Fitter: $Fitter, SerialNumber: $SerialNumber}\n  ){\n    OrderItemID\n  }\n}\n`","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu, MenuItem, TextField } from '@mui/material';\nimport { UilEllipsisV } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n  \nconst OrderItemActions = ({ editState, item, editItemHandler, deleteItemHandler, updateItem, setOIDialog }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    'serialNumber': item.SerialNumber,\n    'fitter': item.Fitter\n  });\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n\n    if (item.SerialNumber !== state.serialNumber || item.Fitter !== state.fitter){\n      updateItem({ variables: {\n        'OrderItemID': item.OrderItemID,\n        'Fitter': state.fitter,\n        'SerialNumber': state.serialNumber.toString()\n      } })\n    }\n  };\n    \n  return (\n  <div className='noprint'>\n    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size='small'>\n      <UilEllipsisV className={sass.moreVertIcon}/>\n    </Button>\n    <Menu\n      id       = \"simple-menu\"\n      anchorEl = {anchorEl}\n      keepMounted\n      open     = {Boolean(anchorEl)}\n      onClose  = {handleClose}\n    >\n      <div className={sass.inputListItem} >\n        <TextField \n          type=\"number\"\n          label=\"Ð¡ÐµÑÐ¸Ð¹Ð½ÑÐ¹ Ð½Ð¾Ð¼ÐµÑ\" \n          multiline\n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'serialNumber': e.target.value\n          }))}\n          defaultValue={state.serialNumber}\n          />\n      </div>\n\n      <div className={sass.inputListItem} >\n        <TextField \n          label=\"Ð¡Ð±Ð¾ÑÑÐ¸Ðº\"  \n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'fitter': e.target.value\n          }))}\n          defaultValue={state.fitter}\n        />\n      </div>\n\n\n      {editState && (\n        <div className={sass.actionsWrapper}>\n          <MenuItem onClick={ (e) => {\n              setOIDialog(true)\n              handleClose();\n              editItemHandler(e, item);\n          }}>Ð ÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°ÑÑ</MenuItem>\n\n          <MenuItem \n            className={sass.deleteButton}\n            onClick={ ()=> {\n              handleClose();\n              deleteItemHandler(item.OrderItemID);\n          }}>Ð£Ð´Ð°Ð»Ð¸ÑÑ</MenuItem>\n        </div>\n      )}\n\n    </Menu>\n  </div>\n  );\n}\n\nOrderItemActions.propTypes = { \n    editState: PropTypes.bool,\n    item:      PropTypes.object,\n    editItemHandler:  PropTypes.func, \n    deleteItemHandler: PropTypes.func,\n    updateItem: PropTypes.func\n}\n\nexport default OrderItemActions\n\n","import { useReducer, useEffect, useState } from 'react'\n\n//apollo \nimport { useMutation } from \"@apollo/client\"\nimport { \nDELETE_ORDER_ITEM, \nINSERT_ORDER_ITEM, \nUPDATE_ORDER_ITEM, \nUPDATE_ORDER_ITEM_METADATA \n} from \"./queries/MutationOrderItem\";\n\n// ui \nimport { Button, TextField, Box, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport sass from './sass/composition.module.sass'\nimport OrderItemActions from './OrderItemActions'\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n    id: null,\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                id: action.payload[0],\n                name: action.payload[1],\n                fullName: action.payload[2],\n                quantity: action.payload[3]\n            }\n        default: \n            return {...state}\n    }\n\n}\n\nconst OrderComposition = props => {\n    const { data, editState, refetch, orderID, OIDialog, setOIDialog } = props\n    const [ deleteOrderItemMutation ]         = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ]         = useMutation(INSERT_ORDER_ITEM);\n    const [ updateOrderItemMutation ]         = useMutation(UPDATE_ORDER_ITEM);\n    const [ updateOrderItemMetadataMutation ] = useMutation(UPDATE_ORDER_ITEM_METADATA);\n    const [state, dispatch ] = useReducer(reducer, initialState)\n    \n    const deleteItemHandler = (itemID) => {\n        deleteOrderItemMutation({ variables: { orderItemID: itemID} })\n        refetch()    \n    }\n    const editItemHandler = (e, item) => {\n        dispatch({ type: 'editItem', payload: [item.OrderItemID, item.Name, item.FullName, item.Quantity] })\n    }\n\n    const closeOIDialog = () => {\n      setOIDialog(false);\n    };\n\n    useEffect(() => {\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n    const insertOrderItem = () => {\n        closeOIDialog();\n        if (state.quantity === '' || state.name === '') return null\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const updateOrderItem = () => {\n      if (state.quantity === '' || state.name === '') return null\n      closeOIDialog();\n      updateOrderItemMutation({variables: { \n        OrderItemID: state.id,\n        Name: state.name, \n        Quantity: parseInt(state.quantity),\n        FullName: state.fullName, }}).then( () => { dispatch({ type: 'reset'}); refetch() })    \n  }\n  \n    return(<>     \n        {data.map( (el, index) => \n        <div\n          key={el.OrderItemID}\n          className={sass.Unit} \n        >\n              <span className={sass.index}>{index+1}</span>\n              <Typography color='textPrimary' className={sass.name}> {el.Name} </Typography>\n              <span  className={sass.quantity}> {el.Quantity}</span>\n              <OrderItemActions\n                  {...props}\n                  item={el}\n                  editItemHandler={editItemHandler}\n                  deleteItemHandler={deleteItemHandler}\n                  updateItem={updateOrderItemMetadataMutation}\n              />\n\n              <div className={sass.fullName}> { el.FullName }</div>\n\n        </div>\n        )}\n        \n      <Dialog maxWidth='md' fullWidth={true} open={OIDialog} onClose={closeOIDialog}>\n        <DialogTitle>ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ñ</DialogTitle>\n        <DialogContent>\n        <Box className={sass.addOrderItem}>\n          <TextField\n            label=\"ÐÐ°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ\"\n            value={state.name}\n            variant='filled'\n            sx={{mb: '8px'}}\n            onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"ÐÐ¾Ð»Ð½Ð¾Ðµ Ð½Ð°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ\"\n            multiline\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.fullNameInput}\n            value={state.fullName}\n            onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"ÐÐ¾Ð»-Ð²Ð¾\"\n            type=\"number\"\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.quantityInput}\n            value={state.quantity}\n            onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n            />\n        </Box>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'start'}} >\n            {state.name && state.quantity && (!state.id \n            ? <Box><Button variant='contained' onClick={insertOrderItem}>ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ</Button> </Box>\n            : <Box><Button variant='contained' onClick={updateOrderItem}>ÐÐ·Ð¼ÐµÐ½Ð¸ÑÑ</Button></Box> )}\n              <Box  ><Button onClick={() => {\n                  closeOIDialog();\n                  dispatch({type: 'reset'});\n              }}>ÐÐ°ÐºÑÑÑÑ</Button></Box>\n        </DialogActions>\n      </Dialog>\n    </>)\n}\n\nexport default OrderComposition","import  moment  from 'moment'\nimport \"./sass/order-meta.sass\";\nimport { Typography, Box } from '@mui/material/';\n\nimport { styled } from '@mui/material/styles';\n\nconst OrderInfoCard = (props) => {\n  const { heading, secondaryHeading } = props;\n  return (\n    <Box className=\"OrderInfoCard\" sx={{ color: 'text.primary' }}>\n    <div className='row'>\n      <div className='heading'>\n        {heading}\n      </div>\n      <div className='secondaryHeading noprint'>\n        {secondaryHeading}\n      </div>\n    </div>\n\n    <div className='body'>\n      {props.children}\n    </div>\n  </Box>\n  )\n}\nconst Pre = styled((props) => <Typography {...props} />)(\n  ({ theme }) => ({\n    color: theme.palette.text.secondary,\n    fontSize: '.7rem'\n  }),\n  );\n\nconst OrderMeta = (props) => {\n   const { data } = props;\n    \n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ' '\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n   \n    const paidVisualization = () => {\n      if (data.PaymentHistories.length === 0 || !data.PaidAmount || !data.TotalAmount) return null\n\n      return (\n        <OrderInfoCard className='noprint' heading=\"ÐÐ»Ð°ÑÐµÐ¶Ð¸\" secondaryHeading={`${data.TotalAmount} â½`}>\n           <table className='paidVisualization'>\n           <tbody>\n            {data.PaymentHistories.map(e => (\n                <tr key={e.Date}>\n                  <td>{(e.PaidAmount / data.TotalAmount * 100).toFixed(0)} % </td>\n                  <td>{moment(e.Date).format('DD.MM.YY')}</td>\n              </tr>\n            ))}\n          </tbody>\n          </table>\n        </OrderInfoCard>\n      )\n    }\n    \n    const aboutOrder = () => {\n      const columns = [\n        {\n          'heading': \"ÐÐµÐ½ÐµÐ´Ð¶ÐµÑ\",\n          'data': `${data.User?.FirstName} ${data.User?.LastName || 'undefined'}`, \n        },\n        {\n          'heading': \"Ð¡Ð¾Ð·Ð´Ð°Ð½\",\n          'data': moment(data.CreatingDate).format('DD.MM.YY'),\n        },\n        {\n          'heading': \"Ð Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸\",\n          'data': moment(data.AcceptanceDate).format('DD.MM.YY'), \n        },\n        {\n          'heading': \"Ð¤Ð°ÐºÑ. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°\",\n          'data': moment(data.ActualShippingDate).format('DD.MM.YY'), \n        }, \n        {\n          'heading': 'ÐÑÐ¾Ð±Ð»ÐµÐ¼ÐºÐ¸ Ñ',\n          'data': moment(data.NeedAttention?.split(',')[1] || null).format('DD.MM.YY hh:mm')\n        }\n      ]\n      return (\n        <OrderInfoCard heading=\"Ð Ð·Ð°ÐºÐ°Ð·Ðµ\">\n          <table><tbody>\n             {columns.map(el => {\n                if (!el.data || el.data === 'Invalid date') return null\n                return <tr key={`${el.heading} ${el.data}`}>\n                  <td>{el.heading}</td>\n                  <td>{el.data}</td>\n                </tr>\n                }\n              )}\n          </tbody></table>\n        </OrderInfoCard>\n      )\n    }\n  return (<>\n      <div className=\"wrap\">\n\n          <Box className='significantInfo' sx={{ color: 'text.primary' }}>\n            <div className='bold'>\n              <Pre>ÐÐ»Ð°Ð½. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°</Pre>\n              {data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY')}\n            </div>\n            <div className='bold'>\n              <Pre>ÐÐ¾Ð¼ÐµÑ Ð·Ð°ÐºÐ°Ð·Ð°</Pre>\n              {data.OrderNumber}\n            </div>\n            <div className='bold'>\n              <Pre>Ð¡ÑÐµÑ / Ð¾Ð¿Ð»Ð°ÑÐ°</Pre>\n              {\"â \"+ (data.InvoiceNumber || '')+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n            </div>\n          </Box>\n\n          <Box className='OrderComment'>\n              <Pre>ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹</Pre>\n              {data.Comment}\n          </Box>\n\n        {aboutOrder()}\n        {paidVisualization()}\n      </div>\n  </>)\n}\n\nexport default OrderMeta\n","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($OrderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $OrderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($OrderID: Int!, $AwaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { AwaitingDispatch: $AwaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;\nexport const UPDATE_NEED_ATTENTION = gql`\nmutation MyMutation($OrderID: Int!, $NeedAttention: String! ) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { NeedAttention: $NeedAttention }\n  ) {\n\t\tOrderID\n    NeedAttention\n  }\n}\n`\n\nexport const MOVE_ORDER_TO_ARCHIVE = gql`\n  mutation MyMutation($OrderID: Int!, $ActualShippingDate: timestamptz!, $OrderStatusID: Int!) {\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID}, \n      _set: {\n        OrderStatusID: $OrderStatusID,\n        AwaitingDispatch: false,\n        ActualShippingDate: $ActualShippingDate,\n        }){\n      OrderID\n      OrderStatusID\n    }\n  }\n`;\n\nexport const MOVE_ORDER_TO_PRIORITY = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_PAYMENT = gql`\n  mutation($PaidAmount: numeric!, $Date: timestamptz!, $OrderID: Int!) {\n    insert_erp_PaymentHistory_one(object: {PaidAmount: $PaidAmount, OrderID: $OrderID, Date: $Date}) {\n      ID\n      OrderID\n    }\n}\n`;","import { useEffect } from 'react';\nimport './EditableInfo.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\nimport { INSERT_PAYMENT } from '../queries/MutationPaymentHistory'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nimport { TextField, Autocomplete } from '@mui/material';\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'â½ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch, users }) => {  \n  \n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n    const [insertPayment] = useMutation(INSERT_PAYMENT)\n  \n    function saveChanges(){\n      console.log('doing mutation for order', orderID, fields)\n      updateOrderInfo({variables: {\n        OrderID: orderID,\n        fields,\n      }})\n\n      if (fields.PaidAmount) insertPayment({ variables: {\n          Date: new Date,\n          OrderID: orderID,\n          PaidAmount: fields.PaidAmount\n        }})\n      \n      refetch()\n    }\n    useEffect(() => {\n        fields = {};\n        return () => {\n            saveChanges()\n        };\n    }, []);\n\n    function findSelectedManeger(users, managerID){\n      if (!users) return null\n      const index = users.indexOf(users.find(user => user.UserID === managerID))\n      return users[index]\n    }\n\n  return(\n    <form className=\"EditableInfo\">  \n      <div className=\"wrap\">\n       <TextField\n          label=\"ÐÐ»Ð°Ð½. Ð¾ÑÐ³ÑÑÐ·ÐºÐ°\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            if (e.target.value === 'Invalid date') e.target.value=null\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          InputProps={{\n            inputComponent: DateFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼ÐµÑ ÑÑÐµÑÐ°\"\n          type=\"number\"\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼ÐµÑ Ð·Ð°ÐºÐ°Ð·Ð°\"\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={users.filter( (user) => user.AccessLevelID != 3)}\n          getOptionLabel={(option) => `${option.FirstName} ${option.LastName}`}\n          renderInput={(params) => <TextField {...params} label=\"ÐÐµÐ½ÐµÐ´Ð¶ÐµÑ\"/>}\n          defaultValue={() => findSelectedManeger(users, data.ManagerID)}\n          onChange={(event, newValue) => {\n            fields['ManagerID'] = (newValue?.UserID || null)\n          }}\n        />\n\n         <TextField\n          label=\"Ð®Ñ Ð»Ð¸ÑÐ¾\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"ÐÐ¾ÑÐ¾Ð´\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Ð¡ÑÐ¼Ð¼Ð° Ð·Ð°ÐºÐ°Ð·Ð°\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n          />\n        \n        <TextField\n          label=\"ÐÐ¿Ð»Ð°ÑÐµÐ½Ð¾\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹\"\n          multiline\n          InputProps={{\n            sx: {fontSize: '.9rem !important'}\n          }}\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n       </div>\n    </form>\n  )\n}\n\nexport default EditableInfo","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nexport default function ConfirmDialog(props) {\n  const { filename, open, handleClose, onConfirmF} = props\n  return (\n    <div>\n      <Dialog\n        open={open}\n        minWidth='xs'\n\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" sx={{\n          color: 'var(--lowContrast) !important',\n          'span': {\n            color: 'var(--highContrast) !important'\n          }\n        }}>\n            Ð£Ð´Ð°Ð»Ð¸ÑÑ <span>{filename}</span> ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>ÐÑÐ¼ÐµÐ½Ð¸ÑÑ</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Ð£Ð´Ð°Ð»Ð¸ÑÑ \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useContext, useState, useEffect } from 'react';\nimport { Context } from '../../../index'\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from '../queries/MutationOrderDocs';\n\nimport './docs.sass'\n\nimport ConfirmDialog from './ConfirmDialog';\n\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const { store } = useContext(Context)\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length === 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n    useEffect(() => {\n        setOpen(false)\n    }, [editState]);\n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        await store.deleteFile(fileOnDelete.Key, deleteFileMutation)\n        refetch()\n    }\n\n    const attachedFiles = data.map(\n        file => {\n            // delite file\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n             // opne file\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    rel=\"noreferrer\"\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n            <div className='filesContainer'>\n                {attachedFiles}\n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n\n            <ConfirmDialog \n                filename={fileOnDelete?.FileName} \n                open={open}  \n                handleClose={handleClose}\n                onConfirmF={deleteFile}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_COMMENT = gql`\nmutation($OrderID: Int!, $Text: String!, $UserID: Int!) {\n  insert_erp_Comments_one(\n    object: {OrderID: $OrderID, Text: $Text, UserID: $UserID}) \n    {\n    CommentID\n    OrderID\n    Text\n    Timestamp\n    UserID\n  }\n}\n`;\n\nexport const DELETE_ORDER_COMMENT = gql`\n mutation($CommentID: Int!) {\n  delete_erp_Comments_by_pk(CommentID: $CommentID) {\n    CommentID\n  }\n}\n`;\n\nexport const UPDATE_ORDER_COMMENT = gql`\nmutation($CommentID: Int!, $Text: String!) {\n  update_erp_Comments_by_pk(\n    pk_columns: {CommentID: $CommentID},\n    _set: {Text: $Text}) \n    {\n    OrderID\n    Text\n    Timestamp\n    UserID\n    CommentID\n  }\n  }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_NOTIFICATION = gql`\nmutation($CommentID: Int!, $MentionedUser: Int!, $OrderID: Int!){\n  insert_erp_Notifications(objects: \n    { CommentID: $CommentID, MentionedUser: $MentionedUser, OrderID: $OrderID }\n    ){\n    returning {\n      MentionedUser\n      ID\n    }\n  }\n}\n`;\n\n\n","import gql from 'graphql-tag'\n\nexport const SUBSCRIBTION_ORDER_COMMENT = gql`\n  subscription MySubscritp($OrderID: Int!) {\n    erp_Comments(where: {OrderID: {_eq: $OrderID}}, order_by: {CommentID: desc}) {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n  }\n`\n","import sass from './index.module.sass'\nimport moment from 'moment'\n\nconst Comment = (props) => {\n  const { data, userID, updateComment, deleteComment, nowEditing, setNowEditing } = props\n\n  function sender(){\n    return `${data.User.FirstName} ${data.User.LastName}`\n  }\n  \n  function actions(){\n    if (userID === data.User.UserID && nowEditing?.CommentID !== data.CommentID ) return (\n        <div onClick={()=> deleteComment(data.CommentID)}>Ð£Ð´Ð°Ð»Ð¸ÑÑ</div>\n    )\n  }\n  function timestamp(){\n    const date = moment(data.Timestamp)\n    return date.format('MMM D') +' at '+ date.format('hh:mm')\n  }\n\n  function getCommentContent(){\n    if (userID === data.User.UserID) return <div \n    contentEditable = \"true\"\n    key             = {data.CommentID}\n    className       = {sass.commentContent}\n    suppressContentEditableWarning = \"true\"\n    onBlur={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n    }}\n    onMouseLeave={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n      setNowEditing(null)\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text}}>\n    </div>\n\n    else return <div \n    onClick={(e) => {\n      // ÐµÑÐ»Ð¸ ÐºÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ ÑÐµÐº-Ð»Ð¸ÑÑ Ð²ÑÐ¿Ð¾Ð»Ð½ÑÐµÐ¼ Ð¼ÑÑÐ°ÑÐ¸Ñ Ð½Ð° Ð¾Ð±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ðµ ÑÐ¾ÑÑÐ¾ÑÐ½Ð¸Ñ\n      if (e.currentTarget.innerHTML.toString().includes(sass.checklistUnit, 0)){\n        updateComment(data.CommentID, e.currentTarget.innerHTML)\n      }\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text }} \n    className={sass.commentContent}>\n    </div>\n\n  }\n\n  return (\n    <div className={sass.commentUnit}>\n\n      <div className={sass.commentHeader}>\n        <div className={sass.sender}> {sender()} </div>\n        <div className={sass.actions}>{actions()}</div>\n        <div className={sass.time}> {timestamp()} </div>\n      </div>\n      {getCommentContent()}\n\n    </div>\n  )\n}\nexport default Comment ","import gql from 'graphql-tag'\n\nexport const GET_ALL_USERS = gql`\nquery MyQuery {\n  erp_Users {\n    FirstName\n    LastName\n    UserID\n  }\n}\n\n`\n","import { Menu, MenuItem } from '@mui/material/';\nimport sass from './index.module.sass'\n\nconst Ð¡ommandsPopover = props => {\n  const {anchorEl, open, handleClose, setAnchorULP, inputRef} = props\n\n  function insertTodoinDOM (){\n    const root = document.getElementById('Comments_InputForm')\n    const elem = document.createElement('div')\n    elem.classList.add(sass.checklistUnit)\n    root.appendChild(elem)\n  }\n\n  function mentionHandler(){\n    handleClose();\n    setAnchorULP(inputRef.current)\n  }\n  return (\n    <Menu\n        id=\"Comments__commandMenu\"\n        aria-labelledby=\"Comments_InputForm\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => {\n          handleClose();\n          insertTodoinDOM();\n        }}>Ð§ÐµÐºÐ»Ð¸ÑÑ</MenuItem>\n        <MenuItem onClick={mentionHandler}>Ð£Ð¿Ð¾Ð¼ÑÐ½ÑÑÑ</MenuItem>\n    </Menu>\n  )\n}\n\nexport default Ð¡ommandsPopover\n","import { Menu, MenuItem } from '@mui/material/';\nimport sass from './index.module.sass'\nimport placeCaretAtEnd from '../../_core/placeCaretAtEnd'\n\n\nconst UserListPopover = props => {\n  const { anchorEl, open, handleClose, users, inputRef } = props;\n\n  const onClick = (e) => {\n    handleClose();\n    const userID = e.target.getAttribute('userid')\n    const user = users.find(e => e.UserID == userID)\n    const inputform = document.getElementById('Comments_InputForm')\n    const elem = document.createElement('span')\n    inputRef.current.innerText = inputRef.current.innerText.slice(0, -1)\n\n    elem.innerHTML= '@' + [user.FirstName, user.LastName].join(' ') + ', '\n    elem.classList.add(sass.mentionedUserHiglight)\n    elem.dataset.mentionedUser = user.UserID\n    elem.contentEditable = 'false'\n    inputform.appendChild(elem)\n\n    placeCaretAtEnd(inputform)\n\n    const space = document.createElement('span')\n    inputform.appendChild(space)\n  }\n\n  return (\n    <Menu\n    id=\"Comments__userListMenu\"\n    aria-labelledby=\"Comments_InputForm\"\n    anchorEl={anchorEl}\n    open={open}\n    onClose={handleClose}\n  >\n  \n    { users && users.map( (user) => (\n      <MenuItem \n      sx      = {{\n        padding: '4px 10px',\n      }}\n      userid  = {user.UserID} \n      key     = {user.UserID} \n      onClick = {onClick}>\n        {user.FirstName} {user.LastName}\n      </MenuItem>\n    ))}\n \n  </Menu>\n  )\n}\nexport default UserListPopover","export default function placeCaretAtEnd(el) {\n  el.focus();\n  if (typeof window.getSelection != \"undefined\"\n          && typeof document.createRange != \"undefined\") {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n  } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n  }\n}","import { useState } from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_USERS } from '../queries/GetAllUsers';\n\n//ui\nimport { Box } from '@mui/material/';\nimport { UilMessage } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n\n// components\nimport Ð¡ommandsPopover from './Ð¡ommandsPopover'\nimport UserListPopover from './UserListPopover';\n\nconst InputForm = props => {\n  const { insertComment, inputRef } = props\n\n  const { data: users = [] } = useQuery(GET_ALL_USERS)\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  // User List Popover\n  const [anchorULP, setAnchorULP] = useState(null)\n\n  function inputHandler(e){\n    if (e.target.innerText.trim() === '/'){\n      setAnchorEl(e.target)\n      e.target.innerHTML = ''\n    }\n    if (e.target.innerText.trim() === '@'){\n      setAnchorULP(e.target)\n    }\n  }\n\n  function keyPressHandler(e){\n    if ((e.ctrlKey || e.metaKey) && (e.keyCode === 13 || e.keyCode === 10)) {\n      insertComment()\n    }\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleCloseUserListPopover = () => {\n    setAnchorULP(null)\n  }\n\n  return (\n    <div className={`${sass.commentInputForm} noprint`}>\n      \n      <Ð¡ommandsPopover \n      setAnchorULP = {setAnchorULP} \n      anchorEl     = {anchorEl} \n      open         = {Boolean(anchorEl)} \n      handleClose  = {handleClose}\n      inputRef     = {inputRef} />\n      <UserListPopover \n      anchorEl    = {anchorULP} \n      open        = {Boolean(anchorULP)} \n      handleClose = {handleCloseUserListPopover}\n      users       = {users.erp_Users}\n      inputRef    = {inputRef} />\n\n      <Box id=\"Comments_InputForm\"\n        aria-controls=\"Comments__commandMenu\"\n        aria-haspopup=\"true\"\n        contentEditable='true'\n        ref={inputRef}\n        sx={{ minHeight: 20, padding: '10px 5px'}}\n        data-ph=\"ÐÐ¾Ð¼Ð¼ÐµÐ½ÑÐ°ÑÐ¸Ð¹ Ð¸Ð»Ð¸ ' / ' Ð´Ð»Ñ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ\"\n        suppressContentEditableWarning={true}\n        onInput={inputHandler}\n        onKeyUp={keyPressHandler}\n        >\n      </Box>\n    \n      <div onClick={insertComment} className={sass.saveButton}><UilMessage/></div>\n    </div>\n  )\n}\nexport default InputForm","import { useState, useRef, useEffect } from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { \n  INSERT_ORDER_COMMENT,\n  UPDATE_ORDER_COMMENT,\n  DELETE_ORDER_COMMENT \n} from '../queries/MutationOrderCommnets'\nimport { INSERT_NOTIFICATION } from '../queries/MutationNotification';\nimport { SUBSCRIBTION_ORDER_COMMENT } from '../queries/SubscriptionComments'\nimport sass from './index.module.sass'\n\nimport Comment from './Comment'\nimport InputForm from './InputForm';\nimport { Typography } from '@mui/material';\n\nconst CommentsList = (props) => {\n  const { orderID, user } = props\n  const [ insertOrderCommentMutation ] = useMutation(INSERT_ORDER_COMMENT);\n  const [ updateOrderCommentMutation ] = useMutation(UPDATE_ORDER_COMMENT);\n  const [ deleteOrderCommentMutation ] = useMutation(DELETE_ORDER_COMMENT);\n  const [ insertNotificationMutation ] = useMutation(INSERT_NOTIFICATION);\n\n  var   inputRef = useRef();\n  const [nowEditing, setNowEditing] = useState();\n  \n  const { data: comments = [], loading } = useSubscription(SUBSCRIBTION_ORDER_COMMENT, { variables: { OrderID: orderID }});\n\n  function insertComment(){\n    const text = inputRef.current.innerHTML\n    if (!text) return null\n    \n    const root = document.getElementById('Comments_InputForm')\n    const mentioned = root.querySelectorAll(`.${sass.mentionedUserHiglight}`)\n    insertOrderCommentMutation({ variables: {\n      OrderID: orderID,\n      UserID: user.UserID,\n      Text: text\n      }\n    }).then((res) => {\n      const { CommentID, OrderID } = res.data.insert_erp_Comments_one\n        mentioned.forEach( el => {\n          const MentionedUser = el.dataset.mentionedUser\n          insertNotificationMutation({ variables: {\n            CommentID, OrderID, MentionedUser\n          }})\n    \n        })\n      }\n    )\n    inputRef.current.innerText = ''\n  }\n\n  function updateComment(id, newText){\n    updateOrderCommentMutation({ variables: {\n      CommentID: id,\n      Text: newText,\n    }})\n  }\n\n  function deleteComment(id){\n    deleteOrderCommentMutation({ variables: {\n      CommentID: id\n    }\n  })\n  }\n  \n  function switchTodo(e) {\n    e.target.classList.toggle(sass.checklistUnit_complited)\n  }\n\n  useEffect(() => {\n    const els = [...document.querySelectorAll(`div.${sass.commentUnit} div.${sass.checklistUnit}`)]\n    els.forEach( el => {\n      el.addEventListener('click', switchTodo, false);\n    }, {once : true})\n    return () => {\n      els.forEach( el => {\n        el.removeEventListener('click', switchTodo, false);\n      })\n    }\n  }, [comments])\n\n  const line = comments?.erp_Comments?.length ? sass.commentListThread : ''\n  \n  return(\n    <div className={`${sass.commentsListWrapper} ${line}`}>\n      <InputForm \n      insertComment={insertComment} \n      inputRef={inputRef} \n      />\n\n     {!loading ?\n      comments?.erp_Comments?.map( (comment) => <Comment \n        data={comment} \n        key={comment.CommentID}\n        userID={user.UserID}\n        deleteComment={deleteComment}\n        updateComment={updateComment}\n        nowEditing={nowEditing}\n        setNowEditing={setNowEditing}\n      />): (\n        <Typography m=\"10px\" variant='subtitle2'>Ð·Ð°Ð³ÑÑÐ·ÐºÐ°..</Typography>\n      )}\n    </div>\n  )\n}\n\nexport default CommentsList","import {gql} from 'graphql-tag'; \n\nexport const DELETE_ORDER = gql`\nmutation MyMutation($OrderID: Int!) {\n  delete_erp_Orders_by_pk(OrderID: $OrderID) {\n    OrderID\n  }\n}\n`;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function TransferOrderConfirmDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div onClick={handleClickOpen}>\n        ÐÑÐ³ÑÑÐ¶ÐµÐ½\n      </div>\n      \n      <Dialog\n        open={open}\n        maxWidth='xs'\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          ÐÐµÑÐµÐ½ÐµÑÑÐ¸ Ð² Ð°ÑÑÐ¸Ð²?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            ÐÐ°ÐºÐ°Ð· ÑÐ´Ð°Ð»Ð¸ÑÑÑ Ð¸Ð· Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸, Ð½Ð¾ ÐµÐ³Ð¾ Ð² Ð»ÑÐ±Ð¾Ðµ Ð²ÑÐµÐ¼Ñ Ð¼Ð¾Ð¶Ð½Ð¾ Ð±ÑÐ´ÐµÑ Ð½Ð°Ð¹ÑÐ¸ Ð² Ð°ÑÑÐ¸Ð²Ðµ Ð¿Ð¾ Ð½Ð¾Ð¼ÐµÑÑ ÑÑÐµÑÐ°, ÑÑÐ»Ð¸ÑÑ, Ð¼Ð°ÑÐºÐ¸ÑÐ¾Ð²ÐºÐµ Ð¿ÑÐ¸Ð²Ð¾Ð´Ð°.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>ÐÑÐ¼ÐµÐ½Ð¸ÑÑ</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            ÐÐµÑÐµÐ½ÐµÑÑÐ¸ \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilArchive,\n } from '@iconscout/react-unicons'\n\nimport DeleteOrderConfirmDialog from '../TransferOrderConfirmDialog'\nimport OS from '../../../_core/OrderStatus';\n\nconst OrderActions = (props) => {\n  const { order, transferOrderToArchive} = props\n\n  if ( [OS.ordProduction].includes(order.OrderStatusID) ) return (\n    <MenuItem>\n      <ListItemIcon>\n        <UilArchive/>\n      </ListItemIcon>\n      <ListItemText>\n        <DeleteOrderConfirmDialog onConfirmF={() => transferOrderToArchive(3)}/>  \n      </ListItemText>\n    </MenuItem>\n  )\n\n  return null\n}\nexport default OrderActions","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilTrashAlt, \n  UilFileCheck,\n } from '@iconscout/react-unicons'\n\nimport OS from '../../../_core/OrderStatus';\n\n\nconst PreOrderActions = (props) => {\n  const { order, transferOrderToPriority, mutationDeleteOrderHandler} = props\n\n  if ( [OS.ordRegistration].includes(order.OrderStatusID)) return (\n    <div>\n        <MenuItem>\n        <ListItemIcon>\n          <UilFileCheck/> \n        </ListItemIcon>\n        <ListItemText onClick={transferOrderToPriority}>\n            Ð Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ\n        </ListItemText>\n      </MenuItem>\n      <MenuItem sx={{ color: 'var(--danger)', 'svg': {\n        color: 'var(--danger)'\n        }}}>\n        <ListItemIcon>\n          <UilTrashAlt/>\n        </ListItemIcon>\n        <ListItemText onClick={mutationDeleteOrderHandler}>Ð£Ð´Ð°Ð»Ð¸ÑÑ Ð¿ÑÐµÐ´Ð°Ð·ÐºÐ°Ð·</ListItemText>\n      </MenuItem>\n    </div>\n  )\n  return null\n}\nexport default PreOrderActions","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilExclamationTriangle, \n  UilClock,\n } from '@iconscout/react-unicons'\nimport OS from '../../../_core/OrderStatus';\n\nconst OrderStatusesActions = (props) => {\n  const { order, needAttentionHandler, awaitingDispatchHandler} = props\n\n  const needAttention = ( order.NeedAttention?.split(',')[0] === 'true' )\n\n  if ( [OS.ordProduction, OS.reclInbox, OS.reclDecision, OS.reclProduction].includes(order.OrderStatusID) ) return (\n    <div>\n      <MenuItem \n        className={ order.AwaitingDispatch? 'awaitingDispatch': ''}\n        onClick={awaitingDispatchHandler}>\n        <ListItemIcon>\n          <UilClock/>\n        </ListItemIcon>\n        <ListItemText>ÐÐ¶Ð¸Ð´Ð°ÐµÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ¸</ListItemText>\n      </MenuItem>\n      <MenuItem \n        className={ needAttention ? 'needAttention': ''}\n        onClick={needAttentionHandler}>\n        <ListItemIcon>\n          <UilExclamationTriangle/>\n        </ListItemIcon>\n        <ListItemText>Ð¢ÑÐµÐ±ÑÐµÑ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ</ListItemText>\n      </MenuItem>\n    </div>\n  )\n  return null\n}\nexport default OrderStatusesActions","import {\n  MenuItem,\n  ListItemIcon,\n  ListItemText\n} from '@mui/material/';\n\nimport { \n  UilTrashAlt, \n  UilArchive \n} from '@iconscout/react-unicons'\n\nimport TransferOrderConfirmDialog from '../TransferOrderConfirmDialog';\nimport OS from '../../../_core/OrderStatus';\n\nconst ReclamationActions = (props) => {\n  const { order, transferOrderToArchive, mutationDeleteOrderHandler } = props\n  const ifInbox = () => {\n    if (order.OrderStatusID === OS.reclInbox) return true\n  }\n\n  const ifDecision = () => {\n    if (order.OrderStatusID === OS.reclDecision) return true\n  }\n\n  const ifInproduction = () => {\n    if (order.OrderStatusID === OS.reclProduction) return true\n  }\n\n return (<>\n  {ifInproduction() && \n    <MenuItem>\n      <ListItemIcon>\n        <UilArchive/>\n      </ListItemIcon>\n      <ListItemText>\n        <TransferOrderConfirmDialog onConfirmF={() => transferOrderToArchive(13) }/>  \n      </ListItemText>\n    </MenuItem>\n  }\n  {ifInbox() && \n      <MenuItem sx={{ color: 'var(--danger)', 'svg': {\n        color: 'var(--danger)'\n      }}}>\n      <ListItemIcon>\n        <UilTrashAlt/>\n      </ListItemIcon>\n      <ListItemText onClick={mutationDeleteOrderHandler}>Ð£Ð´Ð°Ð»Ð¸ÑÑ</ListItemText>\n      </MenuItem>\n    }\n\n </>)\n}\nexport default ReclamationActions","import { useHistory } from \"react-router-dom\";\n\nimport {\n  Menu\n} from '@mui/material/';\n\n\n//apollo\nimport { useMutation } from \"@apollo/client\"\nimport { \n  UPDATE_AWAITING_DISPATCH,\n  UPDATE_NEED_ATTENTION,\n  MOVE_ORDER_TO_ARCHIVE,\n  MOVE_ORDER_TO_PRIORITY\n} from '../queries/MutationOrderInfo'\nimport { DELETE_ORDER } from '../queries/MutationDeleteOrder';\n\nimport OrderActions from \"./Actions/OrderActions\";\nimport PreOrderActions from \"./Actions/PreOrderActions\";\nimport OrderStatusesActions from \"./Actions/OrderStatusesActions\";\n\nimport ReclamationActions from \"./Actions/ReclamationActions\";\n\nconst OrderActionsMenu = props => {\n  const OrderID = props.order.OrderID \n  const { OAMenu, setOAMenu, OAMenuRef, order, refetch} = props\n\n  const [mutationAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n  const [mutationNeedAttention] = useMutation(UPDATE_NEED_ATTENTION);\n  const [mutationMoveOrderToArchive] = useMutation(MOVE_ORDER_TO_ARCHIVE);\n  const [mutationMoveOrderToPriority] = useMutation(MOVE_ORDER_TO_PRIORITY);\n  const [mutationDeleteOrder] = useMutation(DELETE_ORDER);\n\n  const history = useHistory();\n\n  const baseurl = () => {\n    if ( [1,2].includes(order.OrderStatusID) ) return '/'\n    if ( [10,11,12].includes(order.OrderStatusID) ) return '/reclamation'\n  }\n\n  // ÐÑÐ¸ ÑÑÐ°ÑÑÑÐµ \"ÑÑÐµÐ±ÑÐµÑ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ\" Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·Ð°ÐºÐ°Ð·Ð° ÐºÑÐ°ÑÐ½ÑÐ¼ ÑÐ²ÐµÑÐ¾Ð¼ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸. \n  // Ð Ð»ÐµÐ²Ð¾Ð¼ Ð¼ÐµÐ½Ñ Ð² Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸ Ð¾ Ð·Ð°ÐºÐ°Ð·Ðµ ÑÐ¸ÐºÑÐ¸ÑÑÐµÑÑÑ  Ð´Ð°ÑÐ° Ð²ÐºÐ»ÑÑÐµÐ½Ð¸Ñ ÑÑÐ¾Ð³Ð¾ ÑÑÐ°ÑÑÑÐ°.  \n  // ÐÐµÐ»Ð°ÑÐµÐ»ÑÐ½Ð¾ ÑÑÐ¾Ð±Ñ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÑ ÑÐ½ÑÑÐ¸Ñ Ð±ÑÐ»Ð° ÑÐ¾Ð»ÑÐºÐ¾ Ñ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð½ÑÑ Ð°ÐºÐºÐ°ÑÐ½ÑÐ¾Ð² .  \n  // Ð­ÑÐ¾ Ð½ÐµÐ¾Ð±ÑÐ¾Ð´Ð¸Ð¼Ð¾ ÐºÐ¾Ð³Ð´Ð° Ð¿ÑÐ¸ Ð¾ÑÐºÑÑÑÐ¸Ð¸ Ð·Ð°ÐºÐ°Ð·Ð° Ð²ÑÑÑÐ½ÑÐµÑÑÑ Ð´ÐµÑÐ¸ÑÐ¸Ñ ÐºÐ¾Ð¼Ð¿Ð»ÐµÐºÑÑÑÑÐ¸Ñ Ð¸Ð»Ð¸ Ð¿Ð¾ Ð·Ð°ÐºÐ°Ð·Ñ ÑÑÐµÐ±ÑÑÑÑÑ ÑÑÐ¾ÑÐ½ÑÐµ ÑÑÐ¾ÑÐ½ÐµÐ½Ð¸Ñ Ð¾Ñ Ð·Ð°ÐºÐ°Ð·ÑÐ¸ÐºÐ° ÐºÐ°ÐºÐ¸Ðµ-Ð½Ð¸Ð±ÑÐ´Ñ.\n  function needAttentionHandler(){\n    const curDate = new Date().toISOString()\n    var payload = [];\n    if (!order.NeedAttention) payload = ['true', curDate, 'null']\n    else {\n      const nd = order.NeedAttention.split(',')\n      if (nd[0] === 'true') payload = ['false', nd[1], curDate]\n      if (nd[0] === 'false') payload = ['true', curDate, 'null']\n    }\n    \n    mutationNeedAttention({\n      variables: {\n        OrderID, \n        NeedAttention: payload.join(',')\n      },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            NeedAttention: payload.join(',')\n          }\n        }\n    })\n  }\n  // ÐÑÐ¸ ÑÑÐ°ÑÑÑÐµ \"Ð¾Ð¶Ð¸Ð´Ð°ÐµÑ Ð¾ÑÐ³ÑÑÐ·ÐºÐ¸\" Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð·ÐµÐ»ÐµÐ½ÑÐ¼ ÑÐ²ÐµÑÐ¾Ð¼ Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸, ÑÑÐ¾ Ð¾Ð·Ð½Ð°ÑÐ°ÐµÑ, ÑÑÐ¾ Ð·Ð°ÐºÐ°Ð· ÑÐ¶Ðµ ÑÐ¾Ð±ÑÐ°Ð½,\n  // Ð¸ Ð½Ðµ Ð¾ÑÐ³ÑÑÐ¶Ð°ÐµÑÑÑ Ð¿Ð¾ Ð±ÑÐ¼Ð°Ð¶Ð½ÑÐ¼ Ð¿ÑÐ¸ÑÐ¸Ð½Ð°Ð¼\n  function awaitingDispatchHandler(){\n    mutationAwaitingDispatch({\n      variables: {OrderID, AwaitingDispatch: !order.AwaitingDispatch },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            AwaitingDispatch: !order.AwaitingDispatch\n          }\n        }\n    })\n  }\n  // ÐÐµÑÐµÐºÐ¸Ð´ÑÐ²Ð°ÐµÑ Ð·Ð°ÐºÐ°Ð· Ð² Ð°ÑÑÐ¸Ð² (ÑÐ±Ð¸ÑÐ°ÐµÑ Ð¸Ð· Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÐ¸)\n  async function transferOrderToArchive(OrderStatusID){\n    mutationMoveOrderToArchive({ variables: { \n      OrderID,\n      ActualShippingDate: new Date(),\n      OrderStatusID\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderID){\n          history.push(baseurl())\n        }\n      }\n    )\n  }\n\n  // ÐÐµÑÐµÐºÐ¸Ð´ÑÐ²Ð°ÐµÑ Ð¿ÑÐµÐ´Ð·Ð°ÐºÐ°Ð· Ð² Ð¾ÑÐµÑÐµÐ´Ð½Ð¾ÑÑÑ \n  async function transferOrderToPriority(){\n    mutationMoveOrderToPriority({ variables: { \n      OrderID,\n      AcceptanceDate: new Date(),\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderID){\n          refetch()\n        }\n      }\n    )\n  }\n  \n  // Ð´Ð»Ñ ÑÐ´Ð°Ð»ÐµÐ½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð°\n  function mutationDeleteOrderHandler(){\n    mutationDeleteOrder({ variables: {\n      OrderID\n    }}).then( res => {\n      if (res.data.delete_erp_Orders_by_pk.OrderID){\n        history.push(baseurl())\n      }\n    })\n  }\n\n  const handleClose = (event) => {\n    setOAMenu(false);\n  };\n\n  return (\n    <Menu\n    open={OAMenu} \n    onClose={handleClose}\n    anchorEl={OAMenuRef.current}\n    >\n\n        <OrderStatusesActions\n        order                   = {order}\n        awaitingDispatchHandler = {awaitingDispatchHandler}\n        needAttentionHandler    = {needAttentionHandler}\n        />\n\n        <PreOrderActions \n        order                      = {order}\n        transferOrderToPriority    = {transferOrderToPriority}\n        mutationDeleteOrderHandler = {mutationDeleteOrderHandler}\n        />\n        <OrderActions \n        order                  = {order}\n        transferOrderToArchive = {transferOrderToArchive}\n        />\n        <ReclamationActions\n        order = {order }\n        transferOrderToArchive ={transferOrderToArchive}\n        mutationDeleteOrderHandler ={mutationDeleteOrderHandler}\n        />\n  </Menu>\n\n  \n  )\n}\nexport default OrderActionsMenu;","import { UilCloudUpload } from '@iconscout/react-unicons'\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <div >\n             <UilCloudUpload className='inCloudconIcon'/>\n            </div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","export default class UserStatus {\n  static general    = 1 \n  static management = 2\n  static bookkeeping = 4\n  static manufacture = 3\n}","import { useContext, useCallback, useState, useRef } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_USERS }             from '../../hasura-queries/getUsers';\nimport { GET_ORDER_BY_ID }       from './queries/GetOrderByID'\nimport { PUSH_DOCS_ARRAY }       from './queries/MutationOrderDocs'\nimport { useMutation, useQuery } from \"@apollo/client\";\n\n//components\nimport Composition      from \"./Composition\";\nimport Info             from \"./Info\";\nimport EditableInfo     from \"./EditableComponents/EditableInfo\";\nimport Docs             from './Docs/Docs';\nimport CommentsList     from \"./Comments/CommentsList\";\nimport OrderActionsMenu from \"./OrderActions/OrderActionsMenu\";\n\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport './sass/index.sass';\nimport { Typography, Button, Box } from '@mui/material'\nimport { UilPlus, UilEditAlt, UilEllipsisH } from '@iconscout/react-unicons';\nimport OS from \"../_core/OrderStatus\";\nimport US from \"../_core/UserStatus\";\n\nfunction orderStatus(data){\n    // add a note to the title if this is a pre-order\n    if (data.OrderStatusID === OS.ordRegistration) return ' | ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·';\n    if (data.OrderStatusID === OS.ordArchived) return ' | Ð Ð°ÑÑÐ¸Ð²Ðµ';\n    if ([ OS.reclInbox, OS.reclDecision , OS.reclProduction ].includes(data.OrderStatusID)) return ' | Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ';\n}\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    // Add new Order Item Dialog\n    const [OIDialog, setOIDialog] = useState(false)\n\n    //OrderActions Dropdown menu\n    const [OAMenu, setOAMenu] = useState(false);\n    const OAMenuRef = useRef(null);\n\n    const [pushDocs] = useMutation(PUSH_DOCS_ARRAY);\n    const orderID = useParams().id\n\n    const S3Upload = useCallback(acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        store.uploadFile(acceptedFiles).then(\n            (res) => {\n                if (res.status !== 200) console.log('S3 file upload error')\n                else{\n                    let m = []\n                    for (var i=0;  i<res.data.length; i=i+2 ){\n                        m.push({\n                            'Key': res.data[i].key,\n                            'OrderID': orderID,\n                            'FileName': res.data[i].originalname,\n                        })\n                    }\n                    pushDocs({ variables: {'objects': m} })\n                } \n                setOnUploadFiles([])\n                refetch();\n                }\n            \n        )\n      }, [])\n\n    var { data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID} });\n    const { data: users = []} = useQuery(GET_USERS);\n    const {getRootProps, isDragActive} = useDropzone({className: 'dropzone', onDrop: S3Upload });\n    \n    function showOrderActions(){\n        if ([ US.general, US.management , US.bookkeeping ].includes(store.user.AccessLevelID)) return true\n    }\n\n    return(\n    <div> \n        {isFileOnDropzone(isDragActive)}\n        { data.erp_Orders && users.erp_Users ? (<>\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n          <div className='LeftSideContent'>\n\n              <div className=\"page-header\">\n                <Typography sx={{ fontWeight: 600, fontSize: '1rem'}}>\n                    {data.erp_Orders[0].Entity} __ {data.erp_Orders[0].City} \n                    <span className=\"preorderTitle\">{orderStatus(data.erp_Orders[0])}</span>\n                </Typography>\n\n                {/* ÐÐ¾ÐºÐ°Ð·ÑÐ²Ð°ÑÑ ÐÐ½Ð¾Ð¿ÐºÐ¸ ÑÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ Ð·Ð°ÐºÐ°Ð·Ð° ÑÐ¾Ð»ÑÐºÐ¾ Ð´Ð»Ñ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð½ÑÑ Ð³ÑÑÐ¿Ð¿ ÑÐ·ÐµÑÐ¾Ð² */}\n                { <Box className='orderActions_box noprint'>\n                  {editState && \n                  <Button \n                  variant = \"iconic\" \n                  onClick = {() => setOIDialog(true)}>\n                    <UilPlus/>\n                  </Button>\n                  }\n                  \n                 {[ US.general, US.management , US.bookkeeping ].includes(store.user.AccessLevelID) && \n                  <Button \n                  variant = \"iconic\" \n                  onClick = {() => setEditState(!editState)}>\n                      <UilEditAlt/>\n                  </Button>\n                }\n                  <Button \n                  aria-haspopup = \"true\" \n                  ref           = {OAMenuRef} \n                  variant       = \"iconic\" \n                  onClick       = {() => setOAMenu(true)}>\n                      <UilEllipsisH/>\n                  </Button>\n                </Box>}\n              </div>\n\n              <div className=\"Composition\">  \n                <Composition \n                  data        = {data.erp_Orders[0].OrderItems} \n                  editState   = {editState}\n                  refetch     = {refetch}\n                  OIDialog    = {OIDialog}\n                  setOIDialog = {setOIDialog}\n                  orderID     = {orderID} /> \n              </div>\n\n              <CommentsList \n              orderID = {orderID} \n              user    = {store.user} \n              data    = {data.erp_Orders[0].Comments}/> \n\n              <Docs \n              data      = {data.erp_Orders[0].Docs} \n              onUpload  = {onUploadFiles} \n              editState = {editState} \n              refetch   = {refetch} />\n          </div>\n\n          <div className=\"Info\">\n            { editState? <EditableInfo \n            data      = {data.erp_Orders[0]} \n            orderID   = {orderID} \n            refetch   = {refetch} \n            users     = {users.erp_Users} /> : (\n\n            <Info \n            data      = {data.erp_Orders[0]} \n            editState = {editState} \n            orderID   = {orderID} \n            />\n            )}\n          </div>\n\n          <OrderActionsMenu\n          refetch   = {refetch}\n          order     = {data.erp_Orders[0]}\n          OAMenu    = {OAMenu} \n          setOAMenu = {setOAMenu}\n          OAMenuRef = {OAMenuRef}\n          />\n\n        </section> \n        </>): null }\n    </div>\n    )\n}\n\nexport default OrderLayout","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervals(where: {ent: {_gte: $gte,  _lte: $lte}}) {\n        ent\n        ext\n        card\n        dur\n      }\n    }\n  }\n}  \n`\n\n\n","export function daysInMonth (selectedMonth) {\n    // ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð´Ð½ÐµÐ¹ Ð² ÑÐµÐºÑÑÐµÐ¼ Ð¼ÐµÑÑÑÐµ\n      const [month, year] = selectedMonth\n      return new Date(year, month+1, 0).getDate();\n}\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}\n\nexport function search_alg(user, keyword){\n  if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n  else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n  else return false\n}","export function getIntervalData(day, intervals, timeDeduction){\n\n  // ÐºÐ¾Ð½Ð²ÐµÑÑÐ°ÑÐ¸Ñ float Ð² ÑÐ°ÑÑ Ð¸ Ð¼Ð¸Ð½ÑÑÑ\n  function convertInterval(number, timeDeduction){\n      //Ð²ÑÑÐµÑÐ°ÐµÐ¼ Ð²ÑÐµÐ¼Ñ Ð½Ð° Ð¾Ð±ÐµÐ´\n      number -= timeDeduction/60\n\n      var hour = Math.floor(number);\n      var decpart = number - hour;\n      var min = 1 / 60;\n\n      // Round to nearest minute\n      decpart = min * Math.round(decpart / min);\n      var minute = Math.floor(decpart * 60) + '';\n\n      // Add padding if need\n      if (minute.length < 2) {\n          minute = '0' + minute; \n      }\n\n      return hour + ':' + minute;\n  }\n\n  function getMinutes(t){\n      const minutes = t.getMinutes()\n      return (minutes < 10) ? `0${minutes}` : minutes\n  }\n\n  const e = intervals.find(el =>  new Date(el.ent).getDate() == day)\n\n  if (e) {\n      const _entr = new Date(e.ent)\n      const _exit = new Date(e.ext) || null\n\n      const entrance = _entr.getHours()+':'+ getMinutes(_entr)\n\n      var exit ;\n      var interval;\n\n      if (e.ext) {\n        exit = _exit.getHours()+':'+ getMinutes(_exit);\n        interval = convertInterval(e.dur, timeDeduction)\n\n      }\n\n\n      return [entrance, exit, interval]\n  }   else return [null, null, null]\n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './functions'\nimport sass from './sass/attendance.module.sass'\nimport { getIntervalData } from './getIntervalData'\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  let columnsList = [\n      {\n      Header: 'Ð¡Ð¾ÑÑÑÐ´Ð½Ð¸Ðº',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'ÐÑÐ¾Ð³Ð¾',\n      Cell: row => {\n        var hours = 0;\n        const duration = row.row.original.intervals\n        duration.forEach( interval => {\n          hours += interval.dur \n        });\n\n        //Ð²ÑÑÐµÑÐ°ÐµÐ¼ Ð²ÑÐµÐ¼Ñ Ð½Ð° Ð¾Ð±ÐµÐ´\n        hours -= timeDeduction/60 * duration.length\n\n        return <div>{hours.toFixed(0)}</div>\n      }\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => {\n        const day1 = row.column.Header\n\n        const [ent, ext, dur] = getIntervalData(day1, row.row.original.intervals, timeDeduction)\n        \n        return (\n          <div className={sass.intervalgrid}> \n            <div>{ ent }</div> \n            <div>{ ext }</div>\n            <div className={sass.interval}>{ dur }</div>\n          \n          </div>\n        )\n      }\n    })\n  }\n  return columnsList\n}\n\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nfunction monthAdd(date, month) {\n    // ÑÑÐ½ÐºÑÐ¸Ñ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑÑÑ Ð´Ð»Ñ ÐºÐ¾ÑÑÐµÐºÑÐ½Ð¾Ð³Ð¾ Ð²ÑÑÐ¸ÑÐ°Ð½Ð¸Ñ Ð¼ÐµÑÑÑÐµÐ² Ð² chooseMonth\n    var temp = date;\n    temp = new Date(date.getFullYear(), date.getMonth(), 1);\n    temp.setMonth(temp.getMonth() + (month + 1));\n    temp.setDate(temp.getDate() - 1); \n  \n    if (date.getDate() < temp.getDate()) { \n        temp.setDate(date.getDate()); \n    }\n    return temp;    \n  }\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"ÑÐ½Ð²\", \"ÑÐµÐ²\", \"Ð¼Ð°Ñ\", \"Ð°Ð¿Ñ\", \"Ð¼Ð°Ð¹\", \"Ð¸ÑÐ½\", \"Ð¸ÑÐ»\", \"Ð°Ð²Ð³\", \"ÑÐµÐ½\", \"Ð¾ÐºÑ\", \"Ð½Ð¾Ñ\", \"Ð´ÐµÐº\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i< 6; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div \n                key={suitable}\n                onClick={selectedMonthHandler} \n                className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>Ð¾Ð±ÐµÐ´</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>Ð¼Ð¸Ð½</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>Ð½Ð¾ÑÐ¼Ð°</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>Ñ</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","import  { useMemo, useEffect, useReducer } from 'react'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\nimport Table, { generateColumns } from './table'\nimport { getVarsForSubscription, search_alg } from './functions'\n\nimport './sass/index.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport { UilConstructor } from '@iconscout/react-unicons'\nimport sass from './sass/attendance.module.sass'\nimport TableSearch from '../_core/mui/TableSearch'\nimport { Typography } from '@mui/material'\n\n// ÑÑÐµÑ ÑÐ°Ð±Ð¾ÑÐµÐ³Ð¾ Ð²ÑÐµÐ¼ÐµÐ½Ð¸\nconst Attendance = props => {\n    const date = new Date()\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 's_keyword': \n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [date.getMonth()-1, date.getFullYear()],\n        s_keyword: ''\n    });\n\n    const { timeDeduction, selectedMonth } = state;\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n\n    const { loading, data } = useQuery(GET_USERS, { variables: { gte, lte }, fetchPolicy: 'no-cache' });\n    \n    const onChangeSearch = (e) => {\n      dispatch({ type: 's_keyword', payload: e.target.value.trim() })\n    }\n\n    const columns = useMemo(\n        () => {\n          return generateColumns(selectedMonth, timeDeduction)\n        },\n      [selectedMonth, timeDeduction]\n    )\n\n\n    const searchResult = useMemo(\n      () => {\n        if (loading) return []\n\n        const keyword = state.s_keyword\n        const dt = data?.attendance_users_aggregate?.nodes\n\n        if (keyword){\n          const result = dt.filter((user) => search_alg(user, keyword))\n          return result\n        }\n        else return dt\n      },\n    [state.s_keyword, loading]\n   )\n\n   \n    return(\n    <div>\n            <div className=\"pageLayout__header\">\n                <UilConstructor className='pageLayout__icon'/>\n                <div className='pageLayout__title'>\n                    Ð Ð°Ð±Ð¾ÑÐµÐµ Ð²ÑÐµÐ¼Ñ\n                </div>                    \n            </div> \n\n            <ReportConfigurator \n            state    = {state} \n            dispatch = {dispatch}\n             />\n\n        <div className={sass.tableWrapper}>\n            <TableSearch onChange={onChangeSearch} disableAutoFocus/>            \n\n            { !loading ? \n                <Table \n                columns   = {columns} \n                data      = {searchResult} \n                className = {sass.attendanceTable} /> \n            : <Typography m=\"10px\" variant='subtitle2'>Ð·Ð°Ð³ÑÑÐ·ÐºÐ°..</Typography> }\n\n        </div>\n    </div>\n    )\n}\n\nexport default Attendance","const getItems = (count, offset = 0) =>\n    Array.from({ length: count }, (v, k) => k).map(k => ({\n        id: (k + offset).toString(),\n        content: `item ${k + offset}`\n    }));\n    \nexport const initialState ={\n  //ÐÑÐ¾Ð´ÑÑÐ¸Ðµ\n  inbox: [],\n  // ÐÑÐ¸Ð½ÑÑÐ¸Ðµ ÑÐµÑÐµÐ½Ð¸Ñ\n  decision: [],\n  //Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n  inproduction: []\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n      case 'inbox': \n      case 'decision': \n      case 'inproduction': \n          return {...state, [action.type]: action.payload };\n\n      case 'reset': \n          return initialState\n      default: \n          return {...state}\n  }\n}","import gql from 'graphql-tag'; \n\n// ÐÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð·Ð°ÐºÐ°Ð·Ñ Ð½Ð°ÑÐ¾Ð´ÑÑÐ¸ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð² ÐÑÐµÐ·Ð´Ð°ÐºÐ°Ð·Ð°Ñ Ð¸ Ð² Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ \n//   OrderStatusID \n//     1- ÐÑÐµÐ´Ð·Ð°ÐºÐ°Ð·\n//     2 - Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ\n//     3- ÐÑÐ¿ÑÑÐµÐ½ Ð¸ Ð¾ÑÐ³ÑÑÐ¶ÐµÐ½\n// \n\nexport const SUBSCRIPTION_RECLAMATION_ORDERS = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [10,11,12]} }) {\n      AwaitingDispatch\n      NeedAttention\n      OrderID\n      Entity\n      City\n      OrderStatusID\n      OrderItems(order_by: {OrderItemID: asc}){\n        OrderItemID\n        Name\n      }   \n    }  \n  }\n`\n\nexport const UPDATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $OrderStatusID: Int!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: $OrderStatusID,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;\n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link, useHistory } from 'react-router-dom'\nimport { useReducer } from 'react'\n\n\nimport sass from './index.module.sass'\nimport { Button, Typography, Box } from \"@mui/material\"\n\nimport { UilWrench, UilPlusCircle } from '@iconscout/react-unicons'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { reducer, initialState } from './reducer';\n//apollo\nimport { useSubscription, useMutation } from '@apollo/client'\nimport { \n  SUBSCRIPTION_RECLAMATION_ORDERS, \n  UPDATE_ORDER_STATUS,\n  INSERT_ORDER } from './queries';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return {result, movedObj: removed };\n};\n\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n\n    // change background colour if dragging\n    background: isDragging ? 'var(--accentLight)' : 'transparent',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\n\nconst Reclamation = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { inbox, decision, inproduction } = state;\n  const history = useHistory();\n\n\n  const getState = id => {\n    if (id === 'inbox') return inbox\n    if (id === 'decision') return decision\n    if (id === 'inproduction') return inproduction\n  };\n\n  const columns = [\n    {\n      columnName: 'ÐÑÐ¾Ð´ÑÑÐ¸Ðµ',\n      droppableId: 'inbox',\n      data: inbox,\n      orderStatusID: 10\n    },\n    {\n      columnName: 'ÐÑÐ¸Ð½ÑÑÐ¸Ðµ ÑÐµÑÐµÐ½Ð¸Ñ',\n      droppableId: 'decision',\n      data: decision,\n      orderStatusID: 11\n    },\n    {\n      columnName: 'Ð Ð¿ÑÐ¾Ð¸Ð·Ð²Ð¾Ð´ÑÑÐ²Ðµ',\n      droppableId: 'inproduction',\n      data: inproduction,\n      orderStatusID: 12\n    }\n  ]\n\n  const [mutateOrderStatusID] = useMutation(UPDATE_ORDER_STATUS);\n  const [ insertOrder ] = useMutation(INSERT_ORDER, {variables: {\n    'orderStatusID': columns[0].orderStatusID,\n  }})\n\n  function insertOrderHandler (){\n    insertOrder().then( (res) => {\n        history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n    })\n  }\n\n  const onSubscriptionData = (options) => {\n    const data = options.subscriptionData.data.erp_Orders \n    // Ð´Ð»Ñ dnd Ð½ÐµÐ±ÑÐ¾Ð´Ð¸Ð¼Ð¾ ÑÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÑ id Ð² string\n    data.map( el => {\n      el.id = el.OrderID.toString()\n      return el\n    })\n    columns.forEach(col => {\n      dispatch({\n        type: col.droppableId,\n        payload: data.filter(order => order.OrderStatusID === col.orderStatusID)\n      })\n    })\n  }\n\n  useSubscription(SUBSCRIPTION_RECLAMATION_ORDERS, { onSubscriptionData})\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n        return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n        const items = reorder(\n            getState(source.droppableId),\n            source.index,\n            destination.index\n        );\n\n        dispatch({ type: source.droppableId, payload: items })\n    } else {\n      //Ð¾ÑÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ Ð¿ÑÐ¸ Ð¿ÐµÑÐµÐ¼ÐµÑÐ¸Ð½Ð¸Ð¸ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ° Ð² Ð´ÑÑÐ³Ð¾Ð¹ ÑÑÐ¾Ð»Ð±Ð¸Ðº\n        const {result, movedObj } = move(\n            getState(source.droppableId),\n            getState(destination.droppableId),\n            source,\n            destination\n        );\n        Object.entries(result).map( el => {\n          if (el[0] === el[0]) dispatch({ type: el[0], payload: el[1] })\n        } )\n        mutateOrderStatusID({\n          variables: {\n            OrderID: movedObj.OrderID, \n            OrderStatusID: columns.find(col => col.droppableId === destination.droppableId).orderStatusID\n          }\n        })\n    }\n};\n\n  function getOrderStatus(order){\n    if (order.NeedAttention && order.NeedAttention.split(',')[0] === 'true' ) return sass.needAttention\n    if (order.AwaitingDispatch) return sass.awaitingDispatch\n  }\n\n  function getOrderUnit(order){\n      if (order.OrderItems.length === 0) return <Link to={`/orders/${order.OrderID}`} className={sass.item} ><div>ÐÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ð¼Ð¾Ð³Ð¾</div></Link>\n\n      else return (\n      <Link to={`/orders/${order.OrderID}`} className={`${sass.item} ${getOrderStatus(order)}`}>\n        <div className={sass.items}>\n          {order.OrderItems.map(item => (\n            <div key={item.OrderItemID} className={sass.orderItem}>\n              {item.Name}\n            </div>\n          ))}\n        </div>\n        <div>{order.Entity}</div>\n        <div>{order.City}</div>\n      </Link>)\n  }\n\n  return(\n    <div className={sass.reclatationLayout}>\n      \n      <div className='pageLayout__header'>\n        <UilWrench className='pageLayout__icon'/>\n        <div className=\"pageLayout__title\">Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ</div>\n\n        <div className='pageLayout__actions'>\n          <Button variant='iconic' onClick={insertOrderHandler}>\n            <UilPlusCircle/>\n          </Button>\n        </div>\n      </div>\n\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Box className={sass.columnWrapper}>\n\n        {columns.map( e => (<div key={e.columnName} className={sass.reclColumn}>\n          <Typography className={sass.heading}>{e.columnName}</Typography>\n          <Droppable droppableId={e.droppableId} >\n          {(provided, snapshot) => (\n              <div\n                  ref={provided.innerRef}\n                  className={sass.draggableWrapper}>\n                  {e.data.map((item, index) => (\n                      <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}>\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}   \n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  style={getItemStyle(\n                                      snapshot.isDragging,\n                                      provided.draggableProps.style\n                                  )}>\n                                    {getOrderUnit(item)}\n                              </div>\n                          )}\n                      </Draggable>\n                  ))}\n                  {provided.placeholder}\n              </div>\n          )}\n          </Droppable>\n        </div>))}\n        \n        </Box>\n      </DragDropContext>\n    </div>\n  )\n}\nexport default Reclamation","import {Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport LoginForm from '../components/LoginForm';\nimport OrderListLayout from \"../components/OrderListLayout\";\nimport OrderLayout from \"../components/OrderLayout\";\nimport Attendance from '../components/AttendanceLayout'\nimport Reclamation from \"../components/ReclamationLayout\";\n\nconst AppRouter = () => {\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/reclamation' component={Reclamation}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            #if required route was not found\n            <Redirect     to=\"/\" />\n        </Switch>\n    )\n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\nconst BaseLayout = (props) => {\n    return(\n        <div className=\"base-container\">\n                <AppRouter/> \n                {props.children}\n        </div>\n    )\n}   \n\nexport default BaseLayout;","import Drawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\n\nconst CustomDrawer = props => {\n  const { icon, children, width = 400, state, toggleDrawer } = props\n \n  return(<>\n    <div onClick={toggleDrawer(true)}>\n      {icon}\n    </div>\n\n    <Drawer\n    open={state}\n    onClose={toggleDrawer(false)}\n    >\n      <Box\n      sx={{ width: width }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n      >\n        {children}\n      </Box>\n    </Drawer>\n  </>)\n}\n\nexport default CustomDrawer;","import gql from 'graphql-tag'; \n\nexport const GET_NOTIFICATIONS = gql`\nsubscription MyQuery($_eq: Int!, $limit: Int) {\n  erp_Notifications(where: {MentionedUser: {_eq: $_eq}}, limit: $limit, order_by: {ID: desc} ) {\n    ID\n    Viewed\n    Comment {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n    Order {\n      OrderID\n      City\n      Entity\n    }\n  }\n}\n`\nexport const UPDATE_VIEWED = gql`\nmutation($ID: Int!, $Viewed: Boolean!) {\n  update_erp_Notifications_by_pk(pk_columns: {ID: $ID}, _set: {Viewed: $Viewed}){\n    ID\n    Viewed\n  }\n}\n`\n\n","import { useContext, useState } from 'react'\nimport { Context } from \"../../../\";\nimport { Link } from 'react-router-dom'\n\nimport CustomDrawer from '../../_core/mui/CustomDrawer'\nimport Box from '@mui/material/Box'\nimport Badge from '@mui/material/Badge'\n\n\nimport { UilBell } from '@iconscout/react-unicons'\n\nimport { useMutation, useSubscription } from '@apollo/client'\nimport { GET_NOTIFICATIONS, UPDATE_VIEWED } from './getNotifications'\nimport sass from './index.module.sass'\nimport moment from 'moment'\nimport { Typography } from '@mui/material'\n\nconst NotificationCenter = props => {\n  const { store } = useContext(Context)\n  const [notifications, setNotifications] = useState();\n\n  const [ updateViewedMutration ] = useMutation(UPDATE_VIEWED)\n  function onSubscriptionData(options){\n    const data = options.subscriptionData.data.erp_Notifications\n    setNotifications({\n      unviewed: data.filter(e => !e.Viewed),\n      viewed: data.filter(e => e.Viewed)\n    })\n  }\n  const { data, loading } = useSubscription(GET_NOTIFICATIONS, { onSubscriptionData, variables: {\n    _eq: store.user.UserID,\n    limit: 100\n  }})\n  const [state, setState] = useState(false)\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open)\n  }\n\n  function jumpToOrderHandler(ID){\n    setState(false);\n    updateViewedMutration({ variables: { ID, Viewed: true } })\n  }\n \n  const unviewedCounter = () => {\n    var a=0;\n    data?.erp_Notifications?.forEach(e => {\n      if (!e.Viewed) a+=1\n    });\n    return a\n  }\n  \n  const notificationUnit = (e) => (\n    <Box\n    className={sass.notificationUnit}\n    key={e.ID}>\n      <div className={sass.notificationHeader}>\n        <Typography className={sass.item1}>{e.Comment.User.FirstName} {e.Comment.User.LastName}</Typography>\n        <Typography variant='subtitle2' className={sass.item2}>{moment(e.Comment.Timestamp).format('DD MMM H:mm')}</Typography>\n        <Typography variant='subtitle2' className={sass.item3}>{e.Order.Entity}__{e.Order.City}</Typography>\n      </div>\n      <Link \n      to={`/orders/${e.Order.OrderID}`} \n      onClick={() => jumpToOrderHandler(e.ID)}\n      style={{ textDecoration: 'none', color: 'var(--highContrast)'}}>\n        <div \n        className={sass.commentContent}\n        dangerouslySetInnerHTML={{ __html: e.Comment.Text }}\n        >\n        </div>\n      </Link>\n    </Box>\n  )\n\n  return (\n    <CustomDrawer icon={ \n      <Badge badgeContent={unviewedCounter()} color=\"secondary\">\n        <UilBell/>\n      </Badge>\n    } width={500} state={state} toggleDrawer={toggleDrawer}>\n      <Box className={sass.wrapper}>\n        <Typography variant='subtitle3'>Ð£Ð²ÐµÐ´Ð¾Ð¼Ð»ÐµÐ½Ð¸Ñ</Typography>\n        \n         {/* unreaderd notifs */}\n        { notifications?.unviewed.length ?\n          <Box className={sass.unreadedWrapper}> \n            <Typography variant='subtitle3'>ÐÐµÐ¿ÑÐ¾ÑÐ¼Ð¾ÑÑÐµÐ½Ð½ÑÐµ </Typography>\n            {!loading && notifications?.unviewed.map(e => notificationUnit(e) )}\n          </Box>\n        : null}\n\n        {!loading && notifications?.viewed.map( e => notificationUnit(e) )}\n\n      </Box>\n    </CustomDrawer>\n  )\n}\nexport default NotificationCenter","import { useEffect } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DARK_CLASS = \"dark\";\n\nexport function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n    else return 'light'\n}\n\nexport const SystemPreferTheme = (appTheme, setAppTheme) => {\n    // theme can will be dark, light or system (used for corrent displaying selected theme in preferences)\n    // mode can be only dark or light (used for material ui pallete)\n    const systemPrefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\"}, undefined);\n    var mode = appTheme\n\n    function changeTheme(newTheme){\n        var expires = new Date()\n        expires.setFullYear(expires.getFullYear()+1)\n        document.cookie = `theme=${newTheme}; expires=${expires}; path=/`\n        setAppTheme(newTheme)\n    }\n\n    useEffect(() => {\n      if (appTheme === 'dark') document.documentElement.classList.add(DARK_CLASS)\n      else if (appTheme === 'light') document.documentElement.classList.remove(DARK_CLASS)\n\n      else if (appTheme === 'system'){\n        if (systemPrefersDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n      };\n    }, [appTheme, systemPrefersDark]);\n\n    if (appTheme === 'system'){\n      if (systemPrefersDark) mode = 'dark'\n      else mode = 'light'\n    }\n    return {appTheme, mode, changeTheme}\n};\n","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../../../index';\nimport { useHistory } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { styled } from '@mui/material/styles';\n\nimport { UilSun, UilMoon, UilDesktop, UilSetting } from '@iconscout/react-unicons'\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material/';\n\nimport sass from './index.module.sass'\nimport { SystemPreferTheme } from '../../_core/SystemPreferTheme';\n\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    border: '1px solid var(--border)',\n    padding: 8,\n    textTransform: 'none',\n    '&:not(:first-of-type)': {\n\n    },\n    '&:first-of-type': {\n      borderTopLeftRadius: 'var(--br)',\n      borderBottomLeftRadius: 'var(--br)',\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 'var(--br)',\n      borderBottomRightRadius: 'var(--br)',\n    },\n  },\n}));\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function SettingsDrawer() {\n  const {store} = useContext(Context);\n  const [state, setState] = useState(false);\n  const history = useHistory()\n  const {changeTheme} = SystemPreferTheme(store.UItheme.state, store.UItheme.dispatch)\n\n  async function logout(){\n    await store.logout(); \n    history.push('/login')\n  }\n\n  const themeHandler = (e, newTheme) => {\n    changeTheme(newTheme)\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open);\n  };\n  \n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 400 }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n    >\n\n      <List>\n        <ListItem className={sass.user}>\n        <div>ÐÐ¾Ð±ÑÐ¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°ÑÑ, {store.user.FirstName} {store.user.LastName}!</div>\n        </ListItem>\n\n        <ListItem >\n          <StyledToggleButtonGroup\n            className={sass.themeToggleButtons}\n            color=\"primary\"\n            value={getCookie('theme')}\n            exclusive\n            fullWidth\n            onChange={themeHandler}\n            >\n            <ToggleButton value=\"light\"> <UilSun/> Light</ToggleButton>\n            <ToggleButton value=\"system\"> <UilDesktop/>System</ToggleButton>\n            <ToggleButton value=\"dark\"> <UilMoon/> Dark</ToggleButton>\n          </StyledToggleButtonGroup>\n        </ListItem>\n\n      </List>\n      \n      <div className={sass.logoutButton}>\n        <button onClick={logout}>ÐÑÐ¹ÑÐ¸</button>\n      </div>\n    </Box>\n  );\n\n  return (\n    <div>\n          <div onClick={toggleDrawer(true)}>\n            <UilSetting/>\n          </div>\n          <Drawer\n            open={state}\n            onClose={toggleDrawer(false)}\n          >\n            {list('left')}\n          </Drawer>\n    </div>\n  );\n}","import { NavLink} from 'react-router-dom';\nimport './index.sass';\n\nimport { UilSortAmountDown, UilWrench, UilConstructor, UilBell} from '@iconscout/react-unicons';\nimport NotificationCenter from './NotificationCenter';\nimport SettingsDrawer from './SettingsDrawer/SettingsDrawer';\n\nconst Sidebar = () => {\n\n  function wrap(icon){ \n    return <div className='iconWrapper'>{icon}</div>\n  }\n\n  return(\n    <div className='Sidebar'>\n      <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"link\">{wrap(<UilSortAmountDown/>)}</NavLink>\n      <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"link\">{wrap(<UilWrench/>)}</NavLink>\n      <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"link\">{wrap(<UilConstructor/>)}</NavLink>\n      \n      <div className=\"link marginTopAuto\">\n          {wrap(<NotificationCenter/>)}\n      </div>\n\n      <div className=\"link\">\n          {wrap(<SettingsDrawer/>)}\n      </div>\n\n    </div>\n  );\n}\n\nexport default Sidebar;","import { useContext, useState, useMemo } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\n\n\nimport {getCookie, SystemPreferTheme} from './components/_core/SystemPreferTheme'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { muicomponents } from './materialStyles'\nimport { normalizeUnits } from 'moment';\n\nfunction App() {  \n  const { store } = useContext(Context);\n  const [appTheme, setAppTheme] = useState(() => getCookie('theme'))\n  store.setUItheme(appTheme, setAppTheme)\n  const { mode } = SystemPreferTheme(appTheme, setAppTheme)\n  \n  const getDesignTokens = (mode) => ({\n    palette: {\n      mode,\n      ...(mode === 'light'\n        ? {\n            // palette values for light mode\n            primary: {\n              main: '#3763FE',\n              light: '#E7E9FB',\n            },\n            secondary: {\n              main: '#e5534b',\n            }\n          }\n        : {\n            // palette values for dark mode\n            primary: {\n              main: '#99affc',\n              light: '#43435c',\n            },\n            secondary: {\n              main: '#e5534b',\n            },\n           \n          }),\n    },\n    typography: {\n      fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',sans-serif`,\n      subtitle1: {\n        fontSize: '.7rem',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n        letterSpacing: '.5px',\n        color: 'var(--accent) !important',\n      },\n      subtitle2: {\n        fontSize: '.8rem',\n        fontWeight: 'normal',\n        color: 'var(--lowContrast) !important',\n      },\n      subtitle3: {\n        fontSize: '.9rem',\n        fontWeight: '600',\n        color: '#9e9e9e !important',\n      }\n    },\n  });\n\n  var theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  theme = createTheme(theme, muicomponents(theme));\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        \n        { store.inMemoryToken && <Sidebar/> }\n          <BaseLayout/>\n        \n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default observer(App);\n","export const muicomponents = (theme) => ({\n  components: {\n    MuiDialog: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0) !important',\n          borderRadius: 'var(--br) !important',\n        }\n      }\n    },\n    MuiDialogTitle: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n        }\n      }\n    },\n    MuiMenu: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0) !important',\n          boxShadow: '0 10px 50px 0 var(--bs) !important',\n          borderRadius: 'var(--br)',\n        }\n      }\n    },\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          padding: '4px 15px !important'\n        }\n      },\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          fontSize: '.8rem'\n        }\n      }\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          minWidth: '25px !important',\n          'svg':{\n            width: '17px'\n          }\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          textTransform: 'none !important',\n        },\n        textInfo: {\n          color: 'var(--lowContrast) !important',\n        },\n        iconic: {\n          minWidth: '10px',\n          minHeight: '10px',\n          padding: '4px 6px',\n          'svg':{\n            width: 20\n          },\n          'path': {\n            color: theme.palette.text.secondary,\n            strokeWidth: .4,\n            stroke: 'var(--L0)'\n          },\n          '&:hover': {\n            background: 'var(--accentLight)',\n          }\n        }\n      },\n      defaultProps: {\n        disableElevation: true,\n        disableRipple: true,\n      },\n    },\n    MuiToggleButton: {\n      defaultProps: {\n        disableRipple: true,\n      }\n    },\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n        autoComplete: 'off',\n      }\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          color: 'var(--lowContrast) !important',\n        },\n        filter: {\n          fontSize: '.8rem',\n          transform: 'none',\n          position: 'relative',\n        }\n      },\n      defaultProps: {\n        shrink: true,\n      }\n    },\n    MuiFilledInput: {\n      defaultProps: {\n        disableUnderline: 'true',\n        size: 'small',\n      },\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          border: '1px solid var(--borderLight)',\n          borderRadius: '10px',\n          ':hover': {\n            background: 'var(--L1)',\n          },\n        },\n\n      }\n    },\n    MuiInput: {\n      defaultProps: {\n        disableUnderline: 'true'\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          color: 'var(--highContrast) !important',\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          border: 'none',\n        }\n      }\n    },\n    MuiPopover: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0)',\n          borderRadius: 'var(--br) !important'\n        }\n      }\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          fontSize: '.8rem',\n          boxSizing: 'border-box',\n          border: 'none !important',\n          outline: 'none !important',\n          boxShadow: 'none !important',\n          padding: 0,\n        }\n      }\n    },\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiCheckbox: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0)'\n        }\n      }\n    }\n  },\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/s3/upload'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n// $api.interceptors.request.use( (config) => {\n//     config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n//     return config;\n// })\n// $api.interceptors.response.use( (config) => {\n//     return config;\n// }, async (error) => {\n//     const originalRequest = error.config;\n//     if(error.response.status === 401 && error.config && !error.config._isRetry){\n//         originalRequest._isRetry = true;\n//         try {\n//             const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n//             localStorage.setItem('token', response.data.accessToken);\n//             return $api.request(originalRequest);\n//         } catch (e) {\n//             console.log('ÐÐ²ÑÐ¾ÑÐ¸Ð·Ð°ÑÐ¸Ñ Ð½Ðµ Ð¿ÑÐ¾ÑÐ»Ð°. ÐÐ¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÑÐ½Ð¾Ð²Ð°');\n//         }\n//     }\n       \n// })\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  { email, password })\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isLoading = false;\n    UItheme = {\n        state: null,\n        dispatch: null\n    };\n    inMemoryToken = undefined;\n\n    priorityTab = 1;\n    cachedOrders = [];\n    cachedPreOrders = [];\n    \n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setCachedOrders(array){\n        this.cachedOrders = array\n    }\n    setCachedPreOrders(array){\n        this.cachedPreOrders = array\n    }\n    setUItheme(state, dispatch){\n        this.UItheme = { state, dispatch }\n    }\n    async login(email, password){\n        try {\n            const res = await AuthService.login(email, password)\n            if (res.status === 200){\n              this.setInMemoryToken(res.data.accessToken)\n              this.setUser(res.data.user);\n              return res\n            }\n            \n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            this.setInMemoryToken(null)\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return await axios.get(`${API_URL}/refresh`, { withCredentials: true }).then(\n            (r) => {\n                if (r.status !== 200) new Error('Invalid response while trying to get new access token')\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    \n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            await axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n              (res) => {\n                if (res.status === 200){\n                  this.setUser(res.data.user);\n                  this.setInMemoryToken(res.data.accessToken)      \n                }\n              }\n            )\n        } catch (e) {\n            console.log(e)\n        } finally {\n            this.setLoading(false);\n            return this.inMemoryToken\n        }\n    }\n\n    async uploadFile(acceptedFiles){\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/s3/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            }\n          });\n        return res\n    }\n\n    async downloadFile(file){\n        await fetch(`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`)\n    }\n\n    async deleteFile(key, deleteFileMutation){\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/s3/delete/${key}`);\n\n        if (res.status === 200){\n            const hasuraRes = await deleteFileMutation({variables: {\n                'key': key,\n            }})\n            console.log(hasuraRes.data)\n        }\n    }\n\n    pageParams = [\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Ð ÐµÐºÐ»Ð°Ð¼Ð°ÑÐ¸Ñ',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Ð Ð°Ð±Ð¾ÑÐµÐµ Ð²ÑÐµÐ¼Ñ',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n}\n","import { onError } from '@apollo/client/link/error';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { RetryLink } from \"@apollo/client/link/retry\";\n\nimport { getInMemoryToken, getNewInMemoryToken } from '../../index'\n\nconst ws_protocol = process.env.REACT_APP_NODE_ENV === 'development' ? 'ws://' : 'wss://'\n\nexport const wsRetryLink = new RetryLink({\n  delay: {\n    initial: 300,\n    max: Infinity,\n    jitter: true\n  },\n  attempts: {\n    max: 100,\n    retryIf: (error, _operation) => !!error\n  }\n});\n\nexport const wsErrorLink = onError( ({ graphQLErrors, networkError, operation, forward}) => {\n  // Error when jwt token expired\n  if (networkError) {\n    console.log('[Network error]: ', networkError);\n    // if (networkError.extensions.code === 'start-failed'){\n\n    // }\n  }\n\n  if (graphQLErrors)\n    graphQLErrors.forEach(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    );\n});\n\nexport const webSocketLink = new WebSocketLink({\n  uri: ws_protocol + process.env.REACT_APP_HASURA_ENDPOINT,\n  // https://github.com/apollographql/subscriptions-transport-ws/issues/171\n  options: {\n    reconnect: true,\n    lazy: true,\n    // reconnectionAttempts: 5,\n    // inactivityTimeout: 10000000,\n    connectionParams: () => ({\n      headers: {\n        'authorization' : `Bearer ${getInMemoryToken()}`\n      }\n    }),\n    \n  }\n})\n\nwebSocketLink.subscriptionClient.onReconnecting(() => {\n  getNewInMemoryToken().then(\n    newToken => {\n      reinitWSConnection(newToken)\n      console.log('Reiniting websocket connection, probably, because jwt token was expired')\n\n    }\n  );\n})\n\nfunction reinitWSConnection(newToken) {\n  webSocketLink.subscriptionClient.connectionParams.headers = {\n    'authorization': `Bearer ${newToken}`\n  };\n  webSocketLink.subscriptionClient.close(true);\n  webSocketLink.subscriptionClient.connect();\n}\n","import { onError } from '@apollo/client/link/error';\nimport { setContext } from \"@apollo/client/link/context\";\nimport { HttpLink, Observable } from \"@apollo/client\";\n\nimport { getInMemoryToken, getNewInMemoryToken } from '../../index'\n\nconst http_protocol = process.env.REACT_APP_NODE_ENV === 'development' ? 'http://' : 'https://'\n\n\nexport const httpErrorLink = onError( ({ graphQLErrors, networkError, operation, forward }) => {\n\n  return new Observable(observer => {\n    getNewInMemoryToken()\n      .then(newToken => {\n        operation.setContext(({ headers = {} }) => ({\n          headers: {\n            // Re-add old headers\n            ...headers,\n            // Switch out old access token for new one\n            Authorization: `Bearer ${newToken}` || null,\n          }\n        }));\n      })\n      .then(() => {\n        const subscriber = {\n          next: observer.next.bind(observer),\n          error: observer.error.bind(observer),\n          complete: observer.complete.bind(observer)\n        };\n        // Retry last failed request\n        forward(operation).subscribe(subscriber);\n      })\n      .catch(error => {\n        // No refresh or client token available, we force user to login\n        observer.error(error);\n      });\n  });\n}\n)\n\nexport const httpAuthLink = setContext((_, { headers }) => ({\n    headers: {\n      ...headers,\n      Authorization: getInMemoryToken() ? `Bearer ${getInMemoryToken()}` : \"\",\n    }\n  }));\n\n\nexport const httpLink = new HttpLink({\n    uri: http_protocol + process.env.REACT_APP_HASURA_ENDPOINT\n  });\n  \n\n","import {\n  ApolloClient,\n  InMemoryCache,\n  from,\n} from \"@apollo/client\";\nimport { split } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\n\nimport { wsRetryLink, wsErrorLink, webSocketLink } from './wsLinks';\nimport { httpErrorLink, httpAuthLink, httpLink } from './httpLinks';\n\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  from([ wsRetryLink, wsErrorLink, webSocketLink ]),\n  from([ httpErrorLink, httpAuthLink, httpLink ]),\n);\n\nexport const apolloClient = new ApolloClient({\n  link:  splitLink,\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n        erp_CheckListUnits: {\n          keyFields: ['CheckListUnitID']\n        },\n        erp_Comments: {\n          keyFields: ['CommentID']\n        }\n    },\n  })\n})\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\n\n\nimport { ApolloProvider } from \"@apollo/client\";\nimport { apolloClient } from './http/apollo/apolloClient';\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\nexport function getInMemoryToken(){\n  return store.inMemoryToken\n}\nexport async function getNewInMemoryToken(){\n  const token = await store.getNewToken()\n  return token\n}\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsListWrapper\":\"Comments_commentsListWrapper__25Ylk\",\"commentListThread\":\"Comments_commentListThread__2VjRS\",\"commentInputForm\":\"Comments_commentInputForm__2W6Of\",\"checklistUnit\":\"Comments_checklistUnit__2rS_e\",\"checklistUnit_complited\":\"Comments_checklistUnit_complited__1J6jW\",\"mentionedUserHiglight\":\"Comments_mentionedUserHiglight__MWwVB\",\"saveButton\":\"Comments_saveButton__FkrZB\",\"commentUnit\":\"Comments_commentUnit__1L_o5\",\"actions\":\"Comments_actions__2pxUd\",\"commentContent\":\"Comments_commentContent__EsGgq\",\"commentHeader\":\"Comments_commentHeader__3aEgO\",\"sender\":\"Comments_sender__3ld3S\",\"time\":\"Comments_time__2egg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"main_tableRow__16MTc\",\"tableWrapper\":\"main_tableWrapper__3lHmG\",\"tableFooter\":\"main_tableFooter__1Egk2\",\"tableMain\":\"main_tableMain__GJwKh\",\"awaitingDispatch\":\"main_awaitingDispatch__ZF9uh\",\"needAttention\":\"main_needAttention__io1X5\",\"unpaidOrder\":\"main_unpaidOrder__22HJx\",\"customerTableInfo\":\"main_customerTableInfo__JKJM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reclatationLayout\":\"ReclamationLayout_reclatationLayout__FiTwi\",\"columnWrapper\":\"ReclamationLayout_columnWrapper__1SCgf\",\"reclColumn\":\"ReclamationLayout_reclColumn__2kHvs\",\"draggableWrapper\":\"ReclamationLayout_draggableWrapper__10OPa\",\"heading\":\"ReclamationLayout_heading__1S6l3\",\"item\":\"ReclamationLayout_item__2uY2m\",\"orderItem\":\"ReclamationLayout_orderItem__3U0kY\",\"needAttention\":\"ReclamationLayout_needAttention__2S9H-\",\"awaitingDispatch\":\"ReclamationLayout_awaitingDispatch__GUQT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__1O75u\",\"quantity\":\"composition_quantity__2YtVw\",\"unitName\":\"composition_unitName__3YGne\",\"addOrderItem\":\"composition_addOrderItem__2AnFf\",\"quantityInput\":\"composition_quantityInput__2zcBe\",\"Unit\":\"composition_Unit__2Fqng\",\"index\":\"composition_index__2aXz6\",\"fullName\":\"composition_fullName__NObJ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotificationCenter_wrapper__2ZNFd\",\"notificationUnit\":\"NotificationCenter_notificationUnit__Wu0MX\",\"unreadedWrapper\":\"NotificationCenter_unreadedWrapper__GTWeM\",\"notificationHeader\":\"NotificationCenter_notificationHeader__1deII\",\"item1\":\"NotificationCenter_item1__3mfID\",\"item2\":\"NotificationCenter_item2__2wKoS\",\"item3\":\"NotificationCenter_item3__gCbUg\",\"commentContent\":\"NotificationCenter_commentContent__1bz-4\"};"],"sourceRoot":""}