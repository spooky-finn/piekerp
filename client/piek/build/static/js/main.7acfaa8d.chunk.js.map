{"version":3,"sources":["components/OrderListLayout/Search/search.module.sass","components/OrderLayout/OrderItemActions/index.module.sass","components/OrderListLayout/Archive/archive.module.sass","components/Sidebar/SettingsDrawer/index.module.sass","components/OrderListLayout/Recently/recently.module.sass","components/OrderListLayout/PreOrders/preorders.module.sass","components/ReclamationLayout/index.module.sass","components/OrderLayout/Comments/index.module.sass","routers/PrivateRoute.js","components/LoginForm/index.js","components/_core/notification.js","components/OrderListLayout/reducer.js","components/OrderListLayout/queries/getOrders.js","hasura-queries/getUsers.js","components/OrderListLayout/queries/MutationInsertOrder.js","components/OrderListLayout/UniversalTable/columnList.js","components/OrderListLayout/UniversalTable/TableMarkup.jsx","components/OrderListLayout/Search/index.js","components/OrderListLayout/Search/filter.js","components/OrderListLayout/PreOrders/MutationOrderStatus.js","components/OrderListLayout/PreOrders/index.js","components/OrderListLayout/Priority/index.js","components/OrderListLayout/Recently/index.jsx","components/OrderListLayout/Recently/spreadOrders.js","components/OrderListLayout/Archive/queries/getArchivedSearchOrders.js","components/OrderListLayout/Archive/TableMarkup.jsx","components/OrderListLayout/Archive/queries/getAllOrdersAmount.js","components/OrderListLayout/Archive/queries/getArchivedLatestOrders.js","components/OrderListLayout/Archive/queries/getArchivedUnpaidOrders.js","components/OrderListLayout/Archive/PreviewTable.jsx","components/OrderListLayout/Archive/index.jsx","components/OrderListLayout/index.jsx","components/OrderLayout/queries/GetOrderByID.js","components/OrderLayout/queries/MutationOrderDocs.js","components/OrderLayout/queries/MutationOrderItem.js","components/OrderLayout/OrderItemActions/index.jsx","components/OrderLayout/Composition.jsx","components/OrderLayout/Info.jsx","components/OrderLayout/queries/MutationOrderInfo.js","components/OrderLayout/queries/MutationPaymentHistory.js","components/OrderLayout/EditableComponents/EditableInfo.jsx","components/OrderLayout/Docs/ConfirmDialog.jsx","components/OrderLayout/Docs/Docs.jsx","components/OrderLayout/queries/MutationOrderCommnets.js","components/OrderLayout/queries/SubscriptionComments.js","components/OrderLayout/Comments/Comment.jsx","components/OrderLayout/Comments/СommandsPopover.jsx","components/OrderLayout/Comments/CommentsList.jsx","components/OrderLayout/Dropzone.js","components/OrderLayout/queries/MutationDeleteOrder.js","components/OrderLayout/OrderActions/DeleteOrderConfirmDialog.jsx","components/OrderLayout/OrderActions/OrderActionsMenu.jsx","components/OrderLayout/index.jsx","components/AttendanceLayout/queries/getUsers.js","components/AttendanceLayout/functions.js","components/AttendanceLayout/table.js","components/AttendanceLayout/ReportConfigurator.jsx","components/AttendanceLayout/index.js","components/ReclamationLayout/index.js","routers/Router.js","components/BaseLayout/index.js","components/_core/SystemPreferTheme.js","components/Sidebar/SettingsDrawer/SettingsDrawer.jsx","components/Sidebar/Sidebar.js","App.js","materialStyles.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","index.js","components/OrderListLayout/main.module.sass","components/OrderLayout/sass/composition.module.sass","components/AttendanceLayout/attendance.module.sass"],"names":["module","exports","PrivateRoute","Component","component","rest","store","useContext","Context","useState","isLoaded","setisLoaded","inMemoryToken","token","setToken","a","checkAuth","then","res","useEffect","getToken","render","props","to","LoginForm","email","setEmail","password","setPassword","history","useHistory","login","status","push","console","error","type","title","message","addNotification","insert","container","dismiss","duration","className","TextField","label","onChange","e","target","value","trim","Button","variant","width","onClick","reducer","state","action","payload","searchKeyword","managerFilter","GetOrdersSubscription","gql","GET_USERS","INSERT_ORDER","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","OrderID","map","item","Name","OrderItemID","Quantity","order","ShippingDate","moment","format","sass","customerTableInfo","Entity","City","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","mainsass","tableMain","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","row","original","NeedAttention","needAttention","AwaitingDispatch","awaitingDispatch","getRowProps","cells","cell","getCellProps","Search","dispatch","users","tableSearchInput","placeholder","autoFocus","defaultValue","filter","filterPlaceholder","FormControl","Select","name","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","filteringAlg","keyword","finded","arg","toLowerCase","includes","array","result","newOrders","ord","ManagerID","MUTATE_ORDER_STATUS","PreOrders","preOrders","useMutation","mutationOrderStatus","onClickTransfer","splice","indexOf","variables","AcceptanceDate","Date","toLocaleString","timeZone","newColumnList","filtredData","tableWrapper","preOrdersTableWrapper","Priority","useMemo","sortedData","orders","sort","b","AccessLevelID","Recently","spreadData","days","subtract","dateCreation","split","date","objs","spread","Typography","color","m","recentlyTable","GET_ARCHIVED_SEARCH_ORDERS","unpaidOrder","unpaid","GET_ALL_ORDERS_AMOUNT","GET_ARCHIVED_LATEST_ORDERS","GET_ARCHIVED_UNPAID_ORDERS","PreviewTable","archiveColumns","ActualShippingDate","useQuery","limit","latestOrders","loading","onCompleted","erp_Orders","unpaidIDs","unpaidOrders","archiveTable","Archive","useReducer","InputBase","inputWrapper","setTimeout","StyledTabs","styled","Tabs","theme","margin","display","StyledTab","Tab","textTransform","fontWeight","palette","text","secondary","fontSize","typography","pxToRem","marginRight","spacing","borderBottomRightRadius","borderBottomLeftRadius","border","backgroundColor","primary","OrderListLayout","selectedTab","cachedOrders","cachedPreOrders","initialState","priorityTab","useSubscription","onSubscriptionData","options","subscriptionData","forEach","OrderStatus","ID","setCachedOrders","setCachedPreOrders","fetchPolicy","nextFetchPolicy","createNewOrder","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","a11yProps","event","newValue","setPriorutyTab","aria-label","insert_erp_Orders","returning","sx","marginLeft","erp_Users","GET_ORDER_BY_ID","PUSH_DOCS_ARRAY","DELETE_ORDER_FILE","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","UPDATE_ORDER_ITEM","UPDATE_ORDER_ITEM_METADATA","OrderItemActions","editState","editItemHandler","deleteItemHandler","updateItem","setOIDialog","anchorEl","setAnchorEl","SerialNumber","Fitter","setState","handleClose","serialNumber","fitter","toString","aria-controls","aria-haspopup","currentTarget","size","moreVertIcon","Menu","keepMounted","open","Boolean","onClose","inputListItem","multiline","prevState","actionsWrapper","deleteButton","fullName","quantity","OrderComposition","refetch","orderID","OIDialog","deleteOrderItemMutation","insertOrderItemMutation","updateOrderItemMutation","updateOrderItemMetadataMutation","itemID","orderItemID","FullName","closeOIDialog","insertOrderItem","parseInt","el","Unit","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","addOrderItem","mb","fullNameInput","quantityInput","DialogActions","justifyContent","OrderInfoCard","heading","secondaryHeading","Pre","OrderMeta","OrderNumber","Comment","CreatingDate","aboutOrder","PaymentHistories","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","UPDATE_NEED_ATTENTION","MOVE_ORDER_TO_ARCHIVE","MOVE_ORDER_TO_PRIORITY","INSERT_PAYMENT","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","insertPayment","log","InputProps","inputComponent","Autocomplete","getOptionLabel","option","renderInput","params","managerID","find","findSelectedManeger","ConfirmDialog","filename","onConfirmF","minWidth","aria-describedby","DialogContentText","Docs","onUpload","setOpen","fileOnDelete","setFileOnDelete","deleteFileMutation","deleteFile","Key","attachedFiles","file","handleClickOpen","FileName","href","process","rel","files","path","onUploadFiles","INSERT_ORDER_COMMENT","DELETE_ORDER_COMMENT","UPDATE_ORDER_COMMENT","SUBSCRIBTION_ORDER_COMMENT","userID","updateComment","deleteComment","nowEditing","setNowEditing","commentUnit","commentHeader","sender","actions","CommentID","time","Timestamp","timestamp","contentEditable","commentContent","suppressContentEditableWarning","onBlur","innerHTML","onMouseLeave","dangerouslySetInnerHTML","__html","Text","СommandsPopover","elevation","padding","s","checklistUnit","ReactDOM","current","insertTodoinDOM","CommentsList","insertOrderCommentMutation","updateOrderCommentMutation","deleteOrderCommentMutation","useRef","comments","newText","switchTodo","classList","toggle","checklistUnit_complited","els","document","querySelectorAll","addEventListener","once","removeEventListener","commentsListWrapper","commentInputForm","ref","data-ph","onInput","innerText","saveButton","erp_Comments","comment","isFileOnDropzone","isDragActive","getElementById","add","remove","DELETE_ORDER","DeleteOrderConfirmDialog","React","OrderActionsMenu","OAMenu","setOAMenu","OAMenuRef","mutateAwaitingDispatch","mutateNeedAttention","mutateMoveOrderToArchive","mutateMoveOrderToPriority","deleteOrder","update_erp_Orders_by_pk","OrderStatusID","isPreOrder","Popper","Paper","boxShadow","borderRadius","ClickAwayListener","onClickAway","MenuList","optimisticResponse","__typename","ListItemIcon","ListItemText","Divider","delete_erp_Orders_by_pk","orderStatus","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","search","get","setEditState","pushDocs","useParams","S3Upload","useCallback","acceptedFiles","uploadFile","key","originalname","useDropzone","onDrop","getRootProps","showOrderActions","Composition","Comments","Info","daysInMonth","selectedMonth","month","year","getDate","getIntervalData","day","intervals","timeDeduction","getMinutes","t","minutes","entrance","_entr","_exit","exit","getHours","number","hour","Math","floor","decpart","min","round","minute","convertInterval","interval","monthAdd","temp","getFullYear","getMonth","setMonth","setDate","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","attendanceData","Attendance","Error","replace","gte","lte","getVarsForSubscription","attendance_users_aggregate","nodes","lastname","firstname","Cell","hours","intervalsPools","generateColumns","attendanceLayout","startsWith","onChangeSearch","attendanceTable","tableFooter","Reclamation","reclatationLayout","AppRouter","exact","BaseLayout","DARK_CLASS","SystemPreferTheme","appTheme","setAppTheme","systemPrefersDark","useMediaQuery","query","undefined","mode","documentElement","changeTheme","newTheme","expires","setFullYear","cookie","StyledToggleButtonGroup","ToggleButtonGroup","borderTopLeftRadius","borderTopRightRadius","getCookie","parts","pop","shift","SettingsDrawer","UItheme","logout","anchor","themeHandler","toggleDrawer","Drawer","onKeyDown","List","ListItem","themeToggleButtons","exclusive","ToggleButton","logoutButton","Sidebar","activeClassName","observer","setUItheme","createTheme","main","light","fontFamily","subtitle1","getDesignTokens","components","MuiDialog","styleOverrides","paper","background","MuiDialogTitle","root","MuiMenuItem","defaultProps","disableRipple","MuiListItemText","MuiListItemIcon","strokeWidth","stroke","MuiButton","textInfo","iconic","disableElevation","MuiTextField","autoComplete","MuiInputLabel","shrink","MuiFilledInput","disableUnderline","MuiInput","MuiInputBase","MuiOutlinedInput","notchedOutline","MuiPopover","MuiSelect","select","boxSizing","outline","MuiTab","MuiCheckbox","muicomponents","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","axios","create","withCredentials","baseURL","AuthService","post","Store","isLoading","pageParams","makeAutoObservable","this","bool","isAuth","setInMemoryToken","accessToken","setUser","response","r","setLoading","formData","FormData","append","fetch","hasuraRes","url","createContext","webSocketLink","WebSocketLink","uri","reconnect","lazy","reconnectionAttempts","inactivityTimeout","connectionCallback","connectionParams","asyncTokenValidation","setContext","_","context","now","jwt","decode","exp","getNewToken","Authorization","apolloClient","ApolloClient","link","from","cache","InMemoryCache","typePolicies","keyFields","erp_CheckListUnits","client","sessionData","dataset","session","Provider"],"mappings":"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","file":"static/js/main.7acfaa8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableSearchInput\":\"search_tableSearchInput__mHzTe\",\"filter\":\"search_filter__1BI6Q\",\"filterPlaceholder\":\"search_filterPlaceholder__2NcNB\",\"filterIndicator\":\"search_filterIndicator__Rfc0e\",\"circle\":\"search_circle__2PIMx\",\"pulsate\":\"search_pulsate__pgEiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsWrapper\":\"OrderItemActions_actionsWrapper__1mryM\",\"deleteButton\":\"OrderItemActions_deleteButton__14fyW\",\"moreVertIcon\":\"OrderItemActions_moreVertIcon__3Qdex\",\"inputListItem\":\"OrderItemActions_inputListItem__22HbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"archive_inputWrapper__3nHE2\",\"archiveTable\":\"archive_archiveTable__1BwU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeToggleButtons\":\"SettingsDrawer_themeToggleButtons__hIzSP\",\"user\":\"SettingsDrawer_user__3iVNA\",\"logoutButton\":\"SettingsDrawer_logoutButton__2_Id_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"recently_heading__2gRdv\",\"recentlyTable\":\"recently_recentlyTable__3NJpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preOrdersTableWrapper\":\"preorders_preOrdersTableWrapper__2ELAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reclatationLayout\":\"ReclamationLayout_reclatationLayout__FiTwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsListWrapper\":\"Comments_commentsListWrapper__25Ylk\",\"commentInputForm\":\"Comments_commentInputForm__2W6Of\",\"checklistUnit\":\"Comments_checklistUnit__2rS_e\",\"checklistUnit_complited\":\"Comments_checklistUnit_complited__1J6jW\",\"saveButton\":\"Comments_saveButton__FkrZB\",\"commentUnit\":\"Comments_commentUnit__1L_o5\",\"actions\":\"Comments_actions__2pxUd\",\"commentContent\":\"Comments_commentContent__EsGgq\",\"commentHeader\":\"Comments_commentHeader__3aEgO\",\"sender\":\"Comments_sender__3ld3S\",\"time\":\"Comments_time__2egg6\"};","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const { store } = useContext(Context)\n  const [isLoaded, setisLoaded] = useState(false);\n  const [token, setToken] = useState(store.inMemoryToken);\n\n    async function getToken() {\n      store.checkAuth().then(\n        (res) => {\n          setToken(res)\n          setisLoaded(true)\n        }\n      )\n    }\n\n    useEffect(() => {\n      if (token) setisLoaded(true)\n      else getToken();\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n          if (token) return <Component {...props} />\n          else return <Redirect to='/login'/>;\n        }\n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import { useState, useContext } from 'react';\nimport { Context } from '../../index';\nimport { useHistory } from \"react-router-dom\";\n\nimport ReactNotification from 'react-notifications-component'\nimport { TextField, Button } from '@mui/material';\nimport './LoginForm.sass'\nimport { notif } from '../_core/notification'\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    \n    const { store } = useContext(Context);\n    const history = useHistory();\n\n\n    const login = async () => {\n      const res = await store.login(email, password)\n\n      if (res?.status === 200){\n        history.push('/')\n      }\n      else{\n        console.error('Invalig email or password')\n        notif('warning', 'Unauthorized error', 'Invalig email or password')\n      }\n      \n    }\n\n    return(<>\n      <ReactNotification />\n      <div className='loginCard'>\n        <TextField\n        className='loginInput'\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          className='loginInput'\n          onChange={e => setPassword(e.target.value.trim()) }\n        />\n        <Button\n          className=\"Button\"\n          variant=\"outlined\"\n          width='300px'\n          onClick={login}\n        >Войти</Button>\n      </div>\n    </>);\n}\n\nexport default LoginForm\n","import { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\n\nexport const notif = (type, title, message) =>  store.addNotification({\n  title,\n  message,\n  type,\n  insert: \"bottom\",\n  container: \"top-right\",\n  dismiss: {\n    duration: 4000,\n  }\n});\n","export const initialState = (selectedTab, cachedOrders, cachedPreOrders) => ({\n    orders: cachedOrders || [],\n    preOrders: cachedPreOrders || [],\n    selectedTab : selectedTab,\n\n    searchKeyword: '',\n    managerFilter: 0,\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'managerFilter': \n            return {...state, [action.type]: action.payload };\n\n        case 'resetFilters': \n            return {...state, searchKeyword: '', managerFilter: 0}\n        default: \n            return {...state}\n    }\n}","import gql from 'graphql-tag'; \n\n// Выбираем заказы находящиеся только в Прездаказах и в производстве \n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_neq: 3} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      NeedAttention\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems(order_by: {OrderItemID: asc}){\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n        LastName\n      }\n\n    }  \n  }\n`\n","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n    AccessLevelID\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!, $isReclamation: Boolean!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID, IsReclamation: $isReclamation}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\nimport sass from '../main.module.sass'\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ' - 0%'\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row, counter) => counter +1\n    },\n    {\n      Header: 'Наим.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length === 0) return <Link to={`/orders/${data.OrderID}`}><div>Нет содержимого</div></Link>\n\n        else return (<Link to={`/orders/${data.OrderID}`}>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </Link>)\n      }\n      \n    },\n    {\n      Header: 'Кол-во',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'Отгрузка',\n      accessor: (order) => \n      <> { order.ShippingDate && moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'Компания / город',\n      accessor: data => \n      <div className={sass.customerTableInfo}>\n        <div>{data.Entity}</div>\n        <div>{data.City}</div>\n      </div>\n    },\n    {\n      Header: 'Счет- оплата',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'Мдж.',\n      accessor: data => <> {data.User?.FirstName[0] || ''} </>\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\n\nfunction statusHighlighting(order){\n  // Выделение заказов требующих внимания имеют приоритет\n  if (order.NeedAttention) return mainsass.needAttention\n  else if (order.AwaitingDispatch) return mainsass.awaitingDispatch\n  else return ''\n}\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return null;\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n               <tr className={statusHighlighting(row.original)} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { UilSearch } from '@iconscout/react-unicons'\nimport sass from './search.module.sass'\n\nimport { FormControl, Select, MenuItem } from '@mui/material';\n\n// const useStyles = makeStyles((theme) => ({\n//     formControl: {\n//       minWidth: 70,\n//       borderRadius: 'var(--br10)',\n//       border: '1px solid var(--border)',\n//       padding: '0 10px',\n//     },\n//     select: {\n//         fontSize: '.8rem',\n//         color: 'var(--highContrast)',\n//     },\n//     menuItem: {\n//         fontSize: '.8rem',\n//         color: 'var(--lowContrast)',\n//     },\n//   }));\n\nconst Search = ({state, dispatch, users }) => {\n    // const classes = useStyles();\n\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter !== 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>Выдача ограничена фильтром</p>\n            </div>\n        ) \n    }\n\n    return (\n        <>\n        <div className={sass.tableSearchInput}>\n            <UilSearch/>\n            <input type='text' placeholder=\"Номер счета или организация\" onChange={searchHandler} autoFocus defaultValue={state.searchKeyword}/>\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl>\n                <Select\n                    name=\"managerFilter\"\n                    value={state.managerFilter}\n                    onChange={managerHandler}\n                >\n                    <MenuItem value={0}>Все</MenuItem>\n                    { users.map( (user) => \n                    <MenuItem value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                    )}\n                \n                </Select>\n                </FormControl>\n            </div>)}\n        </div>\n\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","function filteringAlg(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // применить поиск по ключевому слову\n    if (keyword !== '') {\n        result = array.filter( (order) => filteringAlg(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //применить поиск по фильру\n    if (managerFilter !== 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID === managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n    }\n  }\n\n`;","import { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\nimport Search from '../Search';\nimport { filter } from '../Search/filter'\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport { UilFileCheck} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\nimport mainsass from '../main.module.sass'\nimport { Button } from '@mui/material';\n\nconst PreOrders = ({ state, dispatch }) => {\n    const data = state.preOrders\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    const onClickTransfer = (order) => {\n        data.splice(data.indexOf(order), 1)\n        dispatch({ type: 'preOrders', payload: data })\n\n        mutationOrderStatus({ variables: { \n            OrderID: order.OrderID, \n            AcceptanceDate: new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"}) } \n        })\n    }\n\n    var newColumnList = [...columnsList];\n    const filtredData = filter(data, state.searchKeyword)\n    \n    newColumnList.push({\n        Header: 'Принять',\n        accessor: data => \n        <Button onClick={() => onClickTransfer(data)} variant='iconic'><UilFileCheck/></Button>\n        ,\n      })\n   \n    return(\n    <div className={`${mainsass.tableWrapper} ${sass.preOrdersTableWrapper}`}>\n        <Search state={state} dispatch={dispatch} />\n        {filtredData && <Table columns = {newColumnList} data = {filtredData} />}\n    </div>\n    )\n}\nexport default PreOrders","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ users, state, dispatch }) => {\n    const columns = useMemo(\n        () => columnsList, []\n    )\n    \n    const sortedData = state.orders .sort(function(a,b){\n        return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n    })\n\n    const filtredData = filter(sortedData, state.searchKeyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            {users && <Search state={state} dispatch={dispatch} users={users.filter(e => [1,2].includes(e?.AccessLevelID))}/>}\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\nimport Table from '../UniversalTable/TableMarkup'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport { Typography } from '@mui/material'\nimport sass from './recently.module.sass'\n\nconst Recently = ({ state, dispatch }) => {\n\n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(b.AcceptanceDate) - new Date(a.AcceptanceDate);\n      });\n\n    const spreadData = spread(sortedData);\n\n    const columns = useMemo(() => columnsList, [] )\n\n    const filtredData = filter(spreadData[2].objs, state.searchKeyword)\n\n    return(\n        <div>\n            <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n                Сегодня\n            </Typography>\n            { spreadData[0].objs.length ? ( <>\n           \n            <Table columns={columns} data={spreadData[0].objs} className={sass.recentlyTable} />\n            </>): null}\n\n\n            <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n                Вчера\n            </Typography>\n            { spreadData[1].objs.length ? ( <>\n          \n            <Table columns={columns} data={spreadData[1].objs} className={sass.recentlyTable} />\n            </>): null}\n\n            {/* <div className={sass.heading}>Остальные</div>\n            <div className={mainsass.tableWrapper}>\n                <Search state={state} dispatch={dispatch} incomingOrders={sortedData} />\n                { <Table columns = { columns } data = { filtredData } />}\n            </div> */}\n\n        </div>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Сегодня',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'Вчера',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': '',\n        'objs': [] \n        },\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.AcceptanceDate?.split('T')[0]\n\n        if (dateCreation === days[0].date) days[0].objs.push(order);\n        else if (dateCreation === days[1].date) days[1].objs.push(order);\n        else days[2].objs.push(order);    \n    }\n\n    return days;\n};\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_SEARCH_ORDERS = gql`\n  query ($keyword: String!){\n  erp_Orders(where: {\n    _or: [\n      { Entity: {_ilike: $keyword} }, \n      { InvoiceNumber: {_ilike: $keyword} }\n\n      ],\n    OrderStatusID: {_eq: 3}\n    }) {\n      ActualShippingDate\n      AwaitingDispatch\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n  }\n}\n`\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\nimport { Typography } from '@mui/material/';\n\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows, \n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return <Typography color='textSecondary' variant=\"subtitle2\">-> ничего не найдено</Typography>\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          const unpaidOrder = row.original.unpaid\n          return (\n               <tr className={unpaidOrder ? mainsass.unpaidOrder : ''} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { gql } from \"graphql-tag\"\n\nexport const GET_ALL_ORDERS_AMOUNT = gql`\nquery{\n  erp_Orders(\n    where: {OrderStatusID: {_eq: 3}},\n    order_by: {OrderID: desc},\n    limit: 1000,\n    ){\n\t\tOrderID\n    PaidAmount\n    TotalAmount\n  }\n}\n`\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_LATEST_ORDERS = gql`\nquery($limit: Int!){\n  erp_Orders(\n    order_by: {ActualShippingDate: desc_nulls_last}\n    where: { OrderStatusID: {_eq: 3} } \n    limit: $limit\n    ){\n    ActualShippingDate\n    ShippingDate\n    AwaitingDispatch\n    OrderID\n    Entity\n    InvoiceNumber\n    City\n    PaidAmount\n    TotalAmount\n    CreatingDate\n    ManagerID\n    OrderItems {\n      Quantity\n      OrderItemID\n      Name\n    } \n    User {\n      FirstName\n    }\n  }\n}\n`","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_UNPAID_ORDERS = gql`\nquery MyQuery($unpaidIDs: [Int!]) {\n    erp_Orders(where: { OrderStatusID: {_eq: 3}, OrderID: {_in: $unpaidIDs } } ) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      ActualShippingDate\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n    }\n  }\n`","//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ALL_ORDERS_AMOUNT } from './queries/getAllOrdersAmount'\nimport { GET_ARCHIVED_LATEST_ORDERS } from './queries/getArchivedLatestOrders'\nimport { GET_ARCHIVED_UNPAID_ORDERS } from './queries/getArchivedUnpaidOrders'\n\nimport Table from './TableMarkup'\nimport sass from './archive.module.sass'\nimport { Typography } from '@mui/material/';\nimport moment from 'moment'\n\nconst PreviewTable = (props) => {\n  const { state, dispatch, columns } = props\n\n  var archiveColumns = [...columns]\n  archiveColumns[3] = {\n    Header: 'Факт отгрузка',\n    accessor: order => \n    <> { order.ActualShippingDate && moment(order.ActualShippingDate).format('DD.MM.YY') }\n    </>\n  }\n\n  const { data : latestOrders = [], loading: latestOrdersloading } = useQuery(GET_ARCHIVED_LATEST_ORDERS, {variables:{ limit: 12 }});\n\n  const { loading } = useQuery(GET_ALL_ORDERS_AMOUNT, { onCompleted: (res) => {\n    dispatch({ type: 'unpaidIDs', payload: res.erp_Orders.filter(e => e.PaidAmount / e.TotalAmount < .999).map(e => e.OrderID)})\n  }})\n\n  const { data : unpaidOrders = [], loading: unpaidOrdersLoading } = useQuery(GET_ARCHIVED_UNPAID_ORDERS, { variables: {unpaidIDs: state.unpaidIDs } })\n\n  const previewData = () => {\n    if (!unpaidOrders.erp_Orders || !latestOrders.erp_Orders) return []\n    return ([\n      ...unpaidOrders.erp_Orders.map(e => ({...e, unpaid: true})),\n      // проверяем есть ли в последних заказах неоплаченный, если есть, то убираем из их заказ из latestOrders\n      ...latestOrders.erp_Orders\n      .filter(e => !state.unpaidIDs.includes(e.OrderID))\n      .sort(function(a,b){\n        return new Date(b.ActualShippingDate) - new Date(a.ActualShippingDate);\n      })\n      ])\n  }\n\n  // if (latestOrdersloading || unpaidOrdersLoading || loading) return( \n  // <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height={400}>\n  //   <Spinner />\n  // </Pane>)\n\n  return (<>\n    <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n      Недавно отгруженные\n    </Typography>\n\n      <Table columns = {archiveColumns} data = {previewData()} className={sass.archiveTable}/>\n  </>)\n}\nexport default PreviewTable","import { useMemo, useReducer } from 'react';\n\n//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ARCHIVED_SEARCH_ORDERS } from './queries/getArchivedSearchOrders'\n\n//ui\nimport sass from './archive.module.sass'\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from './TableMarkup'\nimport { Typography, InputBase } from '@mui/material/';\n\nimport PreviewTable from './PreviewTable';\n\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n      case 'searchKeyword': \n      case 'unpaidIDs': \n          return {...state, [action.type]: action.payload };\n      default: \n          return {...state}\n  }\n}\n\nconst Archive = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    //заказы которые отгружено, но еще не оплачены\n    unpaidIDs: [],\n    searchKeyword: '',\n  });\n\n  const { data = [] } = useQuery(GET_ARCHIVED_SEARCH_ORDERS, { variables: {\n    keyword: '%' + state.searchKeyword + '%'\n  }})\n\n  const columns = useMemo(\n    () => columnsList, []\n  )\n  \n  const searchHandler = (e) => {\n    setTimeout(() => {\n      dispatch({ type: 'searchKeyword', payload: e.target.value})\n    }, 400)\n  }\n\n  return(\n    <div>\n      <InputBase\n        className={sass.inputWrapper}\n        autoFocus\n        onChange={searchHandler}\n        placeholder='номер счета или юрлицо'/>\n\n      {!state.searchKeyword && <PreviewTable state={state} dispatch={dispatch} columns={columns} /> }\n\n      {state.searchKeyword &&  data.erp_Orders && <>\n          <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n            Результат поиска по архиву\n          </Typography>\n          <Table columns = {columns} data = {data.erp_Orders} className={sass.archiveTable}/>\n      </>}\n\n    </div>\n  )\n}\nexport default Archive;","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\n\n// apollo\nimport { useSubscription, useQuery, useMutation } from '@apollo/client'\nimport { GetOrdersSubscription } from './queries/getOrders'\nimport { GET_USERS } from '../../hasura-queries/getUsers'\nimport { INSERT_ORDER } from './queries/MutationInsertOrder';\n\n// ui \nimport {Tabs, Tab, Box, Button} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { UilPlus} from '@iconscout/react-unicons';\n\nimport mainsass from './main.module.sass'\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport Archive from './Archive/';\n\nconst StyledTabs = styled((props) => <Tabs {...props} />)(\n  ({ theme }) => ({\n    margin: '0 0 1rem',\n    '& .MuiTabs-indicator': {\n      display: 'none'\n    },\n  }),\n  );\n\nconst StyledTab = styled((props) => <Tab {...props} />)(\n    ({ theme }) => ({\n      textTransform: 'none',\n      fontWeight: 400,\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(15),\n      marginRight: theme.spacing(1),\n      borderBottomRightRadius: '8px',\n      borderBottomLeftRadius: '8px',\n      border: '1px solid transparent',\n      '&.Mui-selected': {\n        backgroundColor: 'var(--L1)',\n        color: theme.palette.primary,\n        border: '1px solid var(--borderLight)'\n      }\n    }),\n  );\n\n\nconst OrderListLayout = (props) => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState( store.priorityTab, store.cachedOrders, store.cachedPreOrders ));\n    const { selectedTab } = state; \n\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n  \n        options.subscriptionData.data.erp_Orders.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n          });\n\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID === 1) preOrders.push(order)\n            else if (order.OrderStatus.ID === 2) orders.push(order)\n        })\n        store.setCachedOrders(orders)\n        store.setCachedPreOrders(preOrders)\n\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    \n    useSubscription(GetOrdersSubscription, { onSubscriptionData,  fetchPolicy: \"cache-first\", nextFetchPolicy: \"cache-first\" });\n    const { data: users = []} = useQuery(GET_USERS);\n\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n      'managerID':     store.user.UserID,\n      'orderStatusID': 1,\n      'isReclamation':  false,\n    }})\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        dispatch({ type: 'resetFilters'})\n        store.setPriorutyTab(newValue)\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n  \n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n  \n    return(\n        <div className={mainsass.OrderListLayout}>\n        <StyledTabs value={selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\" className='orderListLayoutTabs'>\n            <StyledTab label=\"Предзаказы\" {...a11yProps(0)} />\n            <StyledTab label=\"Очередость\" {...a11yProps(1)} />\n            <StyledTab label=\"Недавние\"   {...a11yProps(2)} />\n            <StyledTab label='Архив'      {...a11yProps(3)} />\n\n            <Button onClick={createOrderHandler} sx={{ marginLeft: 'auto' }} variant='iconic'><UilPlus/></Button>\n        </StyledTabs>\n\n\n        <TabPanel value={selectedTab} index={0}>\n            <PreOrders state={state} dispatch={dispatch}/>\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={1} >\n            <Priority state={state} dispatch={dispatch} users={users.erp_Users} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={2}>\n            <Recently state={state} dispatch={dispatch} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={3}>\n            <Archive state={state} dispatch={dispatch} />\n        </TabPanel>\n\n      </div>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    AwaitingDispatch\n    ActualShippingDate\n    AcceptanceDate\n    OrderID\n    ManagerID\n    OrderStatusID\n    City\n    ShippingDate\n    CreatingDate\n    Comment\n    Entity\n    InvoiceNumber\n    NeedAttention\n    OrderNumber\n    PaidAmount\n    TotalAmount\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems(order_by: {OrderItemID: asc}) {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialNumber\n    }\n    CheckListUnits(order_by: {CheckListUnitID: desc}) {\n      CheckListUnitID\n      OrderID\n      IsComplited\n      Point\n    }\n    Docs {\n      Key\n      FileName\n    }\n    PaymentHistories(\n      where: {PaidAmount: {_neq: 0}}\n    ){\n      PaidAmount\n      Date\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;\n\n\nexport const UPDATE_ORDER_ITEM = gql`\nmutation($OrderItemID: Int!, $FullName: String!, $Name: String!, $Quantity: Int!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n    _set: {FullName: $FullName, Name: $Name, Quantity: $Quantity}) {\n    Name\n    FullName\n    OrderItemID\n    Quantity\n  }\n}\n\n`;\nexport const UPDATE_ORDER_ITEM_METADATA = gql`\nmutation($OrderItemID: Int!, $Fitter: String!, $SerialNumber: String!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n     _set: {Fitter: $Fitter, SerialNumber: $SerialNumber}\n  ){\n    OrderItemID\n  }\n}\n`","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu, MenuItem, TextField } from '@mui/material';\nimport { UilEllipsisV } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n  \nconst OrderItemActions = ({ editState, item, editItemHandler, deleteItemHandler, updateItem, setOIDialog }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    'serialNumber': item.SerialNumber,\n    'fitter': item.Fitter\n  });\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n\n    if (item.SerialNumber !== state.serialNumber || item.Fitter !== state.fitter){\n      updateItem({ variables: {\n        'OrderItemID': item.OrderItemID,\n        'Fitter': state.fitter,\n        'SerialNumber': state.serialNumber.toString()\n      } })\n    }\n  };\n    \n  return (\n  <div className='noprint'>\n    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size='small'>\n      <UilEllipsisV className={sass.moreVertIcon}/>\n    </Button>\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n    >\n\n\n      <MenuItem className={sass.inputListItem} >\n        <TextField \n          type=\"number\"\n          label=\"Серийный номер\" \n          multiline\n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'serialNumber': e.target.value\n          }))}\n          defaultValue={state.serialNumber}\n          />\n      </MenuItem>\n\n      <MenuItem className={sass.inputListItem} >\n        <TextField \n          label=\"Сборщик\"  \n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'fitter': e.target.value\n          }))}\n          defaultValue={state.fitter}\n        />\n      </MenuItem>\n\n\n      {editState && (\n        <div className={sass.actionsWrapper}>\n          <MenuItem onClick={ (e) => {\n              setOIDialog(true)\n              handleClose();\n              editItemHandler(e, item);\n          }}>Редактировать</MenuItem>\n\n          <MenuItem \n            className={sass.deleteButton}\n            onClick={ ()=> {\n              handleClose();\n              deleteItemHandler(item.OrderItemID);\n          }}>Удалить</MenuItem>\n        </div>\n      )}\n\n    </Menu>\n  </div>\n  );\n}\n\nOrderItemActions.propTypes = { \n    editState: PropTypes.bool,\n    item:      PropTypes.object,\n    editItemHandler:  PropTypes.func, \n    deleteItemHandler: PropTypes.func,\n    updateItem: PropTypes.func\n}\n\nexport default OrderItemActions\n\n","import { useReducer, useEffect, useState } from 'react'\n\n//apollo \nimport { useMutation } from \"@apollo/client\"\nimport { \nDELETE_ORDER_ITEM, \nINSERT_ORDER_ITEM, \nUPDATE_ORDER_ITEM, \nUPDATE_ORDER_ITEM_METADATA \n} from \"./queries/MutationOrderItem\";\n\n// ui \nimport { Button, TextField, Box, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport sass from './sass/composition.module.sass'\nimport OrderItemActions from './OrderItemActions'\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n    id: null,\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                id: action.payload[0],\n                name: action.payload[1],\n                fullName: action.payload[2],\n                quantity: action.payload[3]\n            }\n        default: \n            return {...state}\n    }\n\n}\n\nconst OrderComposition = props => {\n    const { data, editState, refetch, orderID, OIDialog, setOIDialog } = props\n    const [ deleteOrderItemMutation ]         = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ]         = useMutation(INSERT_ORDER_ITEM);\n    const [ updateOrderItemMutation ]         = useMutation(UPDATE_ORDER_ITEM);\n    const [ updateOrderItemMetadataMutation ] = useMutation(UPDATE_ORDER_ITEM_METADATA);\n    const [state, dispatch ] = useReducer(reducer, initialState)\n    \n    const deleteItemHandler = (itemID) => {\n        deleteOrderItemMutation({ variables: { orderItemID: itemID} })\n        refetch()    \n    }\n    const editItemHandler = (e, item) => {\n        dispatch({ type: 'editItem', payload: [item.OrderItemID, item.Name, item.FullName, item.Quantity] })\n    }\n\n    const closeOIDialog = () => {\n      setOIDialog(false);\n    };\n\n    useEffect(() => {\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n    const insertOrderItem = () => {\n        closeOIDialog();\n        if (state.quantity === '' || state.name === '') return null\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const updateOrderItem = () => {\n      if (state.quantity === '' || state.name === '') return null\n      closeOIDialog();\n      updateOrderItemMutation({variables: { \n        OrderItemID: state.id,\n        Name: state.name, \n        Quantity: parseInt(state.quantity),\n        FullName: state.fullName, }}).then( () => { dispatch({ type: 'reset'}); refetch() })    \n  }\n  \n    return(<>     \n        {data.map( (el, index) => \n        <div\n          key={el.OrderItemID}\n          className={sass.Unit} \n        >\n              <span className={sass.index}>{index+1}</span>\n              <Typography color='textPrimary' className={sass.name}> {el.Name} </Typography>\n              <span  className={sass.quantity}> {el.Quantity}</span>\n              <OrderItemActions\n                  {...props}\n                  item={el}\n                  editItemHandler={editItemHandler}\n                  deleteItemHandler={deleteItemHandler}\n                  updateItem={updateOrderItemMetadataMutation}\n              />\n\n              <div className={sass.fullName}> { el.FullName }</div>\n\n        </div>\n        )}\n        \n      <Dialog maxWidth='md' fullWidth={true} open={OIDialog} onClose={closeOIDialog}>\n        <DialogTitle>Добавить позицию</DialogTitle>\n        <DialogContent>\n        <Box className={sass.addOrderItem}>\n          <TextField\n            label=\"Наименование\"\n            value={state.name}\n            variant='filled'\n            sx={{mb: '8px'}}\n            onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"Полное наименование\"\n            multiline\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.fullNameInput}\n            value={state.fullName}\n            onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"Кол-во\"\n            type=\"number\"\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.quantityInput}\n            value={state.quantity}\n            onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n            />\n        </Box>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'start'}} >\n            {state.name && state.quantity && (!state.id \n            ? <Box><Button variant='contained' onClick={insertOrderItem}>Добавить</Button> </Box>\n            : <Box><Button variant='contained' onClick={updateOrderItem}>Изменить</Button></Box> )}\n              <Box  ><Button onClick={() => {\n                  closeOIDialog();\n                  dispatch({type: 'reset'});\n              }}>Закрыть</Button></Box>\n        </DialogActions>\n      </Dialog>\n    </>)\n}\n\nexport default OrderComposition","import  moment  from 'moment'\nimport \"./sass/order-meta.sass\";\nimport { Typography, Box } from '@mui/material/';\n\nimport { styled } from '@mui/material/styles';\n\nconst OrderInfoCard = (props) => {\n  const { heading, secondaryHeading } = props;\n  return (\n    <Box className=\"OrderInfoCard\" sx={{ color: 'text.primary' }}>\n    <div className='row'>\n      <div className='heading'>\n        {heading}\n      </div>\n      <div className='secondaryHeading noprint'>\n        {secondaryHeading}\n      </div>\n    </div>\n\n    <div className='body'>\n      {props.children}\n    </div>\n  </Box>\n  )\n}\nconst Pre = styled((props) => <Typography {...props} />)(\n  ({ theme }) => ({\n    color: theme.palette.text.secondary,\n    fontSize: '.8rem'\n  }),\n  );\n\nconst OrderMeta = (props) => {\n   const { data } = props;\n    \n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ' '\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n   \n    const paidVisualization = () => {\n      if (data.PaymentHistories.length == 0 || !data.PaidAmount || !data.TotalAmount) return null\n\n      return (\n        <OrderInfoCard className='noprint' heading=\"Платежи\" secondaryHeading={`${data.TotalAmount} ₽`}>\n           <table className='paidVisualization'>\n           <tbody>\n            {data.PaymentHistories.map(e => (\n                <tr key={e.Date}>\n                  <td>{(e.PaidAmount / data.TotalAmount * 100).toFixed(0)} % </td>\n                  <td>{moment(e.Date).format('DD.MM.YY')}</td>\n              </tr>\n            ))}\n          </tbody>\n          </table>\n        </OrderInfoCard>\n      )\n    }\n    \n    const aboutOrder = () => {\n      const columns = [\n        {\n          'heading': \"Менеджер\",\n          'data': `${data.User?.FirstName} ${data.User?.LastName || 'undefined'}`, \n        },\n        {\n          'heading': \"Создан\",\n          'data': moment(data.CreatingDate).format('DD.MM.YY'),\n        },\n        {\n          'heading': \"В очередности\",\n          'data': moment(data.AcceptanceDate).format('DD.MM.YY'), \n        },\n        {\n          'heading': \"Факт. отгрузка\",\n          'data': moment(data.ActualShippingDate).format('DD.MM.YY'), \n        }\n      ]\n      return (\n        <OrderInfoCard heading=\"О заказе\">\n          <table><tbody>\n             {columns.map(el => {\n                if (!el.data || el.data === 'Invalid date') return null\n                return <tr key={`${el.heading} ${el.data}`}>\n                  <td>{el.heading}</td>\n                  <td>{el.data}</td>\n                </tr>\n                }\n              )}\n          </tbody></table>\n        </OrderInfoCard>\n      )\n    }\n\n  return (<>\n      <div className=\"wrap\">\n\n          <Box className='significantInfo' sx={{ color: 'text.primary' }}>\n            <div className='bold'>\n              <Pre>План. отгузка</Pre>\n              {data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY')}\n            </div>\n            <div className='bold'>\n              <Pre>Номер заказа</Pre>\n              {data.OrderNumber}\n            </div>\n            <div className='bold'>\n              <Pre>Счет / оплата</Pre>\n              {\"№ \"+ (data.InvoiceNumber || '')+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n            </div>\n          </Box>\n\n          <div className='OrderComment'>\n              <Pre>Комментарий</Pre>\n              {data.Comment}\n          </div>\n\n        {aboutOrder()}\n        {paidVisualization()}\n      </div>\n  </>)\n}\n\nexport default OrderMeta\n","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($OrderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $OrderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($OrderID: Int!, $AwaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { AwaitingDispatch: $AwaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;\nexport const UPDATE_NEED_ATTENTION = gql`\nmutation MyMutation($OrderID: Int!, $NeedAttention: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { NeedAttention: $NeedAttention }\n  ) {\n\t\tOrderID\n    NeedAttention\n  }\n}\n`\n\nexport const MOVE_ORDER_TO_ARCHIVE = gql`\n  mutation MyMutation($OrderID: Int!, $ActualShippingDate: timestamptz!) {\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID}, \n      _set: {\n        OrderStatusID: 3,\n        AwaitingDispatch: false,\n        ActualShippingDate: $ActualShippingDate,\n        }){\n      OrderID\n      OrderStatusID\n    }\n  }\n`;\n\nexport const MOVE_ORDER_TO_PRIORITY = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_PAYMENT = gql`\n  mutation($PaidAmount: numeric!, $Date: timestamptz!, $OrderID: Int!) {\n    insert_erp_PaymentHistory_one(object: {PaidAmount: $PaidAmount, OrderID: $OrderID, Date: $Date}) {\n      ID\n      OrderID\n    }\n}\n`;","import { useEffect } from 'react';\nimport './EditableInfo.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\nimport { INSERT_PAYMENT } from '../queries/MutationPaymentHistory'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nimport { TextField, Autocomplete } from '@mui/material';\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'₽ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch, users }) => {  \n  \n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n    const [insertPayment] = useMutation(INSERT_PAYMENT)\n  \n    function saveChanges(){\n      console.log('doing mutation for order', orderID, fields)\n      updateOrderInfo({variables: {\n        OrderID: orderID,\n        fields,\n      }})\n\n      if (fields.PaidAmount) insertPayment({ variables: {\n          Date: new Date,\n          OrderID: orderID,\n          PaidAmount: fields.PaidAmount\n        }})\n      \n      refetch()\n    }\n    useEffect(() => {\n        fields = {};\n        return () => {\n            saveChanges()\n        };\n    }, []);\n\n    function findSelectedManeger(users, managerID){\n      if (!users) return null\n      const index = users.indexOf(users.find(user => user.UserID === managerID))\n      return users[index]\n    }\n\n  return(\n    <form className=\"EditableInfo\">  \n      <div className=\"wrap\">\n       <TextField\n          label=\"План. отгрузка\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          InputProps={{\n            inputComponent: DateFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"Номер счета\"\n          type=\"number\"\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"Номер заказа\"\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={users.filter( (user) => user.AccessLevelID != 3)}\n          getOptionLabel={(option) => `${option.FirstName} ${option.LastName}`}\n          renderInput={(params) => <TextField {...params} label=\"Менеджер\"/>}\n          defaultValue={() => findSelectedManeger(users, data.ManagerID)}\n          onChange={(event, newValue) => {\n            fields['ManagerID'] = (newValue?.UserID || null)\n          }}\n        />\n\n         <TextField\n          label=\"Юр лицо\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"Город\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Сумма заказа\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n          />\n        \n        <TextField\n          label=\"Оплачено\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"Комментарий\"\n          multiline\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n       </div>\n    </form>\n  )\n}\n\nexport default EditableInfo","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nexport default function ConfirmDialog(props) {\n  const { filename, open, handleClose, onConfirmF} = props\n  return (\n    <div>\n      <Dialog\n        open={open}\n        minWidth='xs'\n\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" sx={{\n          color: 'var(--lowContrast) !important',\n          'span': {\n            color: 'var(--highContrast) !important'\n          }\n        }}>\n            Удалить <span>{filename}</span> ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>Отменить</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Удалить \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useContext, useState, useEffect } from 'react';\nimport { Context } from '../../../index'\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from '../queries/MutationOrderDocs';\n\nimport './docs.sass'\n\nimport ConfirmDialog from './ConfirmDialog';\n\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const { store } = useContext(Context)\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length === 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n    useEffect(() => {\n        setOpen(false)\n    }, [editState]);\n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        await store.deleteFile(fileOnDelete.Key, deleteFileMutation)\n        refetch()\n    }\n\n    const attachedFiles = data.map(\n        file => {\n            // delite file\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n             // opne file\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    rel=\"noreferrer\"\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n            <div className='filesContainer'>\n                {attachedFiles}\n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n\n            <ConfirmDialog \n                filename={fileOnDelete?.FileName} \n                open={open}  \n                handleClose={handleClose}\n                onConfirmF={deleteFile}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_COMMENT = gql`\nmutation($OrderID: Int!, $Text: String!, $UserID: Int!) {\n  insert_erp_Comments_one(\n    object: {OrderID: $OrderID, Text: $Text, UserID: $UserID}) \n    {\n    CommentID\n    OrderID\n    Text\n    Timestamp\n    UserID\n  }\n}\n`;\n\nexport const DELETE_ORDER_COMMENT = gql`\n mutation($CommentID: Int!) {\n  delete_erp_Comments_by_pk(CommentID: $CommentID) {\n    CommentID\n  }\n}\n`;\n\nexport const UPDATE_ORDER_COMMENT = gql`\nmutation($CommentID: Int!, $Text: String!, $Timestamp: timestamptz!) {\n  update_erp_Comments_by_pk(\n    pk_columns: {CommentID: $CommentID},\n    _set: {Text: $Text, Timestamp: $Timestamp}) \n    {\n    OrderID\n    Text\n    Timestamp\n    UserID\n    CommentID\n  }\n  }\n`;","import gql from 'graphql-tag'\n\nexport const SUBSCRIBTION_ORDER_COMMENT = gql`\n  subscription MySubscritp($OrderID: Int!) {\n    erp_Comments(where: {OrderID: {_eq: $OrderID}}, order_by: {CommentID: desc}) {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n  }\n`\n","import sass from './index.module.sass'\nimport moment from 'moment'\n\nconst Comment = (props) => {\n  const { data, userID, updateComment, deleteComment, nowEditing, setNowEditing } = props\n\n  function sender(){\n    return `${data.User.FirstName} ${data.User.LastName}`\n  }\n  \n  function actions(){\n    if (userID === data.User.UserID && nowEditing?.CommentID !== data.CommentID ) return (\n        <div onClick={()=> deleteComment(data.CommentID)}>Удалить</div>\n    )\n  }\n  function timestamp(){\n    const date = moment(data.Timestamp)\n    return date.format('MMM D') +' at '+ date.format('hh:mm')\n  }\n\n  function getCommentContent(){\n    if (userID === data.User.UserID) return <div contentEditable=\"true\"\n    key={data.CommentID}\n    className={sass.commentContent}\n    suppressContentEditableWarning=\"true\"\n    onBlur={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n    }}\n    onMouseLeave={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n      setNowEditing(null)\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text}}></div>\n\n    else return <div className={sass.commentContent}>{data.Text}</div>\n\n  }\n\n  return (\n    <div className={sass.commentUnit}>\n\n      <div className={sass.commentHeader}>\n        <div className={sass.sender}> {sender()} </div>\n        <div className={sass.actions}>{actions()}</div>\n        <div className={sass.time}> {timestamp()} </div>\n      </div>\n      {getCommentContent()}\n\n    </div>\n  )\n}\nexport default Comment ","import PropTypes from 'prop-types'\nimport { Menu, MenuItem, Box } from '@mui/material/';\nimport ReactDOM from 'react-dom';\nimport sass from './index.module.sass'\n\nconst СommandsPopover = props => {\n  const {anchorEl, open, handleClose, inputRef} = props\n\n  function insertTodoinDOM (){\n    const s = <div className={sass.checklistUnit}> </div>\n    ReactDOM.render(s, inputRef.current)\n  }\n  return (\n    <Menu\n        id=\"Comments__commandMenu\"\n        aria-labelledby=\"Comments__commandMenu__button\"\n        anchorEl={anchorEl}\n        open={open}\n        elevation={5}\n        onClose={handleClose}\n        sx={{\n          border: '1px solid var(--border) !important',\n          '.MuiList-root':{\n            padding: '10px',\n\n          }\n        }}\n      >\n        <MenuItem onClick={() => {\n          handleClose();\n          insertTodoinDOM();\n        }}>Чеклист</MenuItem>\n        <MenuItem onClick={handleClose} sx={{ color: 'var(--border)'}}>Упомянуть</MenuItem>\n    </Menu>\n  )\n}\n\nСommandsPopover.propTypes = {\n\n}\n\nexport default СommandsPopover\n","import { useState, useRef, useEffect } from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { INSERT_ORDER_COMMENT, UPDATE_ORDER_COMMENT, DELETE_ORDER_COMMENT } from '../queries/MutationOrderCommnets'\nimport { SUBSCRIBTION_ORDER_COMMENT } from '../queries/SubscriptionComments'\nimport sass from './index.module.sass'\n\nimport { Box } from '@mui/material/';\nimport Comment from './Comment'\nimport { UilMessage } from '@iconscout/react-unicons'\nimport СommandsPopover from './СommandsPopover'\n\nconst CommentsList = (props) => {\n  const { orderID, user } = props\n  const [ insertOrderCommentMutation ] = useMutation(INSERT_ORDER_COMMENT);\n  const [ updateOrderCommentMutation ] = useMutation(UPDATE_ORDER_COMMENT);\n  const [ deleteOrderCommentMutation ] = useMutation(DELETE_ORDER_COMMENT);\n  var inputRef = useRef();\n  const [nowEditing, setNowEditing] = useState();\n  const { data: comments = [], loading } = useSubscription(SUBSCRIBTION_ORDER_COMMENT, { variables: { OrderID: orderID }});\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  function insertComment(){\n    const text = inputRef.current.innerHTML\n    if (!text) return null\n    insertOrderCommentMutation({ variables: {\n      OrderID: orderID,\n      UserID: user.UserID,\n      Text: text\n      }\n    })\n    inputRef.current.innerHTML = ''\n  }\n\n  function updateComment(id, newText){\n    updateOrderCommentMutation({ variables: {\n      CommentID: id,\n      Text: newText,\n      Timestamp: new Date()\n    }})\n  }\n\n  function deleteComment(id){\n    deleteOrderCommentMutation({ variables: {\n      CommentID: id\n    }\n  })\n  }\n  \n  function switchTodo(e) {\n    e.target.classList.toggle(sass.checklistUnit_complited)\n  }\n\n  function inputHandler(e){\n    if (e.target.innerText.trim() === '/') setAnchorEl(e.target)\n  }\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  \n  function switchTodo(e) {\n    e.target.classList.toggle(sass.checklistUnit_complited)\n  }\n\n  useEffect(() => {\n    const els = [...document.querySelectorAll(`div.${sass.commentUnit} div.${sass.checklistUnit}`)]\n    els.forEach( el => {\n      el.addEventListener('click', switchTodo, false);\n    }, {once : true})\n    return () => {\n      els.forEach( el => {\n        el.removeEventListener('click', switchTodo, false);\n      })\n    }\n  }, [comments])\n\n  return(\n    <div className={sass.commentsListWrapper}>\n     <div className={sass.commentInputForm}>\n      \n      <СommandsPopover anchorEl={anchorEl} open={open} handleClose={handleClose} inputRef={inputRef}/>\n\n      <Box id=\"Comments__commandMenu__button inputField\"\n        aria-controls=\"Comments__commandMenu\"\n        aria-haspopup=\"true\"\n        contentEditable='true'\n        ref={inputRef}\n        data-ph=\"Комментарий или ' / ' для команды\"\n        onInput={inputHandler}>\n      </Box>\n    \n      <div onClick={insertComment} className={sass.saveButton}><UilMessage/></div>\n    </div>\n\n     {!loading && \n      comments.erp_Comments.map( (comment) => <Comment \n        data={comment} \n        key={comment.CommentID}\n        userID={user.UserID}\n        deleteComment={deleteComment}\n        updateComment={updateComment}\n        nowEditing={nowEditing}\n        setNowEditing={setNowEditing}\n      />)}\n    </div>\n  )\n}\n\nexport default CommentsList","import { UilCloudUpload } from '@iconscout/react-unicons'\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <div >\n             <UilCloudUpload className='inCloudconIcon'/>\n         </div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","import {gql} from 'graphql-tag'; \n\nexport const DELETE_ORDER = gql`\nmutation MyMutation($OrderID: Int!) {\n  delete_erp_Orders_by_pk(OrderID: $OrderID) {\n    OrderID\n  }\n}\n`;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function DeleteOrderConfirmDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div onClick={handleClickOpen}>\n        Отгружен\n      </div>\n      \n      <Dialog\n        open={open}\n        maxWidth='xs'\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Перенести в архив?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Заказ удалится из очередности, но его в любое время можно будет найти в архиве по номеру счета, юрлицу, маркировке привода.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>Отменить</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Перенести \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useHistory } from \"react-router-dom\";\n\nimport {\n  Popper,\n  ClickAwayListener,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  MenuList,\n  Paper,\n  Divider\n} from '@mui/material/';\nimport { \n  UilTrashAlt, \n  UilArchive, \n  UilClock,\n  UilFileCheck,\n  UilExclamationTriangle } from '@iconscout/react-unicons'\n\n//apollo\nimport { useMutation } from \"@apollo/client\"\nimport { \n  UPDATE_AWAITING_DISPATCH,\n  UPDATE_NEED_ATTENTION,\n  MOVE_ORDER_TO_ARCHIVE,\n  MOVE_ORDER_TO_PRIORITY\n} from '../queries/MutationOrderInfo'\nimport { DELETE_ORDER } from '../queries/MutationDeleteOrder';\n\nimport DeleteOrderConfirmDialog from './DeleteOrderConfirmDialog'\n\nconst OrderActionsMenu = props => {\n  const OrderID = props.order.OrderID \n  const { OAMenu, setOAMenu, OAMenuRef, order, refetch} = props\n\n  const [mutateAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n  const [mutateNeedAttention] = useMutation(UPDATE_NEED_ATTENTION);\n  const [mutateMoveOrderToArchive] = useMutation(MOVE_ORDER_TO_ARCHIVE);\n  const [mutateMoveOrderToPriority] = useMutation(MOVE_ORDER_TO_PRIORITY);\n  const [deleteOrder] = useMutation(DELETE_ORDER);\n\n  const history = useHistory();\n\n  // При статусе \"требует внимания\" происходит выделение заказа красным цветом в очередности. \n  // В левом меню в информации о заказе фиксируется  дата включения этого статуса.  \n  // Желательно чтобы возможность снятия была только у определенных аккаунтов .  \n  // Это необходимо когда при открытии заказа выясняется дефицит комплектующих или по заказу требуются срочные уточнения от заказчика какие-нибудь.\n  function needAttentionHandler(){\n    mutateNeedAttention({\n      variables: {OrderID, NeedAttention: !order.NeedAttention },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            NeedAttention: !order.NeedAttention\n          }\n        }\n    })\n  }\n  // При статусе \"ожидает отгрузки\" происходит выделение зеленым цветом в очередности, что означает, что заказ уже собран,\n  // и не отгружается по бумажным причинам\n  function awaitingDispatchHandler(){\n    mutateAwaitingDispatch({\n      variables: {OrderID, AwaitingDispatch: !order.AwaitingDispatch },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            AwaitingDispatch: !order.AwaitingDispatch\n          }\n        }\n    })\n  }\n  // Перекидывает заказ в архив (убирает из очередности)\n  async function transferOrderToArchive(){\n    mutateMoveOrderToArchive({ variables: { \n      OrderID,\n      ActualShippingDate: new Date()\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderStatusID === 3){\n          history.push(\"/\")\n        }\n      }\n    )\n  }\n\n  // Перекидывает предзаказ в очередность \n  async function transferOrderToPriority(){\n    mutateMoveOrderToPriority({ variables: { \n      OrderID,\n      AcceptanceDate: new Date()\n     }}).then(\n      (res) =>{\n        console.log(res)\n        if (res.data.update_erp_Orders_by_pk.OrderStatusID === 2){\n          refetch()\n        }\n      }\n    )\n  }\n  \n  // для удаления предзаказа\n  function deleteOrderHandler(){\n    deleteOrder({ variables: {\n      OrderID\n    }}).then( res => {\n      if (res.data.delete_erp_Orders_by_pk.OrderID){\n        history.push(\"/\")\n      }\n    })\n  }\n\n  const handleClose = (event) => {\n    setOAMenu(false);\n  };\n\n  function isPreOrder(){if (order.OrderStatusID === 1) return true; else return false}\n\n  return (\n    <Popper\n    open={OAMenu} \n    anchorEl={OAMenuRef.current}\n    >\n\n    <Paper \n      sx={{ \n      boxShadow: '0 0 1px 0',\n       width: 200,\n       maxWidth: '100%',\n       borderRadius: 'var(--br)' }}> \n      <ClickAwayListener onClickAway={handleClose}>\n      <MenuList>\n\n        {!isPreOrder() && (<div>\n        <MenuItem \n          className={ order.AwaitingDispatch? 'awaitingDispatch': ''}\n          onClick={awaitingDispatchHandler}>\n          <ListItemIcon>\n            <UilClock/>\n          </ListItemIcon>\n          <ListItemText>Ожидает отгрузки</ListItemText>\n        </MenuItem>\n        <MenuItem \n        className={ order.NeedAttention? 'needAttention': ''}\n        onClick={needAttentionHandler}>\n          <ListItemIcon>\n            <UilExclamationTriangle/>\n          </ListItemIcon>\n          <ListItemText>Требует внимания</ListItemText>\n        </MenuItem>\n        <Divider/>\n        <MenuItem>\n          <ListItemIcon>\n            <UilArchive/>\n          </ListItemIcon>\n          <ListItemText>\n            <DeleteOrderConfirmDialog onConfirmF={transferOrderToArchive}/>  \n          </ListItemText>\n        </MenuItem>\n        </div>)}\n\n\n        { isPreOrder() && (<div>\n         <MenuItem>\n         <ListItemIcon>\n          <UilFileCheck/> \n         </ListItemIcon>\n         <ListItemText onClick={transferOrderToPriority}>\n            В очередность\n         </ListItemText>\n       </MenuItem>\n\n        <MenuItem sx={{ color: 'var(--danger)', 'svg': {\n          color: 'var(--danger)'\n        }}}>\n          <ListItemIcon>\n            <UilTrashAlt/>\n          </ListItemIcon>\n          <ListItemText onClick={deleteOrderHandler}>Удалить предазказ</ListItemText>\n        </MenuItem>\n        </div>)}\n        \n      </MenuList>\n      </ClickAwayListener>\n    </Paper>\n  </Popper>\n\n  \n  )\n}\nexport default OrderActionsMenu;","import { useContext, useCallback, useState, useRef } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_USERS } from '../../hasura-queries/getUsers';\nimport { GET_ORDER_BY_ID } from './queries/GetOrderByID'\nimport { PUSH_DOCS_ARRAY } from './queries/MutationOrderDocs'\nimport { useMutation, useQuery } from \"@apollo/client\";\n\n//components\nimport Composition from \"./Composition\";\nimport Info from \"./Info\";\nimport EditableInfo from \"./EditableComponents/EditableInfo\";\nimport Docs from './Docs/Docs';\nimport CommentsList from \"./Comments/CommentsList\";\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport './sass/index.sass';\nimport { Typography, Button, Box } from '@mui/material'\nimport { UilPlus, UilEditAlt, UilEllipsisH } from '@iconscout/react-unicons';\nimport OrderActionsMenu from \"./OrderActions/OrderActionsMenu\";\n\nfunction orderStatus(data){\n    // add a note to the title if this is a pre-order\n    if (data.OrderStatusID === 1) return ' | Предзаказ';\n    if (data.OrderStatusID === 3) return ' | В архиве';\n}\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    // Add new Order Item Dialog\n    const [OIDialog, setOIDialog] = useState(false)\n\n    //OrderActions Dropdown menu\n    const [OAMenu, setOAMenu] = useState(false);\n    const OAMenuRef = useRef(null);\n\n    const [pushDocs] = useMutation(PUSH_DOCS_ARRAY);\n    const orderID = useParams().id\n\n    const S3Upload = useCallback(acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        store.uploadFile(acceptedFiles).then(\n            (res) => {\n                if (res.status !== 200) console.log('S3 file upload error')\n                else{\n                    let m = []\n                    for (var i=0;  i<res.data.length; i=i+2 ){\n                        m.push({\n                            'Key': res.data[i].key,\n                            'OrderID': orderID,\n                            'FileName': res.data[i].originalname,\n                        })\n                    }\n                    pushDocs({ variables: {'objects': m} })\n                } \n                setOnUploadFiles([])\n                refetch();\n                }\n            \n        )\n      }, [])\n\n    var { data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID} });\n    const { data: users = []} = useQuery(GET_USERS);\n    const {getRootProps, isDragActive} = useDropzone({className: 'dropzone', onDrop: S3Upload });\n    \n    function showOrderActions(){\n        if ([1,2,4].includes(store.user.AccessLevelID)) return true\n    }\n\n    return(\n    <div> \n        {isFileOnDropzone(isDragActive)}\n        { data.erp_Orders ? (<>\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n          <div className='LeftSideContent'>\n\n              <div className=\"page-header\">\n                <Typography sx={{ fontWeight: 600, fontSize: '1rem'}}>\n                    {data.erp_Orders[0].Entity} __ {data.erp_Orders[0].City} \n                    <span className=\"preorderTitle\">{orderStatus(data.erp_Orders[0])}</span>\n                </Typography>\n\n                {showOrderActions() && <Box className='orderActions_box'>\n                  {editState && \n                  <Button variant=\"iconic\" onClick={() => setOIDialog(true)}>\n                    <UilPlus/>\n                  </Button>}\n                  <Button variant=\"iconic\" onClick={() => setEditState(!editState)}>\n                      <UilEditAlt/>\n                  </Button>\n                  <Button aria-haspopup=\"true\" ref={OAMenuRef} variant=\"iconic\" onClick={() => setOAMenu(true)}>\n                      <UilEllipsisH/>\n                  </Button>\n                </Box>}\n              </div>\n\n              <div className=\"Composition\">  \n                <Composition \n                  data={data.erp_Orders[0].OrderItems} \n                  editState={editState}\n                  refetch={refetch}\n                  OIDialog={OIDialog}\n                  setOIDialog={setOIDialog}\n                  orderID= {orderID} /> \n              </div>\n\n              <CommentsList \n              orderID={orderID} \n              user={store.user} \n              data={data.erp_Orders[0].Comments}/> \n\n              <Docs data={data.erp_Orders[0].Docs} \n              onUpload={onUploadFiles} \n              editState = {editState} \n              refetch={refetch} />\n          </div>\n\n          <div className=\"Info\">\n            {editState? <EditableInfo \n            data={data.erp_Orders[0]} \n            orderID={orderID} refetch={refetch} \n            users={users.erp_Users} /> : (\n\n            <Info data={data.erp_Orders[0]} \n            editState = {editState} \n            orderID={orderID} \n            />\n            )}\n          </div>\n\n          <OrderActionsMenu\n          refetch={refetch}\n          order={data.erp_Orders[0]}\n          OAMenu={OAMenu} \n          setOAMenu={setOAMenu}\n          OAMenuRef={OAMenuRef}\n          />\n\n        </section> \n        </>): null }\n    </div>\n    )\n}\n\nexport default OrderLayout","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervalsPools(where: {entrance: {_gte: $gte,  _lte: $lte}}) {\n        entrance\n        exit\n        card\n        interval\n        status\n      }\n    }\n  }\n}  \n`\n\n\n","\nexport function daysInMonth (selectedMonth) {\n    // количество дней в текущем месяце\n      const [month, year] = selectedMonth\n      return new Date(year, month+1, 0).getDate();\n}\n\n\n  \n\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './functions'\nimport sass from './attendance.module.sass'\n\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  let columnsList = [\n      {\n      Header: 'Сотрудник',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'Итого',\n      Cell: row => {\n        var hours = 0;\n        const intervals = row.row.original.intervalsPools\n        intervals.forEach( interval => {\n          hours += interval.interval \n        });\n\n        //вычетаем время на обед\n        hours -= timeDeduction/60 * intervals.length\n\n        return <div>{hours.toFixed(0)}</div>\n      }\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => {\n        const day1 = row.column.Header\n\n        const [entrance, exit, interval, status] = getIntervalData(day1, row.row.original.intervalsPools, timeDeduction)\n        \n        return (\n          <div className={\"status-\"+ status}> \n            <div>{ entrance }</div> \n            <div>{ exit }</div>\n            <div className={sass.interval}>{ interval }</div>\n          \n          </div>\n        )\n      }\n    })\n  }\n  return columnsList\n}\n\n\n\nfunction getIntervalData(day, intervals, timeDeduction){\n\n    // конвертация float в часы и минуты\n    function convertInterval(number, timeDeduction){\n        //вычетаем время на обед\n        number -= timeDeduction/60\n\n        var hour = Math.floor(number);\n        var decpart = number - hour;\n        var min = 1 / 60;\n\n        // Round to nearest minute\n        decpart = min * Math.round(decpart / min);\n        var minute = Math.floor(decpart * 60) + '';\n\n        // Add padding if need\n        if (minute.length < 2) {\n            minute = '0' + minute; \n        }\n\n        return hour + ':' + minute;\n    }\n\n    function getMinutes(t){\n        const minutes = t.getMinutes()\n        return (minutes < 10) ? `0${minutes}` : minutes\n    }\n\n    const e = intervals.find(el =>  new Date(el.entrance).getDate() == day)\n\n    if (e) {\n        const _entr = new Date(e.entrance)\n        const _exit = new Date(e.exit)\n\n        const entrance = _entr.getHours()+':'+ getMinutes(_entr)\n        const exit = _exit.getHours()+':'+ getMinutes(_exit)\n        const interval = convertInterval(e.interval, timeDeduction)\n\n        return [entrance, exit, interval, e.status]\n    }   else return [null, null, null, null]\n}\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nfunction monthAdd(date, month) {\n    // функция используется для корректного вычитания месяцев в chooseMonth\n    var temp = date;\n    temp = new Date(date.getFullYear(), date.getMonth(), 1);\n    temp.setMonth(temp.getMonth() + (month + 1));\n    temp.setDate(temp.getDate() - 1); \n  \n    if (date.getDate() < temp.getDate()) { \n        temp.setDate(date.getDate()); \n    }\n    return temp;    \n  }\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i< 6; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div onClick={selectedMonthHandler} \n                    className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                    date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>обед</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>мин</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>норма</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>ч</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","\nimport  { useContext, useMemo, useEffect, useReducer } from 'react'\nimport { Context } from '../../index'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\n\nimport Table, { generateColumns } from './table'\nimport { getVarsForSubscription } from './functions'\n\n\nimport './index.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport { UilSearch, UilConstructor } from '@iconscout/react-unicons'\nimport sass from './attendance.module.sass'\n\nvar attendanceData = null;\n// учет рабочего времени\nconst Attendance = props => {\n    const date = new Date()\n    const { store } = useContext(Context);\n\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 'filtredData':\n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [date.getMonth()-1, date.getFullYear()],\n    });\n    const { timeDeduction, selectedMonth, filtredData } = state;\n\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n    const { loading } = useQuery(GET_USERS, { variables: { gte, lte }, onCompleted: (options) => {\n        attendanceData = options.attendance_users_aggregate.nodes;\n        dispatch({ type: 'filtredData', payload: attendanceData})\n    } });\n    \n    useEffect(() => {\n        return () => {\n            attendanceData = null\n        };\n    }, []);\n\n    function filteringAlg(user, keyword){\n        if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else return false\n    }\n\n    const onChangeSearch = (e) => {\n        const keyword = e.target.value.trim();\n\n            if (keyword !== '') {\n              const result = attendanceData.filter((user) => filteringAlg(user, keyword))\n              dispatch({ type: 'filtredData', payload: result })\n            } else dispatch({ type: 'filtredData', payload: attendanceData})\n    }\n\n    const columns = useMemo(\n        () => generateColumns(selectedMonth, timeDeduction), [selectedMonth, timeDeduction]\n    )\n\n    return(\n    <div className={sass.attendanceLayout}>\n            <div className=\"pageLayout__header\">\n                <UilConstructor className='pageLayout__icon'/>\n                <div className='pageLayout__title'>Рабочее время</div>                    \n            </div> \n            <ReportConfigurator state={state} dispatch={dispatch} />\n\n        <div className={sass.tableWrapper}>\n\n            <div className={sass.tableSearchInput}>\n                <UilSearch/>\n                <input type='text' placeholder=\"поиск (номер счета или организация)\" onChange={ (e) => onChangeSearch(e) } autoFocus/>\n            </div>\n            \n            {filtredData && columns && <Table columns = {columns} data = {filtredData} className={sass.attendanceTable} /> }\n\n             {/* условное обозначение */}\n             <div className={`${sass.tableFooter} legend`}>\n                <div className=\"status-101\">Прерванный рабочий день</div>\n                <div className=\"status-102\">Не отмечен конец смены</div>\n                <span className=\"reportMeta\">\n                    Отчет за {selectedMonth[0] + 1} месяц {selectedMonth[1]} года \n                </span>\n\n            </div>\n\n        </div>\n    </div>\n    )\n}\n\nexport default Attendance","import sass from './index.module.sass'\nimport { Button, Typography } from \"@mui/material\"\n\nimport { UilWrench, UilPlus, UilArchive } from '@iconscout/react-unicons'\n\nconst Reclamation = (props) => {\n\n  return(\n    <div className={sass.reclatationLayout}>\n       <div className='pageLayout__header'>\n        <UilWrench className='pageLayout__icon'/>\n        <div className=\"pageLayout__title\">Рекламация</div>\n\n        <div className='pageLayout__actions'>\n          <Button variant='iconic'>\n            <UilPlus/>\n          </Button>\n          <Button variant='iconic'>\n            <UilArchive/>\n          </Button>\n        </div>\n      </div>\n\n    </div>\n  )\n}\nexport default Reclamation","import {Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport LoginForm from '../components/LoginForm';\nimport OrderListLayout from \"../components/OrderListLayout\";\nimport OrderLayout from \"../components/OrderLayout\";\nimport Attendance from '../components/AttendanceLayout'\nimport Reclamation from \"../components/ReclamationLayout\";\n\nconst AppRouter = () => {\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/reclamation' component={Reclamation}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            #if required route was not found\n            <Redirect     to=\"/\" />\n            {/* <PrivateRoute path='/recently' component={() => <PriorityLayout props={isRecently}/>} store={props.store}/> */}\n        </Switch>\n    )\n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\nconst BaseLayout = (props) => {\n    return(\n        <div className=\"base-container\">\n                <AppRouter/> \n                {props.children}\n        </div>\n    )\n}   \n\nexport default BaseLayout;","import { useEffect } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DARK_CLASS = \"dark\";\n\nexport function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport const SystemPreferTheme = (appTheme, setAppTheme) => {\n    // theme can will be dark, light or system (used for corrent displaying selected theme in preferences)\n    // mode can be only dark or light (used for material ui pallete)\n    const systemPrefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\"}, undefined);\n    var mode = appTheme\n\n    function changeTheme(newTheme){\n        var expires = new Date()\n        expires.setFullYear(expires.getFullYear()+1)\n        document.cookie = `theme=${newTheme}; expires=${expires}; path=/`\n        setAppTheme(newTheme)\n    }\n\n    useEffect(() => {\n      if (appTheme === 'dark') document.documentElement.classList.add(DARK_CLASS)\n      else if (appTheme === 'light') document.documentElement.classList.remove(DARK_CLASS)\n\n      else if (appTheme === 'system'){\n        if (systemPrefersDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n      };\n    }, [appTheme, systemPrefersDark]);\n\n    if (appTheme === 'system'){\n      if (systemPrefersDark) mode = 'dark'\n      else mode = 'light'\n    }\n    return {appTheme, mode, changeTheme}\n};\n","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../../../index';\nimport { useHistory } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { styled } from '@mui/material/styles';\n\nimport { UilSun, UilMoon, UilDesktop, UilSetting } from '@iconscout/react-unicons'\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material/';\n\nimport sass from './index.module.sass'\nimport { SystemPreferTheme } from '../../_core/SystemPreferTheme';\n\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    border: '1px solid var(--border)',\n    padding: 8,\n    textTransform: 'none',\n    '&:not(:first-of-type)': {\n\n    },\n    '&:first-of-type': {\n      borderTopLeftRadius: 'var(--br)',\n      borderBottomLeftRadius: 'var(--br)',\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 'var(--br)',\n      borderBottomRightRadius: 'var(--br)',\n    },\n  },\n}));\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function SettingsDrawer() {\n  const {store} = useContext(Context);\n  const [state, setState] = useState(false);\n  const history = useHistory()\n  const {changeTheme} = SystemPreferTheme(store.UItheme.state, store.UItheme.dispatch)\n\n  async function logout(){\n    await store.logout(); \n    history.push('/login')\n  }\n\n  const themeHandler = (e, newTheme) => {\n    changeTheme(newTheme)\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open);\n  };\n  \n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 400 }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n    >\n\n      <List>\n        <ListItem className={sass.user}>\n        <div>Добро пожаловать, {store.user.FirstName} {store.user.LastName}!</div>\n        </ListItem>\n\n        <ListItem >\n          <StyledToggleButtonGroup\n            className={sass.themeToggleButtons}\n            color=\"primary\"\n            value={getCookie('theme')}\n            exclusive\n            fullWidth\n            onChange={themeHandler}\n            >\n            <ToggleButton value=\"light\"> <UilSun/> Light</ToggleButton>\n            <ToggleButton value=\"system\"> <UilDesktop/>System</ToggleButton>\n            <ToggleButton value=\"dark\"> <UilMoon/> Dark</ToggleButton>\n          </StyledToggleButtonGroup>\n        </ListItem>\n\n      </List>\n      \n      <div className={sass.logoutButton}>\n        <button onClick={logout}>Выйти</button>\n      </div>\n    </Box>\n  );\n\n  return (\n    <div>\n          <div onClick={toggleDrawer(true)}>\n            <UilSetting/>\n          </div>\n          <Drawer\n            open={state}\n            onClose={toggleDrawer(false)}\n          >\n            {list('left')}\n          </Drawer>\n    </div>\n  );\n}","// import { observer } from 'mobx-react-lite';\nimport { NavLink} from 'react-router-dom';\nimport './index.sass';\n\nimport { UilSortAmountDown, UilWrench, UilConstructor} from '@iconscout/react-unicons';\nimport SettingsDrawer from './SettingsDrawer/SettingsDrawer';\n\nconst Sidebar = () => {\n    return(\n        <div className='Sidebar noprint'>\n\n            <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"action-icon\"><UilSortAmountDown/></NavLink>\n            <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"action-icon\"><UilWrench/></NavLink>\n            <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"action-icon\"><UilConstructor/></NavLink>\n                \n            <div className=\"action-icon settings\">\n                <SettingsDrawer/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Sidebar;","import { useContext, useState, useMemo } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\n\n\nimport {getCookie, SystemPreferTheme} from './components/_core/SystemPreferTheme'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { muicomponents } from './materialStyles'\n\nfunction App() {  \n  const { store } = useContext(Context);\n  const [appTheme, setAppTheme] = useState(() => getCookie('theme'))\n  store.setUItheme(appTheme, setAppTheme)\n  const {mode} = SystemPreferTheme(appTheme, setAppTheme)\n  \n  const getDesignTokens = (mode) => ({\n    palette: {\n      mode,\n      ...(mode === 'light'\n        ? {\n            // palette values for light mode\n            primary: {\n              main: '#3763FE',\n              light: '#E7E9FB',\n            },\n            secondary: {\n              main: '#e5534b',\n            }\n          }\n        : {\n            // palette values for dark mode\n            primary: {\n              main: '#99affc',\n              light: '#43435c',\n            },\n            secondary: {\n              main: '#e5534b',\n            },\n           \n          }),\n    },\n    typography: {\n      fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',sans-serif`,\n      subtitle1: {\n        fontSize: '.9rem',\n        fontFamily: \"IBM PLEX MONO\"\n      }\n    },\n  });\n\n  var theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  theme = createTheme(theme, muicomponents(theme));\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        \n        { store.inMemoryToken && <Sidebar/> }\n          <BaseLayout/>\n        \n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default observer(App);\n","import { palette } from \"@mui/system\";\n\nexport const muicomponents = (theme) => ({\n  components: {\n    MuiDialog: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0) !important',\n          borderRadius: 'var(--br) !important',\n        }\n      }\n    },\n    MuiDialogTitle: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n        }\n      }\n    },\n\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n        }\n      },\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          fontSize: '.8rem'\n        }\n      }\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          minWidth: '25px !important',\n          'svg':{\n            width: '17px'\n          },\n          'path':{\n            strokeWidth: .8,\n            stroke: 'var(--L0)'\n          },\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          textTransform: 'none !important',\n        },\n        textInfo: {\n          color: 'var(--lowContrast) !important',\n        },\n        iconic: {\n          minWidth: '40px',\n          padding: '5px',\n          'path': {\n            color: theme.palette.text.primary,\n            strokeWidth: .8,\n            stroke: 'var(--L0)'\n          },\n          '&:hover': {\n            background: 'var(--accentLight)',\n          }\n        }\n      },\n      defaultProps: {\n        disableElevation: true,\n        disableRipple: true,\n      },\n    },\n\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n        autoComplete: 'off',\n      }\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          color: 'var(--lowContrast) !important',\n        }\n      },\n      defaultProps: {\n        shrink: true,\n      }\n    },\n    MuiFilledInput: {\n      defaultProps: {\n        disableUnderline: 'true',\n        size: 'small',\n      },\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          border: '1px solid var(--borderLight)',\n          borderRadius: '10px',\n          ':hover': {\n            background: 'var(--L1)',\n          },\n        },\n\n      }\n    },\n    MuiInput: {\n      defaultProps: {\n        disableUnderline: 'true'\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          color: 'var(--highContrast) !important',\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          border: 'none',\n        }\n      }\n    },\n    MuiPopover: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0)',\n          borderRadius: 'var(--br) !important'\n        }\n      }\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          fontSize: '.8rem',\n          boxSizing: 'border-box',\n          border: 'none !important',\n          outline: 'none !important',\n          boxShadow: 'none !important',\n          padding: 0,\n        }\n      }\n    },\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiCheckbox: {\n      defaultProps: {\n        disableRipple: true\n      }\n    }\n  },\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/s3/upload'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n// $api.interceptors.request.use( (config) => {\n//     config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n//     return config;\n// })\n// $api.interceptors.response.use( (config) => {\n//     return config;\n// }, async (error) => {\n//     const originalRequest = error.config;\n//     if(error.response.status === 401 && error.config && !error.config._isRetry){\n//         originalRequest._isRetry = true;\n//         try {\n//             const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n//             localStorage.setItem('token', response.data.accessToken);\n//             return $api.request(originalRequest);\n//         } catch (e) {\n//             console.log('Авторизация не прошла. Попробуйте снова');\n//         }\n//     }\n       \n// })\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  { email, password })\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isLoading = false;\n    UItheme = {\n        state: null,\n        dispatch: null\n    };\n    inMemoryToken = undefined;\n\n    priorityTab = 1;\n    cachedOrders = [];\n    cachedPreOrders = [];\n    \n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setCachedOrders(array){\n        this.cachedOrders = array\n    }\n    setCachedPreOrders(array){\n        this.cachedPreOrders = array\n    }\n    setUItheme(state, dispatch){\n        this.UItheme = { state, dispatch }\n    }\n    async login(email, password){\n        try {\n            const res = await AuthService.login(email, password)\n            if (res.status === 200){\n              this.setInMemoryToken(res.data.accessToken)\n              this.setUser(res.data.user);\n              return res\n            }\n            \n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            this.setInMemoryToken(null)\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n            (r) => {\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            await axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n              (res) => {\n                if (res.status === 200){\n                  console.log(res)\n                  this.setUser(res.data.user);\n                  this.setInMemoryToken(res.data.accessToken)      \n                  console.log('token validation complited')  \n                }\n              }\n            )\n        } catch (e) {\n            console.log(e)\n        } finally {\n            this.setLoading(false);\n            return this.inMemoryToken\n        }\n    }\n\n    async uploadFile(acceptedFiles){\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/s3/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            }\n          });\n        return res\n    }\n\n    async downloadFile(file){\n        await fetch(`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`)\n    }\n\n    async deleteFile(key, deleteFileMutation){\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/s3/delete/${key}`);\n\n        if (res.status === 200){\n            const hasuraRes = await deleteFileMutation({variables: {\n                'key': key,\n            }})\n            console.log(hasuraRes.data)\n        }\n    }\n\n    pageParams = [\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Рекламация',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Рабочее время',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n}\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport jwt from 'jsonwebtoken'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\n\n\n//apollo \nimport { WebSocketLink} from 'apollo-link-ws';\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  from,\n} from \"@apollo/client\";\n\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\n\nlet webSocketLink = new WebSocketLink({\n  uri: process.env.REACT_APP_HASURA_WS,\n  options: {\n    reconnect: true,\n    lazy: true,\n    reconnectionAttempts: 5,\n    inactivityTimeout: 10000000,\n    connectionCallback: async (error) => { error && console.log(error) },\n    connectionParams: () => ({\n      headers: {\n        'Authorization' : `Bearer ${store.inMemoryToken}`\n      }\n    }),\n    \n  }\n})\n\nconst asyncTokenValidation = setContext( async (_, {headers, ...context}) => {\n  var token = null \n\n  if (Date.now() >= jwt.decode(store.inMemoryToken).exp * 1000 ) {\n    console.log('Existed access token was expired, request for new token..')\n    token = await store.getNewToken()\n  }\n\n  return {\n    headers: {\n      ...headers,\n      ...(token ? {Authorization: `Bearer ${token}`} : {}),\n    },\n    ...context,\n  };\n});\n\n\nconst apolloClient = new ApolloClient({\n  link: from([ asyncTokenValidation, webSocketLink ]),\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n        erp_CheckListUnits: {\n          keyFields: ['CheckListUnitID']\n        },\n        erp_Comments: {\n          keyFields: ['CommentID']\n        }\n    },\n  })\n})\n\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderListLayout\":\"main_OrderListLayout__3KzFa\",\"tableWrapper\":\"main_tableWrapper__3lHmG\",\"tableSearchInput\":\"main_tableSearchInput__3VMNw\",\"action-icon\":\"main_action-icon__1owGu\",\"tableFooter\":\"main_tableFooter__1Egk2\",\"tableMain\":\"main_tableMain__GJwKh\",\"awaitingDispatch\":\"main_awaitingDispatch__ZF9uh\",\"needAttention\":\"main_needAttention__io1X5\",\"unpaidOrder\":\"main_unpaidOrder__22HJx\",\"customerTableInfo\":\"main_customerTableInfo__JKJM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__1O75u\",\"quantity\":\"composition_quantity__2YtVw\",\"unitName\":\"composition_unitName__3YGne\",\"addOrderItem\":\"composition_addOrderItem__2AnFf\",\"quantityInput\":\"composition_quantityInput__2zcBe\",\"Unit\":\"composition_Unit__2Fqng\",\"index\":\"composition_index__2aXz6\",\"fullName\":\"composition_fullName__NObJ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attendanceLayout\":\"attendance_attendanceLayout__3ZkJT\",\"tableWrapper\":\"attendance_tableWrapper__32pvV\",\"attendanceTable\":\"attendance_attendanceTable__36c11\",\"interval\":\"attendance_interval__3CNBY\",\"status-101\":\"attendance_status-101__3aCi6\",\"tableSearchInput\":\"attendance_tableSearchInput__hHxoD\",\"tableFooter\":\"attendance_tableFooter__3W2nf\"};"],"sourceRoot":""}