{"version":3,"sources":["components/OrderListLayout/main.module.sass","components/Attendance/attendance.module.sass","components/OrderListLayout/Search/search.module.sass","components/OrderListLayout/Recently/recently.module.sass","components/OrderListLayout/PreOrders/preorders.module.sass","components/LoginForm/index.js","components/OrderListLayout/reducer.js","components/OrderListLayout/queries/getOrders.js","components/OrderListLayout/UniversalTable/columnList.js","components/OrderListLayout/UniversalTable/TableMarkup.jsx","components/OrderListLayout/PreOrders/MutationOrderStatus.js","components/OrderListLayout/PreOrders/index.js","components/OrderListLayout/Search/index.js","components/OrderListLayout/Search/filter.js","components/OrderListLayout/Priority/index.js","components/OrderListLayout/Recently/index.jsx","components/OrderListLayout/Recently/spreadOrders.js","components/BaseHeader/MutationInsertOrder.js","components/BaseHeader/ActionsHeader.js","components/OrderListLayout/index.jsx","components/OrderLayout/queries/GetOrderByID.js","components/OrderLayout/queries/MutationOrderDocs.js","components/OrderLayout/queries/MutationOrderItem.js","components/OrderLayout/Composition.jsx","components/OrderLayout/queries/MutationOrderInfo.js","components/OrderLayout/Info.jsx","components/OrderLayout/EditableComponents/EditableInfo.jsx","components/OrderLayout/queries/MutationCheckListUnit.js","components/OrderLayout/CheckList.jsx","components/OrderLayout/Docs.jsx","components/OrderLayout/Comments.jsx","components/OrderLayout/Dropzone.js","components/OrderLayout/index.jsx","components/Attendance/queries/getUsers.js","components/Attendance/functions.js","components/Attendance/table.js","components/Attendance/ReportConfigurator.jsx","components/BaseHeader/index.js","components/Attendance/index.js","routers/PrivateRoute.js","routers/Router.js","components/BaseLayout/index.js","components/Sidebar/DarkToggle.js","components/Sidebar/Sidebar.js","App.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","index.js","components/OrderLayout/sass/composition.module.sass"],"names":["module","exports","LoginForm","props","useState","email","setEmail","password","setPassword","store","useContext","Context","history","useHistory","className","TextField","label","onChange","e","target","value","type","Button","variant","width","onClick","login","then","push","reducer","state","action","payload","GetOrdersSubscription","gql","GET_USERS","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","to","OrderID","map","item","Name","OrderItemID","Quantity","order","moment","ShippingDate","format","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","mainsass","tableMain","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","render","row","awaitingDispatch","original","AwaitingDispatch","console","log","getRowProps","cells","cell","getCellProps","MUTATE_ORDER_STATUS","PreOrders","panel","showPreOrders","expanded","setExpanded","useMutation","mutationOrderStatus","dt","preOrders","newColumnList","splice","indexOf","variables","onClickTransfer","sass","preordersContainer","active","Accordion","event","newExpanded","setShowPreOrders","AccordionSummary","preordersHeading","AccordionDetails","useStyles","makeStyles","theme","formControl","minWidth","borderRadius","border","padding","select","fontSize","color","menuItem","Search","dispatch","users","classes","tableSearchInput","placeholder","trim","autoFocus","defaultValue","searchKeyword","filter","filterPlaceholder","FormControl","Select","name","managerFilter","disableUnderline","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","filteringAlg","keyword","finded","rest","arg","toLowerCase","includes","array","result","Entity","newOrders","ord","ManagerID","Priority","incomingOrders","useMemo","filtredData","tableWrapper","Recently","sort","a","b","spreadData","orders","days","subtract","dateCreation","CreatingDate","split","date","objs","spread","heading","recentlyTable","INSERT_ORDER","ActionsHeader","userID","createNewOrder","createOrderHandler","res","insert_erp_Orders","returning","editOrderHandler","setEditState","editState","createOrder","data-for","data-tip","addOrder","accessLevel","editOrderBtn","undefined","OrderListLayout","useReducer","selectedTab","priorityTab","filtredOrders","useSubscription","onSubscriptionData","options","subscriptionData","erp_Orders","forEach","OrderStatus","ID","fetchPolicy","nextFetchPolicy","loading","error","useQuery","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","a11yProps","tabHeight","AntTabs","withStyles","root","borderBottom","minHeight","height","indicator","borderTopLeftRadius","borderTopRightRadius","backgroundColor","Tabs","AntTab","textTransform","opacity","transition","selected","Tab","disableRipple","flexGrow","newValue","setPriorutyTab","aria-label","erp_Users","GET_ORDER_BY_ID","PUSH_DOCS_ARRAY","DELETE_ORDER_FILE","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","initialState","fullName","quantity","OrderComposition","refetch","orderID","deleteOrderItemMutation","insertOrderItemMutation","deleteItem","itemID","orderItemID","useEffect","insertOrderItem","parseInt","AnimatePresence","el","motion","div","initial","animate","exit","Unit","firstRow","FullName","orderItemActions","itemData","find","editItem","addOrderItem","size","autoComplete","quantityInput","multiline","fullNameInput","button","whileHover","scale","whileTap","pushOrderItemButton","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","formControlLabel","CustomCheckbox","margin","checked","Checkbox","defaultChecked","OrderMeta","mutateAwaitingDispatch","OrderNumber","City","Comment","FormControlLabel","control","optimisticResponse","__typename","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","InputProps","inputComponent","MUTATE_CHECKLIST_UNIT","CheckList","updateCheckListUnit","propsData","JSON","parse","stringify","Point","units","IsComplited","classList","toggle","CheckListUnitID","IsCompluted","toggleCheckListUnit","Docs","onUpload","open","setOpen","fileOnDelete","setFileOnDelete","deleteFileMutation","onFileDeleteInput","useRef","handleClose","deleteFile","current","Key","attachedFiles","file","handleClickOpen","FileName","href","process","files","path","onUploadFiles","Dialog","onClose","maxWidth","DialogTitle","DialogContent","dividers","DialogContentText","gutterBottom","fullWidth","DialogActions","Comments","isFileOnDropzone","isDragActive","document","getElementById","add","y","remove","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","search","get","pushDocs","useParams","S3Upload","useCallback","acceptedFiles","uploadFile","status","m","key","originalname","useDropzone","onDrop","getRootProps","duration","Heading","Composition","CheckListUnits","Info","daysInMonth","selectedMonth","month","year","Date","getDate","getIntervalData","day","intervals","timeDeduction","getMinutes","t","minutes","entrance","_entr","_exit","getHours","number","hour","Math","floor","decpart","min","round","minute","convertInterval","interval","monthAdd","temp","getFullYear","getMonth","setMonth","setDate","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","BaseHeader","pageParams","icon","title","attendanceData","Attendance","Error","toString","replace","gte","lte","getVarsForSubscription","onCompleted","attendance_users_aggregate","nodes","onChangeSearch","lastname","startsWith","firstname","Cell","hours","intervalsPools","generateColumns","getPageParams","window","location","pathname","attendanceTable","tableFooter","PrivateRoute","Component","component","isLoaded","setisLoaded","isAuth","setisAuth","checkAuth","inMemoryToken","AppRouter","exact","BaseLayout","DARK_CLASS","DarkToggle","systemPrefersDark","useMediaQuery","query","prefersDark","setIsDark","isDark","documentElement","display","Sidebar","Pane","activeClassName","logout","observer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","axios","create","withCredentials","baseURL","interceptors","request","use","config","Authorization","localStorage","getItem","response","originalRequest","_isRetry","setItem","accessToken","AuthService","post","Store","isLoading","preloader","alignItems","justifyContent","Spinner","makeAutoObservable","this","bool","token","setInMemoryToken","setUser","setAuth","message","removeItem","r","setLoading","formData","FormData","append","fetch","hasuraRes","url","createContext","webSocketLink","WebSocketLink","uri","reconnect","lazy","reconnectionAttempts","inactivityTimeout","connectionCallback","connectionParams","asyncTokenValidation","setContext","_","context","now","jwt","decode","exp","getNewToken","apolloClient","ApolloClient","link","from","cache","InMemoryCache","typePolicies","keyFields","ReactDOM","client","sessionData","dataset","session","Provider"],"mappings":"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","file":"static/js/main.f7a797b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"main_tableWrapper__3lHmG\",\"tableSearchInput\":\"main_tableSearchInput__3VMNw\",\"action-icon\":\"main_action-icon__1owGu\",\"tableFooter\":\"main_tableFooter__1Egk2\",\"tableMain\":\"main_tableMain__GJwKh\",\"awaitingDispatch\":\"main_awaitingDispatch__ZF9uh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"attendance_tableWrapper__3XX7V\",\"attendanceTable\":\"attendance_attendanceTable__2Ngds\",\"interval\":\"attendance_interval__2RRqG\",\"status-101\":\"attendance_status-101__15BJ5\",\"tableSearchInput\":\"attendance_tableSearchInput__3Agga\",\"tableFooter\":\"attendance_tableFooter__3ztcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableSearchInput\":\"search_tableSearchInput__mHzTe\",\"filter\":\"search_filter__1BI6Q\",\"filterPlaceholder\":\"search_filterPlaceholder__2NcNB\",\"filterIndicator\":\"search_filterIndicator__Rfc0e\",\"circle\":\"search_circle__2PIMx\",\"pulsate\":\"search_pulsate__pgEiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"recently_heading__2gRdv\",\"recentlyTable\":\"recently_recentlyTable__3NJpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preordersContainer\":\"preorders_preordersContainer__1xfed\",\"active\":\"preorders_active__dhLVK\",\"preordersHeading\":\"preorders_preordersHeading__1U3jR\"};","import { useState, useContext } from 'react';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\nimport { Context } from '../../index';\n\nimport {TextField, Button} from '@material-ui/core';\nimport './LoginForm.sass'\nimport '../../theme.css'\n\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    const {store} = useContext(Context);\n    const history = useHistory();\n\n    // const setNotification = () => {\n    //     NotificationManager.error('Похоже вы ошиблись', '\t(ಥ﹏ಥ)', 3000);\n    // }\n\n    const login = (e) => {\n      store.login(email, password).then( () =>  history.push(\"/\") )\n\n    }\n    return(\n        <>\n              <div className='loginCard'>\n\n                    <TextField\n                    className='loginInput'\n                    label=\"Email\"\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                  <TextField\n                    label=\"Password\"\n                    type=\"password\"\n                    className='loginInput'\n                    onChange={e => setPassword(e.target.value) }\n                  />\n                  <Button\n                    className=\"Button\"\n                    variant=\"outlined\"\n                    width='300px'\n                    onClick={login}\n                  >Войти</Button>\n              </div>\n     \n        {/* <NotificationContainer/> */}\n        </>\n    );\n}\n\nexport default LoginForm\n","export const initialState = (selectedTab) => ({\n    orders: [],\n    preOrders: [],\n    selectedTab : selectedTab,\n    searchKeyword: '',\n    managerFilter: 0,\n    filtredOrders: [],\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'managerFilter': \n        case 'filtredOrders':\n            return {...state, [action.type]: action.payload };\n\n    }\n}","import gql from 'graphql-tag'; \n\n// Выбираем заказы находящиеся только в Прездаказах и в производстве \n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription GetOrders($search: String) {\n    erp_Orders(where: {OrderStatusID: {_neq: 3} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n      }\n\n    }  \n  }\n`\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n  }\n}\n`","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\n\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ''\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row: any, counter) => counter +1\n    },\n    {\n      Header: 'Наим.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length == 0) return <Link to={`/orders/${data.OrderID}`}><div>пустота...</div></Link>\n\n        else return (<Link to={`/orders/${data.OrderID}`}>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </Link>)\n      }\n      \n    },\n    {\n      Header: 'Кол-во',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'Отгрузка',\n      accessor: (order) => \n      <> { moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'Счет- оплата',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'Компания',\n      accessor: 'Entity',\n    },\n    {\n      Header: 'Гор.',\n      accessor: 'City',\n    },\n    {\n      Header: 'Мдж.',\n      accessor: data => <div className='priorityTable-manager'>{data.User.FirstName[0]}</div>,\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\n\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n    if (data.length == 0) return null;\n\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          const awaitingDispatch = row.original.AwaitingDispatch\n          console.log(awaitingDispatch)\n\n          return (\n               <tr className={awaitingDispatch ? mainsass.awaitingDispatch : ''} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!){\n    update_erp_Orders_by_pk(pk_columns: {OrderID: $OrderID}, _set: {OrderStatusID: 2}) {\n        OrderID\n    }\n  }\n\n`;","import { useState, useContext } from \"react\";\nimport { Context } from '../../../index'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport {Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport {UilAngleRight, UilPlus} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\n\nconst PreOrders = (props) => {\n    const { store } = useContext(Context);\n    const [expanded, setExpanded] = useState(store.showPreOrders);\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    let dt = props.preOrders\n    \n    const handleChange = panel => (event, newExpanded) => {\n        store.setShowPreOrders(newExpanded);\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const onClickTransfer = (data) => {\n        dt.splice(dt.indexOf(data), 1)\n        mutationOrderStatus({ variables: { OrderID: data.OrderID} })\n    }\n    var newColumnList = [...columnsList];\n\n    newColumnList.push({\n        Header: ' ',\n        accessor: data => \n        <div onClick={() => onClickTransfer(data)} className=\"square-button\"><UilPlus/></div>\n        ,\n      })\n   \n               \n    return(\n        <div className={expanded ? `${sass.preordersContainer} ${sass.active}` : sass.preordersContainer }>\n    \n          <Accordion expanded={expanded === true} onChange={handleChange(true)}>\n            <AccordionSummary>\n                <h6 className={sass.preordersHeading}>\n                    Предзаказы \n                    <span><UilAngleRight/></span>\n                </h6>\n            </AccordionSummary>\n            <AccordionDetails >\n                <Table  columns={newColumnList} data={props.preOrders}/>\n            </AccordionDetails>\n\n        </Accordion>\n        </div>\n    )\n}\nexport default PreOrders","import { UilSearch } from '@iconscout/react-unicons'\nimport sass from './search.module.sass'\n\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      minWidth: 70,\n      borderRadius: 'var(--br10)',\n      border: '1px solid var(--border)',\n      padding: '0 10px',\n    },\n    select: {\n        fontSize: '.8rem',\n        color: 'var(--text1)',\n    },\n    menuItem: {\n        fontSize: '.8rem',\n        color: 'var(--text2)',\n        fontSize: '.8rem',\n    },\n  }));\n\nconst Search = ({state, dispatch, users }) => {\n    const classes = useStyles();\n\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value.trim() }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter != 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>Выдача ограничена фильтром</p>\n            </div>\n        ) \n    }\n\n    return (\n        <>\n        <div className={sass.tableSearchInput}>\n            <UilSearch/>\n            <input type='text' placeholder=\"поиск (номер счета или организация)\" onChange={searchHandler} autoFocus defaultValue={state.searchKeyword}/>\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl className={classes.formControl}>\n                <Select\n                    name=\"managerFilter\"\n                    value={state.managerFilter}\n                    onChange={managerHandler}\n                    className={classes.select}\n                    disableUnderline={true}\n                >\n                    <MenuItem value={0} className={classes.menuItem} >Все</MenuItem>\n                    { users.map( (user) => \n                    <MenuItem  className={classes.menuItem} value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                    )}\n                \n                </Select>\n                </FormControl>\n            </div>)}\n        </div>\n\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","function filteringAlg(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // применить поиск по ключевому слову\n    if (keyword !== '') {\n        result = array.filter( (order) => filteringAlg(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //применить поиск по фильру\n    if (managerFilter != 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID == managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ data, users, incomingOrders, state, dispatch }) => {\n\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value.trim() }) \n    }\n    const columns = useMemo(\n        () => columnsList, []\n    )\n  \n    const filtredData = filter(data, state.searchKeyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            <Search state={state} dispatch={dispatch} users={users} incomingOrders={data} />\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\n\nimport Table from '../UniversalTable/TableMarkup'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport mainsass from '../main.module.sass'\nimport sass from './recently.module.sass'\n\nconst Recently = ({ data, state, dispatch, incomingOrders }) => {\n\n    data.sort((a, b) => b.ShippingDate > a.ShippingDate ? 1: -1);  \n\n    const spreadData = spread(data);\n\n    const columns = useMemo(\n        () => columnsList,\n        []\n    )\n\n    const filtredData = filter(spreadData[2].objs, state.searchKeyword)\n\n    return(\n        <div>\n            <div className={sass.heading}>Сегодня</div>\n            <Table columns={columns} data={spreadData[0].objs} className={sass.recentlyTable} />\n\n            <div className={sass.heading}>Вчера</div>\n            <Table columns={columns} data={spreadData[1].objs} className={sass.recentlyTable} />\n\n\n            <div className={sass.heading}>Остальные</div>\n            <div className={mainsass.tableWrapper}>\n                <Search state={state} dispatch={dispatch} incomingOrders={filtredData} />\n                { <Table columns = { columns } data = { filtredData } />}\n            </div>\n\n        </div>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Сегодня',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'Вчера',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': '',\n        'objs': [] \n        },\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.CreatingDate.split('T')[0]\n\n        if (dateCreation == days[0].date) days[0].objs.push(order);\n        else if (dateCreation == days[1].date) days[1].objs.push(order);\n        else days[2].objs.push(order);    \n    }\n\n    return days;\n};\n","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!, $isReclamation: Boolean!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID, IsReclamation: $isReclamation}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { useMutation } from '@apollo/client';\nimport { INSERT_ORDER } from './MutationInsertOrder'\n\nimport {UilPrint, UilPlus, UilBell, UilEditAlt} from '@iconscout/react-unicons';\nimport { UserIcon } from 'evergreen-ui';\n\n\n\nconst ActionsHeader = (props) => {\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n        'managerID':     props.userID,\n        'orderStatusID': 3,\n        'isReclamation':  false,\n    }})\n\n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            props.history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n\n    const editOrderHandler = () => {\n        props.setEditState(!props.editState)\n    }\n\n    const editOrderBtn = () => {\n        if (props.accessLevel == 2){\n            const editIconClass = () => props.editState ? 'action-icon active': 'action-icon'\n            return <div data-for='global' data-tip=\"Добавить\" className={editIconClass()} onClick={editOrderHandler}><UilEditAlt/></div>\n        }\n    }\n\n    const addOrder = () => {\n        if (props.createOrder){\n            return <div data-for='global' data-tip=\"Добавить\" onClick={createOrderHandler} className=\"action-icon\"><UilPlus/></div>\n        }\n    }\n    return(\n        <div className=\"action-block\">\n            {/* <div data-for='global' data-tip=\"Распечатать\" className=\"action-icon\"><UilPrint/></div> */}\n            {addOrder()}\n            {editOrderBtn()}\n            {/* <div data-for='global' data-tip=\"Уведомления\" className=\"action-icon\"><UilBell/></div> */}\n        </div>\n    )\n}\n\nexport default ActionsHeader","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\n// apollo\nimport { useSubscription, useQuery } from '@apollo/client'\nimport { GetOrdersSubscription, GET_USERS } from './queries/getOrders'\n\n// ui \nimport {Tabs, Tab, Box} from '@material-ui/core';\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport ActionsHeader from '../BaseHeader/ActionsHeader'\n\nvar incomingOrders = undefined;\n\n\nconst OrderListLayout = () => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState(store.priorityTab));\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID == 1) preOrders.push(order)\n            else if (order.OrderStatus.ID == 2) orders.push(order)\n        })\n        incomingOrders = orders\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    const { loading, error, data = [] } = useSubscription(GetOrdersSubscription, { onSubscriptionData, fetchPolicy: \"cache-first\", nextFetchPolicy: \"cache-first\" });\n    const { data: users = []} = useQuery(GET_USERS);\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        store.setPriorutyTab(newValue)\n    };\n\n\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n    const tabHeight = '45px'\n    const AntTabs = withStyles({\n        root: {\n            borderBottom: '1px solid var(--border)',\n            minHeight: tabHeight,\n            height: tabHeight,\n        },\n        indicator: {  \n            borderTopLeftRadius: '20px',\n            borderTopRightRadius: '20px',\n            backgroundColor: 'var(--accent)',\n        },\n      })(Tabs);\n      \n      const AntTab = withStyles((theme) => ({\n        root: {\n          textTransform: 'none',\n          minWidth: '10%',\n          fontSize: '.9rem',\n          color: 'var(--text1)',\n          padding: 0,\n          opacity: .5,\n          minHeight: tabHeight,\n          height: tabHeight,\n          transition: 'opacity .3s ease',\n          '&:hover': {\n            opacity: 1,\n          },\n          '&$selected': {\n                color: 'var(--accent)',\n                backgroundColor: 'var(--accentLight)'\n          }\n        },\n        selected: {},\n      }))((props) => <Tab disableRipple {...props} />);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            minHeight: '50px'\n        }\n    }));\n\n  const classes = useStyles();\n    return(\n        <div >\n            \n            <div className={classes.root}>\n            <AntTabs value={state.selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\">\n                <AntTab label=\"Очередость\" {...a11yProps(0)} />\n                <AntTab label=\"Недавние\" {...a11yProps(1)} />\n\n                <ActionsHeader createOrder={1} userID={store.user.UserID} history={history}/>\n\n            </AntTabs>\n            </div>\n\n\n        <PreOrders preOrders = {state.preOrders} />\n\n        <TabPanel value={state.selectedTab} index={0} >\n            <Priority data={state.orders}\n                    state={state}\n                    dispatch={dispatch}\n                    users={users.erp_Users}\n                    incomingOrders={incomingOrders} />\n        </TabPanel>\n\n        <TabPanel value={state.selectedTab} index={1}>\n            <Recently data={state.orders}\n                    state={state}\n                    dispatch={dispatch}\n                    incomingOrders={incomingOrders} />\n        </TabPanel>\n      </div>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    City\n    CreatingDate\n    Comment\n    Entity\n    InvoiceNumber\n    ManagerID\n    OrderID\n    OrderNumber\n    OrderStatusID\n    PaidAmount\n    ShipmentComment\n    ShippingDate\n    TotalAmount\n    IsReclamation\n    AwaitingDispatch\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialNumber\n    }\n    CheckListUnits {\n      IsComplited\n      OrderID\n      Point\n      CheckListUnitID\n    }\n    Docs {\n      Key\n      FileName\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;","import { DELETE_ORDER_ITEM, INSERT_ORDER_ITEM } from \"./queries/MutationOrderItem\"\nimport { useMutation } from \"@apollo/client\"\n\nimport { useReducer, useEffect } from 'react'\nimport {TextField} from '@material-ui/core'\nimport { UilArrowUp } from '@iconscout/react-unicons'\n\n\nimport { motion, AnimatePresence } from \"framer-motion\"\n\nimport sass from './sass/composition.module.sass'\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                name: action.payload[0],\n                fullName: action.payload[1],\n                quantity: action.payload[2]\n            }\n\n    }\n\n}\n\nconst OrderComposition = ({ data, editState, refetch, orderID }) => {\n    const [ deleteOrderItemMutation ] = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ] = useMutation(INSERT_ORDER_ITEM);\n\n    const [state, dispatch ] = useReducer(reducer, initialState)\n\n    const deleteItem = (itemID) => {\n        deleteOrderItemMutation(\n            { variables: { orderItemID: itemID} }\n        )\n        refetch()    \n    }\n\n    useEffect(() => {\n        console.log(editState)\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n\n    const editItem = (e, itemID) => {\n        const itemData = data.find( el => el.OrderItemID == itemID)\n        dispatch({ type: 'editItem', payload: [itemData.Name, itemData.FullName, itemData.Quantity] })\n        console.log(e)\n        deleteItem(itemID)\n    }\n\n    const insertOrderItem = () => {\n        if (state.quantity == '' || state.name == '') return null\n\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const addNewOrderItem = () => (\n        <>\n            <TextField\n                size='small' \n                label=\"Наименование\"\n                autoComplete='off'\n                value={state.name}\n                onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n              />\n            <TextField\n                size=\"small\" \n                label=\"Кол-во\"\n                type=\"number\"\n                autoComplete='off'\n                className={sass.quantityInput}\n                value={state.quantity}\n                onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n\n               />\n           \n           <TextField\n                label=\"Полное наименование\"\n                multiline\n                autoComplete=\"off\"\n                size='small'\n                className={sass.fullNameInput}\n                value={state.fullName}\n                onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n                />\n\n            <motion.button\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: .95 }}\n                className={`square-button ${sass.pushOrderItemButton}`}\n                onClick={insertOrderItem} >\n                    <UilArrowUp/>\n            </motion.button>\n           \n         </>\n        )\n\n    return(<>     \n     <AnimatePresence>\n            {data.map( el => \n            \n            <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            key={el.OrderItemID} >\n            \n\n                <div key={el.OrderItemID} className={sass.Unit}>\n                    <div className={sass.firstRow}>\n                        <div className={sass.name}> {el.Name} </div>\n                        <span  className={sass.quantity}> {el.Quantity}</span>\n                    </div>\n                    \n                    <div  className={sass.fullName}> { el.FullName }</div>\n\n\n                    {editState &&  \n                        <div className={sass.orderItemActions}>\n                            <a onClick={ (e) => editItem(e, el.OrderItemID) }>   Изменить</a>\n                            <a onClick={ ()=> deleteItem(el.OrderItemID) } > Удалить </a>\n                        </div>\n                    }\n                   \n\n                </div>\n\n            </motion.div>\n            )}\n            \n        {editState && <div className={sass.addOrderItem}>{addNewOrderItem()}</div> }\n\n    </AnimatePresence>\n    </>)\n}\n\nexport default OrderComposition","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($orderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $orderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($orderID: Int!, $awaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $orderID},\n   _set: { AwaitingDispatch: $awaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;","import { UilHistoryAlt, UilBox} from \"@iconscout/react-unicons\";\nimport  moment  from 'moment'\nimport \"./sass/order-meta.sass\";\n\nimport {FormControlLabel, Checkbox} from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport { useMutation } from \"@apollo/client\"\nimport { UPDATE_AWAITING_DISPATCH } from './queries/MutationOrderInfo'\nimport { GET_ORDER_BY_ID } from \"./queries/GetOrderByID\";\n\nconst useStyles = makeStyles({\n    formControlLabel: {\n        width: '100%',\n        height: 35,\n        '& > span': {\n            fontSize: '.8rem',\n            color: 'var(--text2)',\n        }\n    },\n})\n\nconst CustomCheckbox = withStyles({\n    root: {\n      margin: '0 10px',\n      color: 'var(--text2)',\n      opacity: .2,\n      transition: 'none !important',\n      '&$checked': {\n        color: 'var(--text1)',\n        opacity: 1,\n      }\n    },\n    checked: {},\n  })((props) => \n    <Checkbox \n    defaultChecked\n    color=\"default\"\n    size=\"small\"\n    {...props} />);\n\n\nconst OrderMeta = ({ data, orderID }) => {\n    \n    const [mutateAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n\n    const classes = useStyles();\n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ''\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n\n  return (\n    <div className=\"Meta\">\n\n        <div className=\"SignificantInfo\">\n                <div>\n                    <pre>План. отгрузка</pre>\n                    {moment(data.ShippingDate).format('DD.MM.YY')}\n                </div>\n                <div>\n                    <pre>Счет / оплата</pre>\n                    {\"№ \" +\n                    data.InvoiceNumber +\n                    setPaidPercent(data.TotalAmount, data.PaidAmount)}\n                        <span className=\"PaymentHistory\">\n                            <UilHistoryAlt />\n                        </span>\n                </div>\n        </div>\n\n        <div className=\"MetaWrapper\">\n            <div className='Left'>\n                    <div>\n                        <pre>Номер заказа</pre>\n                        {data.OrderNumber}\n                    </div>\n                    <div>\n                        <pre>Создан</pre>\n                        {data.ShippingDate}\n                    </div>\n                    <div>\n                        <pre>Менеджер</pre>\n                        {data.User.FirstName} {data.User.LastName}\n                    </div>\n            </div>\n\n            <div className='Right'>\n                        <div>\n                            <pre>Юр Лицо</pre>\n                            {data.Entity}\n                        </div>\n                        <div>\n                            <pre>Гор</pre>\n                            {data.City}\n                        </div>\n                </div>\n        </div>\n\n        <div className=\"OrderComment\">\n                <pre>Комментарий</pre>\n                {data.Comment}\n        </div>\n\n        <div className=\"actions\">\n            <FormControlLabel\n            className={classes.formControlLabel}\n            control={\n                <CustomCheckbox \n                 checked={data.AwaitingDispatch}\n                 onChange={ () => {\n                    // const updateCache = (cache, {data}) => {\n                    //     const existing = cache.readQuery({\n                    //         query: GET_ORDER_BY_ID,\n                    //         variables: {\n                    //             OrderID: orderID\n                    //         }\n                    //     })\n                    //     cache.writeQuery({\n                    //         query: GET_ORDER_BY_ID,\n                    //         variables: {\n                    //             OrderID: orderID\n                    //         },\n                    //         data: { \n                    //             erp_Orders: [existing.erp_Orders[0]]\n                                 \n                    //         }\n                    //     })\n                    //     console.log(cache.data.data.ROOT_QUERY, 'cahce')\n                    //     console.log(data, 'existing')\n\n                    // }\n\n                    mutateAwaitingDispatch({\n                        variables: {orderID, awaitingDispatch: !data.AwaitingDispatch },\n                        // update: updateCache,\n                        optimisticResponse: {\n                            erp_Orders: {\n                              __typename: 'erp_Orders',\n                              OrderID: orderID,\n                              AwaitingDispatch: !data.AwaitingDispatch\n                            }\n                          }\n                    })\n                 }}\n                /> }\n            label=\"Собран и ожидает отгрузки\"\n            />\n        </div>\n\n    </div>\n  )\n}\n\nexport default OrderMeta\n","import { useEffect } from 'react';\nimport {TextField} from '@material-ui/core';\nimport './EditableInfo.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'₽ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch }) => {  \n  \n\n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n  \n    useEffect(() => {\n        fields = {};\n        \n        return () => {\n            console.log('doing mutation for order', orderID, fields)\n            updateOrderInfo({variables: {\n            orderID,\n            fields,\n            }})\n            refetch()\n        };\n    }, []);\n\n  return(\n    <form className=\"Meta EditableInfo\">\n      \n        \n        <TextField\n          label=\"План. отгрузка\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          autoComplete=\"off\"\n          InputProps={{\n            inputComponent: DateFormatCustom\n          }}\n        />\n\n        <TextField\n          label=\"Номер счета\"\n          type=\"number\"\n\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"Номер заказа\"\n          type=\"number\"\n\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Юр лицо\"\n          autoComplete=\"off\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"Город\"\n          autoComplete=\"off\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Сумма заказа\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom\n          }}\n          />\n        \n        <TextField\n          label=\"Оплачено\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom\n          }}\n        />\n\n        <TextField\n          label=\"Комментарий\"\n          multiline\n          autoComplete=\"off\"\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n    </form>\n  )\n}\n\nexport default EditableInfo","import {gql} from 'graphql-tag'; \n\nexport const MUTATE_CHECKLIST_UNIT = gql`\nmutation MyMutation($CheckListUnitID: Int!, $IsCompluted: Boolean!) {\n  update_erp_CheckListUnits_by_pk(pk_columns: {CheckListUnitID: $CheckListUnitID}, _set: {IsComplited: $IsCompluted}) {\n    CheckListUnitID\n    IsComplited\n    Point\n  }\n}\n`","import { useMutation } from \"@apollo/client\"\nimport { MUTATE_CHECKLIST_UNIT } from './queries/MutationCheckListUnit'\n\nconst CheckList = ({data}) => {\n\n    const [updateCheckListUnit, { loading }] = useMutation(MUTATE_CHECKLIST_UNIT);\n\n    let propsData = JSON.parse(JSON.stringify(data))\n\n    propsData.sort((a, b) => b.Point < a.Point ? 1 : -1)\n\n    const toggleCheckListUnit = (target, el) => {\n        target.target.classList.toggle('complited')\n        updateCheckListUnit({ variables: { CheckListUnitID: el.CheckListUnitID, IsCompluted: !el.IsComplited } })\n    }\n\n    const units = propsData.map(el => \n            <div className={ el.IsComplited ? \"CheckListUnit complited\" : \"CheckListUnit\"}  \n                key={el.CheckListUnitID} \n                onClick={ target => toggleCheckListUnit(target, el) }>\n                {el.Point}\n            </div>\n        )\n\n   \n    return(\n        <div className=\"CheckList\">\n\n            <div className='partitionHeading'>Чеклист</div>\n\n            {units}\n        </div>\n    )\n}\n\nexport default CheckList","import { useContext, useState, useRef } from 'react';\nimport { Context } from '../../index'\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from './queries/MutationOrderDocs';\n\nimport { Dialog, Button, TextField, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const { store } = useContext(Context)\n\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const onFileDeleteInput = useRef()\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length == 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        if (onFileDeleteInput.current.value == 'Да'){\n            await store.deleteFile(fileOnDelete.Key, deleteFileMutation)\n            refetch()\n        }        \n    }\n\n    const attachedFiles = data.map(\n        file => {\n            // delite file\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n             // opne file\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n            <div className='partitionHeading'>Приложения</div>\n            <div className='filesContainer'>\n                {attachedFiles}\n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='xs'>\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                        Удалить приложение?\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText gutterBottom>\n                            Вы действительно хотите удалить <span>{fileOnDelete?.FileName}</span> ? <br/>\n                            Это действие необратимо.\n                            Пожалуйста, введите \"Да\" для подтверждения.\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            size='small'\n                            variant='outlined'\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete='off'\n                            inputRef={onFileDeleteInput}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={deleteFile} className='dialog-danger-btn'>\n                            Я понимаю последствия, удалить этот файл\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","const Comments = (props) => {\n\n    return(\n        <div>\n            <div className='partitionHeading'>Комментарии</div>\n\n        </div>\n    )\n}\n\nexport default Comments","import { UilCloudUpload } from '@iconscout/react-unicons'\nimport { motion } from \"framer-motion\"\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <motion.div \n            initial={{ y: \"80vh\"  }}\n            animate={{ y: \"40vh\" }} >\n\n             <UilCloudUpload className='inCloudconIcon'/>\n         </motion.div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","import { useContext, useCallback, useState } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_ORDER_BY_ID } from './queries/GetOrderByID'\nimport { PUSH_DOCS_ARRAY } from './queries/MutationOrderDocs'\nimport { useMutation, useQuery } from \"@apollo/client\";\n\n//components\nimport ActionsHeader from \"../BaseHeader/ActionsHeader\";\nimport Composition from \"./Composition\";\nimport Info from \"./Info\";\nimport EditableInfo from \"./EditableComponents/EditableInfo\";\nimport CheckList from './CheckList';\nimport Docs from './Docs';\nimport Comments from \"./Comments\";\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport { Heading } from 'evergreen-ui';\nimport './sass/index.sass';\n\nimport { motion } from \"framer-motion\"\n\n\n\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    const [pushDocs] = useMutation(PUSH_DOCS_ARRAY);\n    const orderID = useParams().id\n\n    const S3Upload = useCallback(acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        store.uploadFile(acceptedFiles).then(\n            (res) => {\n                if (res.status != 200) console.log('S3 file upload error')\n                else{\n                    let m = []\n                    for (var i=0;  i<res.data.length; i=i+2 ){\n                        m.push({\n                            'Key': res.data[i].key,\n                            'OrderID': orderID,\n                            'FileName': res.data[i].originalname,\n                        })\n                    }\n                    pushDocs({ variables: {'objects': m} })\n                } \n                setOnUploadFiles([])\n                refetch();\n                }\n            \n        )\n      }, [])\n\n    const {loading, error, data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID}});\n\n    const {getRootProps, isDragActive} = useDropzone({className: 'dropzone', onDrop: S3Upload });\n  \n    return(\n    <motion.div\n    initial={{ scale: .85 }} \n    animate={{ scale: 1 }}\n    transition={{ duration: 0.2 }}\n    > \n\n\n    \n            {isFileOnDropzone(isDragActive)}\n\n        {!loading ? (<>\n\n        <div className=\"page-header\">\n            <Heading>{data.erp_Orders[0].Entity} __  {data.erp_Orders[0].City}</Heading>\n\n            <ActionsHeader \n            accessLevel = {2} \n            setEditState = {setEditState} \n            editState = {editState} />\n            \n        </div>\n\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n                    <div className=\"Main\">\n\n                    <div className=\"Composition\">  \n                        <Composition \n                            data={data.erp_Orders[0].OrderItems} \n                            editState={editState}\n                            refetch={refetch}\n                            orderID= {orderID} /> \n\n                    </div>\n                    \n                        <div className=\"WrapperTwoCol\">\n                            <CheckList data={data.erp_Orders[0].CheckListUnits}/>\n                            <Docs data={data.erp_Orders[0].Docs} \n                                onUpload={onUploadFiles} \n                                editState = {editState} \n                                refetch={refetch} />\n                        </div>\n                        <Comments/>\n                    </div>\n                    \n                    { editState ? <EditableInfo data={data.erp_Orders[0]} orderID={orderID} refetch={refetch}/> : (\n                                  <Info data={data.erp_Orders[0]} editState = {editState} orderID={orderID}/> )}\n                   \n\n       \n\n        </section> \n\n        </>): null }\n\n    </motion.div>\n    )\n}\n\nexport default OrderLayout","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervalsPools(where: {entrance: {_gte: $gte,  _lte: $lte}}) {\n        entrance\n        exit\n        card\n        interval\n        status\n      }\n    }\n  }\n}  \n`\n\n\n","\nexport function daysInMonth (selectedMonth) {\n    // количество дней в текущем месяце\n      const [month, year] = selectedMonth\n      return new Date(year, month+1, 0).getDate();\n}\n\n\n  \n\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './functions'\nimport sass from './attendance.module.sass'\n\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  let columnsList = [\n      {\n      Header: 'Сотрудник',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'Итого',\n      Cell: row => {\n        var hours = 0;\n        const intervals = row.row.original.intervalsPools\n        intervals.forEach( interval => {\n          hours += interval.interval \n        });\n\n        //вычетаем время на обед\n        hours -= timeDeduction/60 * intervals.length\n\n        return <div>{hours.toFixed(0)}</div>\n      }\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => {\n        const day1 = row.column.Header\n\n        const [entrance, exit, interval, status] = getIntervalData(day1, row.row.original.intervalsPools, timeDeduction)\n        \n        return (\n          <div className={\"status-\"+ status}> \n            <div>{ entrance }</div> \n            <div>{ exit }</div>\n            <div className={sass.interval}>{ interval }</div>\n          \n          </div>\n        )\n      }\n    })\n  }\n  return columnsList\n}\n\n\n\nfunction getIntervalData(day, intervals, timeDeduction){\n\n    // конвертация float в часы и минуты\n    function convertInterval(number, timeDeduction){\n        //вычетаем время на обед\n        number -= timeDeduction/60\n\n        var hour = Math.floor(number);\n        var decpart = number - hour;\n        var min = 1 / 60;\n\n        // Round to nearest minute\n        decpart = min * Math.round(decpart / min);\n        var minute = Math.floor(decpart * 60) + '';\n\n        // Add padding if need\n        if (minute.length < 2) {\n            minute = '0' + minute; \n        }\n\n        return hour + ':' + minute;\n    }\n\n    function getMinutes(t){\n        const minutes = t.getMinutes()\n        return (minutes < 10) ? `0${minutes}` : minutes\n    }\n\n    const e = intervals.find(el =>  new Date(el.entrance).getDate() == day)\n\n    if (e) {\n        const _entr = new Date(e.entrance)\n        const _exit = new Date(e.exit)\n\n        const entrance = _entr.getHours()+':'+ getMinutes(_entr)\n        const exit = _exit.getHours()+':'+ getMinutes(_exit)\n        const interval = convertInterval(e.interval, timeDeduction)\n\n        return [entrance, exit, interval, e.status]\n    }   else return [null, null, null, null]\n}\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nfunction monthAdd(date, month) {\n    // функция используется для корректного вычитания месяцев в chooseMonth\n    var temp = date;\n    temp = new Date(date.getFullYear(), date.getMonth(), 1);\n    temp.setMonth(temp.getMonth() + (month + 1));\n    temp.setDate(temp.getDate() - 1); \n  \n    if (date.getDate() < temp.getDate()) { \n        temp.setDate(date.getDate()); \n    }\n    return temp;    \n  }\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i< 6; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div onClick={selectedMonthHandler} \n                    className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                    date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>обед</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>мин</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>норма</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>ч</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","import { Heading } from 'evergreen-ui';\n\n\nconst BaseHeader = (props) => {\n\n    return(\n           <div className=\"base-container page-header\">\n                    <span>{props.pageParams.icon}</span>\n                    <Heading>{props.pageParams.title}</Heading>                    \n                    {props.children}\n            </div>\n    )\n}\n\nexport default BaseHeader","\nimport  { useContext, useMemo, useEffect, useReducer } from 'react'\nimport { Context } from '../../index'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\n\nimport Table, { generateColumns } from './table'\nimport { getVarsForSubscription } from './functions'\n\n\nimport './index.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport BaseHeader from '../BaseHeader'\nimport { UilSearch } from '@iconscout/react-unicons'\n\nimport sass from './attendance.module.sass'\n\nvar attendanceData = null;\n// учет рабочего времени\nconst Attendance = props => {\n    const date = new Date()\n    const { store } = useContext(Context);\n\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 'filtredData':\n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [date.getMonth()-1, date.getFullYear()],\n    });\n    const { timeDeduction, selectedMonth, filtredData } = state;\n\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n    const { loading } = useQuery(GET_USERS, { variables: { gte, lte }, onCompleted: (options) => {\n        attendanceData = options.attendance_users_aggregate.nodes;\n        dispatch({ type: 'filtredData', payload: attendanceData})\n    } });\n    \n    useEffect(() => {\n        return () => {\n            attendanceData = null\n        };\n    }, []);\n\n    function filteringAlg(user, keyword){\n        if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else return false\n    }\n\n    const onChangeSearch = (e) => {\n        const keyword = e.target.value.trim();\n\n            if (keyword !== '') {\n              const result = attendanceData.filter((user) => filteringAlg(user, keyword))\n              dispatch({ type: 'filtredData', payload: result })\n            } else dispatch({ type: 'filtredData', payload: attendanceData})\n    }\n\n    const columns = useMemo(\n        () => generateColumns(selectedMonth, timeDeduction), [selectedMonth, timeDeduction]\n    )\n\n    return(\n        <>\n            <BaseHeader pageParams = { store.getPageParams(window.location.pathname) } search={onChangeSearch} /> \n            <ReportConfigurator state={state} dispatch={dispatch} />\n\n        <div className={sass.tableWrapper}>\n\n            <div className={sass.tableSearchInput}>\n                <UilSearch/>\n                <input type='text' placeholder=\"поиск (номер счета или организация)\" onChange={ (e) => onChangeSearch(e) } autoFocus/>\n            </div>\n            \n            {filtredData && columns && <Table columns = {columns} data = {filtredData} className={sass.attendanceTable} /> }\n\n             {/* условное обозначение */}\n             <div className={`${sass.tableFooter} legend`}>\n                <div className=\"status-101\">Прерванный рабочий день</div>\n                <div className=\"status-102\">Не отмечен конец смены</div>\n                <span className=\"reportMeta\">\n                    Отчет за {selectedMonth[0] + 1} месяц {selectedMonth[1]} года \n                </span>\n\n            </div>\n\n        </div>\n        </>\n    )\n}\n\nexport default Attendance","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n\n    const [isLoaded, setisLoaded] = useState(undefined);\n    const [isAuth, setisAuth] = useState(undefined);\n\n    const { store } = useContext(Context)\n\n    async function checkAuth() {\n        const res = await store.checkAuth();\n        setisAuth(res.isAuth);\n        setisLoaded(res.isLoaded)\n    }\n\n    useEffect(() => {\n      if (store.inMemoryToken) {\n        setisAuth(true);\n        setisLoaded(true)\n      }\n      else checkAuth()\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n            if (isAuth) return <Component {...props} />\n            else return <Redirect to='/login'/>;\n        }\n        \n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import {Switch, Route, Redirect} from \"react-router-dom\";\n\nimport LoginForm from '../components/LoginForm';\nimport OrderListLayout from \"../components/OrderListLayout\";\nimport OrderLayout from \"../components/OrderLayout\";\nimport Attendance from '../components/Attendance'\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst AppRouter = (props) => {\n\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            #if required route was not found\n            <Redirect     to=\"/\" />\n            {/* <PrivateRoute path='/recently' component={() => <PriorityLayout props={isRecently}/>} store={props.store}/> */}\n        </Switch>\n    )\n    \n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\n\nconst BaseLayout = (props) => {\n    return(\n        <>\n            <div className=\"base-container\">\n                \n                    <AppRouter /> \n                    {props.children}\n            </div>\n        </>\n    )\n}   \n\nexport default BaseLayout;","import { useEffect, useState } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\nimport { UilMoon, UilSun} from '@iconscout/react-unicons';\n\n  const DARK_CLASS = \"dark\";\n\nexport const DarkToggle = (props) => {\n\n    const systemPrefersDark = useMediaQuery(\n        {\n            query: \"(prefers-color-scheme: dark)\"\n        },\n        undefined,\n        prefersDark => {\n        setIsDark(prefersDark);\n        }\n    );\n\n    const [isDark, setIsDark] = useState(systemPrefersDark);\n\n\n    useEffect(() => {\n        if (isDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n        \n    }, [isDark]);\n\n\n    if (props.display == 'none') return null\n    return (<>\n\n        <div  className=\"DarkToggle \" onClick={() => setIsDark(!isDark)} >{isDark? < UilSun/> : <UilMoon/>}</div>\n        \n        </>);\n};\n","// import { observer } from 'mobx-react-lite';\nimport { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Context } from '../../index';\n\nimport { Pane } from 'evergreen-ui';\nimport './index.sass';\nimport { UilSortAmountDown, UilEnvelopeInfo, UilWrench, UilUserCircle, UilSignInAlt, UilConstructor} from '@iconscout/react-unicons';\nimport { DarkToggle } from './DarkToggle';\n\nconst Sidebar = () => {\n    const {store} = useContext(Context);\n\n    return(\n        <>\n        <Pane className='Sidebar'>\n\n            <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"action-icon\"><UilSortAmountDown/></NavLink>\n            {/* <NavLink  to='/recently' activeClassName='sidebar-active' className=\"action-icon\"><UilEnvelopeInfo/></NavLink> */}\n            <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"action-icon\"><UilWrench/></NavLink>\n            <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"action-icon\"><UilConstructor/></NavLink>\n\n\n            <a className=\"action-icon hidden\" ><DarkToggle/></a> \n            <NavLink  className=\"action-icon hidden\" to='/account'><UilUserCircle/></NavLink>\n            <NavLink  className=\"action-icon hidden\" to='/login' onClick={() => store.logout()}><UilSignInAlt/></NavLink>\n           \n            \n\n\n\n        </Pane>\n        </>\n    );\n}\n\nexport default Sidebar;","import { useContext } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport { DarkToggle } from './components/Sidebar/DarkToggle';\n\nfunction App() {  \n  const { store } = useContext(Context);\n\n\n  return (\n    <>\n      <div className=\"App\">\n        \n        {store.isAuth\n        ? <Sidebar/>\n        : null}\n\n          <DarkToggle display='none'/>\n          <BaseLayout/>\n        \n      </div>\n      {/* <ReactTooltip id='global' type=\"light\" place=\"bottom\" delayShow={300} className='tooltip'/> */}\n    </>\n  );\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/s3/upload'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n$api.interceptors.request.use( (config) => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n    return config;\n})\n$api.interceptors.response.use( (config) => {\n    return config;\n}, async (error) => {\n    const originalRequest = error.config;\n    if(error.response.status === 401 && error.config && !error.config._isRetry){\n        originalRequest._isRetry = true;\n        try {\n            const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n            localStorage.setItem('token', response.data.accessToken);\n            return $api.request(originalRequest);\n        } catch (e) {\n            console.log('Авторизация обломилась. Попробуйте снова');\n        }\n    }\n       \n})\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  {email, password})\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport {Pane, Spinner} from 'evergreen-ui';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilSortAmountDown, UilEnvelopeInfo, UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isAuth = false;\n    isLoading = false;\n    inMemoryToken = undefined;\n\n    priorityTab = 0;\n    showPreOrders = false;\n\n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setShowPreOrders(bool){\n        this.showPreOrders = bool\n    }\n    \n    async login(email, password){\n        try {\n            const response = await AuthService.login(email, password);\n            // localStorage.setItem('token', response.data.accessToken);\n\n            this.setInMemoryToken(response.data.accessToken)\n            this.setUser(response.data.user);\n            this.setAuth(true);\n            // window.location.href='/';\n            console.log('store', this.inMemoryToken)\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            localStorage.removeItem('token');\n            this.setAuth(false);\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n            (r) => {\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            console.log('check auth request')\n            const response = await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n            this.setInMemoryToken(response.data.accessToken)\n\n            this.setUser(response.data.user);\n            this.setAuth(true);\n\n            return {\n                'isLoaded': true,\n                'isAuth': this.isAuth, \n                }\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            return {\n                'isLoaded': true,\n                'isAuth': this.isAuth\n            }\n\n        } finally {\n            this.setLoading(false);\n        }\n        \n    }\n\n    async uploadFile(acceptedFiles){\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/s3/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            }\n          });\n        return res\n    }\n\n    async downloadFile(file){\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`)\n    }\n\n    async deleteFile(key, deleteFileMutation){\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/s3/delete/${key}`);\n\n        if (res.status == 200){\n            const hasuraRes = await deleteFileMutation({variables: {\n                'key': key,\n            }})\n            console.log(hasuraRes.data)\n        }\n        // if (res.status != 200) console.log('error during deleting file from S3', res)\n    }\n\n    pageParams = [\n        {\n            'url' : '/',\n            'icon': <UilSortAmountDown/>,\n            'title': 'Очередность выполнения',\n        },\n        {\n            'url' : '/recently',\n            'icon': <UilEnvelopeInfo/>,\n            'title': 'Недавние',\n        },\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Рекламация',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Рабочее время',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n    preloader = <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height='75vh'><Spinner /></Pane>\n}\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport jwt from 'jsonwebtoken'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\n\n//apollo \nimport { WebSocketLink} from 'apollo-link-ws';\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  from,\n} from \"@apollo/client\";\n\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\n\nlet webSocketLink = new WebSocketLink({\n  uri: process.env.REACT_APP_HASURA_WS,\n  options: {\n    reconnect: true,\n    lazy: true,\n    reconnectionAttempts: 5,\n    inactivityTimeout: 10000000,\n    connectionCallback: async (error) => { error && console.log(error) },\n    connectionParams: () => ({\n      headers: {\n        'Authorization' : `Bearer ${store.inMemoryToken}`\n      }\n    }),\n    \n  }\n})\n\nconst asyncTokenValidation = setContext( async (_, {headers, ...context}) => {\n  var token = null \n\n  if (Date.now() >= jwt.decode(store.inMemoryToken).exp * 1000 ) {\n    console.log('Existed access token was expired, request for new token..')\n    token = await store.getNewToken()\n  }\n\n  return {\n    headers: {\n      ...headers,\n      ...(token ? {Authorization: `Bearer ${token}`} : {}),\n    },\n    ...context,\n  };\n});\n\n\nconst apolloClient = new ApolloClient({\n  link: from([ asyncTokenValidation, webSocketLink ]),\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n      \n\n    },\n  })\n})\n\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__1O75u\",\"quantity\":\"composition_quantity__2YtVw\",\"addOrderItem\":\"composition_addOrderItem__2AnFf\",\"MuiFormControl-root\":\"composition_MuiFormControl-root__EpKj4\",\"fullNameInput\":\"composition_fullNameInput__89_5p\",\"quantityInput\":\"composition_quantityInput__2zcBe\",\"pushOrderItemButton\":\"composition_pushOrderItemButton__2NTfr\",\"Unit\":\"composition_Unit__2Fqng\",\"orderItemActions\":\"composition_orderItemActions__AIthU\",\"firstRow\":\"composition_firstRow__2LTDe\",\"fullName\":\"composition_fullName__NObJ0\"};"],"sourceRoot":""}