{"version":3,"sources":["components/OrderListLayout/Search/search.module.sass","components/OrderLayout/OrderItemActions/index.module.sass","components/OrderListLayout/Archive/archive.module.sass","components/Sidebar/SettingsDrawer/index.module.sass","components/OrderListLayout/Recently/recently.module.sass","components/OrderListLayout/PreOrders/preorders.module.sass","components/OrderLayout/Shipment/shipment.module.sass","components/OrderLayout/Comments/index.module.sass","routers/PrivateRoute.js","components/LoginForm/index.js","components/_core/notification.js","components/OrderListLayout/reducer.js","components/OrderListLayout/queries/getOrders.js","hasura-queries/getUsers.js","components/OrderListLayout/UniversalTable/columnList.js","components/OrderListLayout/UniversalTable/TableMarkup.jsx","components/OrderListLayout/Search/index.js","components/OrderListLayout/Search/filter.js","components/OrderListLayout/PreOrders/MutationOrderStatus.js","components/OrderListLayout/PreOrders/index.js","components/OrderListLayout/Priority/index.js","components/OrderListLayout/Recently/index.jsx","components/OrderListLayout/Recently/spreadOrders.js","components/BaseHeader/MutationInsertOrder.js","components/BaseHeader/ActionsHeader.js","components/OrderListLayout/Archive/queries/getArchivedSearchOrders.js","components/OrderListLayout/Archive/TableMarkup.jsx","components/OrderListLayout/Archive/queries/getAllOrdersAmount.js","components/OrderListLayout/Archive/queries/getArchivedLatestOrders.js","components/OrderListLayout/Archive/queries/getArchivedUnpaidOrders.js","components/OrderListLayout/Archive/PreviewTable.jsx","components/OrderListLayout/Archive/index.jsx","components/OrderListLayout/index.jsx","components/OrderLayout/queries/GetOrderByID.js","components/OrderLayout/queries/MutationOrderDocs.js","components/OrderLayout/queries/MutationOrderItem.js","components/OrderLayout/OrderItemActions/index.jsx","components/OrderLayout/Composition.jsx","components/OrderLayout/queries/MutationOrderInfo.js","components/OrderLayout/queries/MutationDeleteOrder.js","components/OrderLayout/Shipment/ConfirmDialog.jsx","components/OrderLayout/Shipment/Shipment.jsx","components/OrderLayout/Info.jsx","components/OrderLayout/queries/MutationPaymentHistory.js","components/OrderLayout/EditableComponents/EditableInfo.jsx","components/OrderLayout/Docs/ConfirmDialog.jsx","components/OrderLayout/Docs/Docs.jsx","components/OrderLayout/queries/MutationOrderCommnets.js","components/OrderLayout/queries/SubscriptionComments.js","components/OrderLayout/Comments/Comment.jsx","components/OrderLayout/Comments/СommandsPopover.jsx","components/OrderLayout/Comments/CommentsList.jsx","components/OrderLayout/Dropzone.js","components/OrderLayout/index.jsx","components/AttendanceLayout/queries/getUsers.js","components/AttendanceLayout/functions.js","components/AttendanceLayout/table.js","components/AttendanceLayout/ReportConfigurator.jsx","components/BaseHeader/index.js","components/AttendanceLayout/index.js","components/ReclamationLayout/index.js","routers/Router.js","components/BaseLayout/index.js","components/_core/SystemPreferTheme.js","components/Sidebar/SettingsDrawer/SettingsDrawer.jsx","components/Sidebar/Sidebar.js","App.js","materialStyles.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","index.js","components/OrderListLayout/main.module.sass","components/OrderLayout/sass/composition.module.sass","components/AttendanceLayout/attendance.module.sass"],"names":["module","exports","PrivateRoute","Component","component","rest","store","useContext","Context","useState","isLoaded","setisLoaded","inMemoryToken","token","setToken","a","checkAuth","then","res","useEffect","getToken","render","props","to","LoginForm","email","setEmail","password","setPassword","history","useHistory","login","status","push","console","error","type","title","message","addNotification","insert","container","dismiss","duration","className","TextField","label","onChange","e","target","value","trim","Button","variant","width","onClick","reducer","state","action","payload","searchKeyword","managerFilter","GetOrdersSubscription","gql","GET_USERS","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","OrderID","map","item","Name","OrderItemID","Quantity","order","ShippingDate","moment","format","sass","customerTableInfo","Entity","City","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","mainsass","tableMain","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","row","awaitingDispatch","original","AwaitingDispatch","getRowProps","cells","cell","getCellProps","Search","dispatch","users","tableSearchInput","placeholder","autoFocus","defaultValue","filter","filterPlaceholder","FormControl","Select","name","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","filteringAlg","keyword","finded","arg","toLowerCase","includes","array","result","newOrders","ord","ManagerID","MUTATE_ORDER_STATUS","PreOrders","preOrders","useMutation","mutationOrderStatus","onClickTransfer","splice","indexOf","variables","AcceptanceDate","Date","toLocaleString","timeZone","newColumnList","filtredData","tableWrapper","preOrdersTableWrapper","Priority","useMemo","sortedData","orders","sort","b","AccessLevelID","Recently","spreadData","days","subtract","dateCreation","split","date","objs","spread","Typography","color","m","recentlyTable","INSERT_ORDER","ActionsHeader","userID","createNewOrder","createOrderHandler","insert_erp_Orders","returning","editOrderHandler","setEditState","editState","createOrder","data-for","data-tip","addOrder","accessLevel","editOrderBtn","GET_ARCHIVED_SEARCH_ORDERS","unpaidOrder","unpaid","GET_ALL_ORDERS_AMOUNT","GET_ARCHIVED_LATEST_ORDERS","GET_ARCHIVED_UNPAID_ORDERS","PreviewTable","useQuery","limit","latestOrders","loading","onCompleted","erp_Orders","unpaidIDs","unpaidOrders","ActualShippingDate","archiveTable","Archive","useReducer","InputBase","inputWrapper","setTimeout","StyledTabs","styled","Tabs","theme","margin","display","StyledTab","Tab","textTransform","fontWeight","palette","text","secondary","fontSize","typography","pxToRem","marginRight","spacing","borderBottomRightRadius","borderBottomLeftRadius","border","backgroundColor","primary","OrderListLayout","selectedTab","cachedOrders","cachedPreOrders","initialState","priorityTab","useSubscription","onSubscriptionData","options","subscriptionData","forEach","OrderStatus","ID","setCachedOrders","setCachedPreOrders","fetchPolicy","nextFetchPolicy","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","a11yProps","event","newValue","setPriorutyTab","aria-label","erp_Users","GET_ORDER_BY_ID","PUSH_DOCS_ARRAY","DELETE_ORDER_FILE","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","UPDATE_ORDER_ITEM","UPDATE_ORDER_ITEM_METADATA","OrderItemActions","editItemHandler","deleteItemHandler","updateItem","setOIDialog","anchorEl","setAnchorEl","SerialNumber","Fitter","setState","handleClose","serialNumber","fitter","toString","aria-controls","aria-haspopup","currentTarget","size","moreVertIcon","Menu","keepMounted","open","Boolean","onClose","inputListItem","multiline","prevState","actionsWrapper","deleteButton","fullName","quantity","OrderComposition","refetch","orderID","OIDialog","deleteOrderItemMutation","insertOrderItemMutation","updateOrderItemMutation","updateOrderItemMetadataMutation","itemID","orderItemID","FullName","closeOIDialog","insertOrderItem","parseInt","el","Unit","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","addOrderItem","sx","mb","fullNameInput","quantityInput","DialogActions","justifyContent","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","UPDATE_ORDER_STATUS","DELETE_ORDER","ConfirmDialog","React","setOpen","aria-describedby","DialogContentText","onConfirmF","Shipment","mutateAwaitingDispatch","mutateOrderStatus","deleteOrder","update_erp_Orders_by_pk","OrderStatusID","delete_erp_Orders_by_pk","FormControlLabel","padding","checkbox","control","Checkbox","optimisticResponse","__typename","checked","OrderInfoCard","heading","secondaryHeading","Pre","OrderMeta","OrderNumber","Comment","CreatingDate","aboutOrder","PaymentHistories","INSERT_PAYMENT","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","insertPayment","log","autoComplete","InputProps","inputComponent","Autocomplete","getOptionLabel","option","renderInput","params","managerID","find","findSelectedManeger","filename","minWidth","Docs","onUpload","fileOnDelete","setFileOnDelete","deleteFileMutation","deleteFile","Key","attachedFiles","file","handleClickOpen","FileName","href","process","rel","files","path","onUploadFiles","INSERT_ORDER_COMMENT","DELETE_ORDER_COMMENT","UPDATE_ORDER_COMMENT","SUBSCRIBTION_ORDER_COMMENT","updateComment","deleteComment","nowEditing","setNowEditing","commentUnit","commentHeader","sender","actions","CommentID","time","Timestamp","timestamp","contentEditable","commentContent","suppressContentEditableWarning","onBlur","innerHTML","onMouseLeave","dangerouslySetInnerHTML","__html","Text","СommandsPopover","elevation","s","checklistUnit","ReactDOM","current","insertTodoinDOM","CommentsList","insertOrderCommentMutation","updateOrderCommentMutation","deleteOrderCommentMutation","useRef","comments","newText","switchTodo","classList","toggle","checklistUnit_complited","els","document","querySelectorAll","addEventListener","once","removeEventListener","commentsListWrapper","commentInputForm","ref","data-ph","onInput","innerText","saveButton","erp_Comments","comment","isFileOnDropzone","isDragActive","getElementById","add","remove","orderStatus","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","search","get","pushDocs","useParams","S3Upload","useCallback","acceptedFiles","uploadFile","key","originalname","useDropzone","onDrop","getRootProps","showOrderActions","Composition","Comments","Info","daysInMonth","selectedMonth","month","year","getDate","getIntervalData","day","intervals","timeDeduction","getMinutes","t","minutes","entrance","_entr","_exit","exit","getHours","number","hour","Math","floor","decpart","min","round","minute","convertInterval","interval","monthAdd","temp","getFullYear","getMonth","setMonth","setDate","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","BaseHeader","pageParams","icon","attendanceData","Attendance","Error","replace","gte","lte","getVarsForSubscription","attendance_users_aggregate","nodes","onChangeSearch","lastname","startsWith","firstname","Cell","hours","intervalsPools","generateColumns","attendanceLayout","getPageParams","window","location","pathname","attendanceTable","tableFooter","Reclamation","AppRouter","exact","BaseLayout","DARK_CLASS","SystemPreferTheme","appTheme","setAppTheme","systemPrefersDark","useMediaQuery","query","undefined","mode","documentElement","changeTheme","newTheme","expires","setFullYear","cookie","StyledToggleButtonGroup","ToggleButtonGroup","borderTopLeftRadius","borderTopRightRadius","getCookie","parts","pop","shift","SettingsDrawer","UItheme","logout","anchor","themeHandler","toggleDrawer","Drawer","onKeyDown","List","ListItem","themeToggleButtons","exclusive","ToggleButton","logoutButton","Sidebar","activeClassName","observer","setUItheme","createTheme","main","light","fontFamily","subtitle1","getDesignTokens","components","MuiDialog","styleOverrides","paper","borderRadius","MuiDialogTitle","root","MuiMenuItem","defaultProps","disableRipple","MuiButton","textInfo","iconbutton","strokeWidth","stroke","background","disableElevation","MuiTextField","MuiInputLabel","shrink","MuiFilledInput","disableUnderline","MuiInput","MuiInputBase","MuiOutlinedInput","notchedOutline","MuiPopover","MuiSelect","select","boxSizing","outline","boxShadow","MuiTab","MuiCheckbox","muicomponents","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","axios","create","withCredentials","baseURL","AuthService","post","Store","isLoading","makeAutoObservable","this","bool","isAuth","setInMemoryToken","accessToken","setUser","response","r","setLoading","formData","FormData","append","fetch","hasuraRes","url","createContext","webSocketLink","WebSocketLink","uri","reconnect","lazy","reconnectionAttempts","inactivityTimeout","connectionCallback","connectionParams","asyncTokenValidation","setContext","_","context","now","jwt","decode","exp","getNewToken","Authorization","apolloClient","ApolloClient","link","from","cache","InMemoryCache","typePolicies","keyFields","erp_CheckListUnits","client","sessionData","dataset","session","Provider"],"mappings":"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","file":"static/js/main.b9caf006.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableSearchInput\":\"search_tableSearchInput__mHzTe\",\"filter\":\"search_filter__1BI6Q\",\"filterPlaceholder\":\"search_filterPlaceholder__2NcNB\",\"filterIndicator\":\"search_filterIndicator__Rfc0e\",\"circle\":\"search_circle__2PIMx\",\"pulsate\":\"search_pulsate__pgEiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsWrapper\":\"OrderItemActions_actionsWrapper__1mryM\",\"deleteButton\":\"OrderItemActions_deleteButton__14fyW\",\"moreVertIcon\":\"OrderItemActions_moreVertIcon__3Qdex\",\"inputListItem\":\"OrderItemActions_inputListItem__22HbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"archive_inputWrapper__3nHE2\",\"archiveTable\":\"archive_archiveTable__1BwU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeToggleButtons\":\"SettingsDrawer_themeToggleButtons__hIzSP\",\"user\":\"SettingsDrawer_user__3iVNA\",\"logoutButton\":\"SettingsDrawer_logoutButton__2_Id_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"recently_heading__2gRdv\",\"recentlyTable\":\"recently_recentlyTable__3NJpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preOrdersTableWrapper\":\"preorders_preOrdersTableWrapper__2ELAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"shipment_checkbox__2pwPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsListWrapper\":\"Comments_commentsListWrapper__25Ylk\",\"commentInputForm\":\"Comments_commentInputForm__2W6Of\",\"checklistUnit\":\"Comments_checklistUnit__2rS_e\",\"checklistUnit_complited\":\"Comments_checklistUnit_complited__1J6jW\",\"saveButton\":\"Comments_saveButton__FkrZB\",\"commentUnit\":\"Comments_commentUnit__1L_o5\",\"actions\":\"Comments_actions__2pxUd\",\"commentContent\":\"Comments_commentContent__EsGgq\",\"commentHeader\":\"Comments_commentHeader__3aEgO\",\"sender\":\"Comments_sender__3ld3S\",\"time\":\"Comments_time__2egg6\"};","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const { store } = useContext(Context)\n  const [isLoaded, setisLoaded] = useState(false);\n  const [token, setToken] = useState(store.inMemoryToken);\n\n    async function getToken() {\n      store.checkAuth().then(\n        (res) => {\n          setToken(res)\n          setisLoaded(true)\n        }\n      )\n    }\n\n    useEffect(() => {\n      if (token) setisLoaded(true)\n      else getToken();\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n          if (token) return <Component {...props} />\n          else return <Redirect to='/login'/>;\n        }\n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import { useState, useContext } from 'react';\nimport { Context } from '../../index';\nimport { useHistory } from \"react-router-dom\";\n\nimport ReactNotification from 'react-notifications-component'\nimport { TextField, Button } from '@mui/material';\nimport './LoginForm.sass'\nimport { notif } from '../_core/notification'\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    \n    const { store } = useContext(Context);\n    const history = useHistory();\n\n\n    const login = async () => {\n      const res = await store.login(email, password)\n\n      if (res?.status === 200){\n        history.push('/')\n      }\n      else{\n        console.error('Invalig email or password')\n        notif('warning', 'Unauthorized error', 'Invalig email or password')\n      }\n      \n    }\n\n    return(<>\n      <ReactNotification />\n      <div className='loginCard'>\n        <TextField\n        className='loginInput'\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          className='loginInput'\n          onChange={e => setPassword(e.target.value.trim()) }\n        />\n        <Button\n          className=\"Button\"\n          variant=\"outlined\"\n          width='300px'\n          onClick={login}\n        >Войти</Button>\n      </div>\n    </>);\n}\n\nexport default LoginForm\n","import { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\n\nexport const notif = (type, title, message) =>  store.addNotification({\n  title,\n  message,\n  type,\n  insert: \"bottom\",\n  container: \"top-right\",\n  dismiss: {\n    duration: 4000,\n  }\n});\n","export const initialState = (selectedTab, cachedOrders, cachedPreOrders) => ({\n    orders: cachedOrders || [],\n    preOrders: cachedPreOrders || [],\n    selectedTab : selectedTab,\n\n    searchKeyword: '',\n    managerFilter: 0,\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'managerFilter': \n            return {...state, [action.type]: action.payload };\n\n        case 'resetFilters': \n            return {...state, searchKeyword: '', managerFilter: 0}\n        default: \n            return {...state}\n    }\n}","import gql from 'graphql-tag'; \n\n// Выбираем заказы находящиеся только в Прездаказах и в производстве \n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_neq: 3} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems(order_by: {OrderItemID: asc}){\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n        LastName\n      }\n\n    }  \n  }\n`\n","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n    AccessLevelID\n  }\n}\n`","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\nimport sass from '../main.module.sass'\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ' - 0%'\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row, counter) => counter +1\n    },\n    {\n      Header: 'Наим.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length === 0) return <Link to={`/orders/${data.OrderID}`}><div>Нет содержимого</div></Link>\n\n        else return (<Link to={`/orders/${data.OrderID}`}>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </Link>)\n      }\n      \n    },\n    {\n      Header: 'Кол-во',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'Отгрузка',\n      accessor: (order) => \n      <> { order.ShippingDate && moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'Компания / город',\n      accessor: data => \n      <div className={sass.customerTableInfo}>\n        <div>{data.Entity}</div>\n        <div>{data.City}</div>\n      </div>\n    },\n    {\n      Header: 'Счет- оплата',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'Мдж.',\n      accessor: data => <> {data.User?.FirstName[0] || ''} </>\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\n\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return null;\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          const awaitingDispatch = row.original.AwaitingDispatch\n          return (\n               <tr className={awaitingDispatch ? mainsass.awaitingDispatch : ''} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { UilSearch } from '@iconscout/react-unicons'\nimport sass from './search.module.sass'\n\nimport { FormControl, Select, MenuItem } from '@mui/material';\n\n// const useStyles = makeStyles((theme) => ({\n//     formControl: {\n//       minWidth: 70,\n//       borderRadius: 'var(--br10)',\n//       border: '1px solid var(--border)',\n//       padding: '0 10px',\n//     },\n//     select: {\n//         fontSize: '.8rem',\n//         color: 'var(--highContrast)',\n//     },\n//     menuItem: {\n//         fontSize: '.8rem',\n//         color: 'var(--lowContrast)',\n//     },\n//   }));\n\nconst Search = ({state, dispatch, users }) => {\n    // const classes = useStyles();\n\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter !== 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>Выдача ограничена фильтром</p>\n            </div>\n        ) \n    }\n\n    return (\n        <>\n        <div className={sass.tableSearchInput}>\n            <UilSearch/>\n            <input type='text' placeholder=\"Номер счета или организация\" onChange={searchHandler} autoFocus defaultValue={state.searchKeyword}/>\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl>\n                <Select\n                    name=\"managerFilter\"\n                    value={state.managerFilter}\n                    onChange={managerHandler}\n                >\n                    <MenuItem value={0}>Все</MenuItem>\n                    { users.map( (user) => \n                    <MenuItem value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                    )}\n                \n                </Select>\n                </FormControl>\n            </div>)}\n        </div>\n\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","function filteringAlg(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // применить поиск по ключевому слову\n    if (keyword !== '') {\n        result = array.filter( (order) => filteringAlg(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //применить поиск по фильру\n    if (managerFilter !== 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID === managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n    }\n  }\n\n`;","import { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\nimport Search from '../Search';\nimport { filter } from '../Search/filter'\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport { UilArrowFromRight} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\nimport mainsass from '../main.module.sass'\n\nconst PreOrders = ({ state, dispatch }) => {\n    const data = state.preOrders\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    const onClickTransfer = (order) => {\n        data.splice(data.indexOf(order), 1)\n        dispatch({ type: 'preOrders', payload: data })\n\n        mutationOrderStatus({ variables: { \n            OrderID: order.OrderID, \n            AcceptanceDate: new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"}) } \n        })\n    }\n\n    var newColumnList = [...columnsList];\n    const filtredData = filter(data, state.searchKeyword)\n    \n    newColumnList.push({\n        Header: ' ',\n        accessor: data => \n        <div onClick={() => onClickTransfer(data)} className=\"square-button\"><UilArrowFromRight/></div>\n        ,\n      })\n   \n    return(\n    <div className={`${mainsass.tableWrapper} ${sass.preOrdersTableWrapper}`}>\n        <Search state={state} dispatch={dispatch} />\n        {filtredData && <Table columns = {newColumnList} data = {filtredData} />}\n    </div>\n    )\n}\nexport default PreOrders","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ users, state, dispatch }) => {\n    const columns = useMemo(\n        () => columnsList, []\n    )\n    \n    const sortedData = state.orders .sort(function(a,b){\n        return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n    })\n\n    const filtredData = filter(sortedData, state.searchKeyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            {users && <Search state={state} dispatch={dispatch} users={users.filter(e => [1,2].includes(e?.AccessLevelID))}/>}\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\nimport Table from '../UniversalTable/TableMarkup'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport { Typography } from '@mui/material'\nimport sass from './recently.module.sass'\n\nconst Recently = ({ state, dispatch }) => {\n\n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(b.AcceptanceDate) - new Date(a.AcceptanceDate);\n      });\n\n    const spreadData = spread(sortedData);\n\n    const columns = useMemo(() => columnsList, [] )\n\n    const filtredData = filter(spreadData[2].objs, state.searchKeyword)\n\n    return(\n        <div>\n            <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n                Сегодня\n            </Typography>\n            { spreadData[0].objs.length ? ( <>\n           \n            <Table columns={columns} data={spreadData[0].objs} className={sass.recentlyTable} />\n            </>): null}\n\n\n            <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n                Вчера\n            </Typography>\n            { spreadData[1].objs.length ? ( <>\n          \n            <Table columns={columns} data={spreadData[1].objs} className={sass.recentlyTable} />\n            </>): null}\n\n            {/* <div className={sass.heading}>Остальные</div>\n            <div className={mainsass.tableWrapper}>\n                <Search state={state} dispatch={dispatch} incomingOrders={sortedData} />\n                { <Table columns = { columns } data = { filtredData } />}\n            </div> */}\n\n        </div>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Сегодня',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'Вчера',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': '',\n        'objs': [] \n        },\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.AcceptanceDate?.split('T')[0]\n\n        if (dateCreation === days[0].date) days[0].objs.push(order);\n        else if (dateCreation === days[1].date) days[1].objs.push(order);\n        else days[2].objs.push(order);    \n    }\n\n    return days;\n};\n","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!, $isReclamation: Boolean!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID, IsReclamation: $isReclamation}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { useMutation } from '@apollo/client';\nimport { INSERT_ORDER } from './MutationInsertOrder'\n\nimport { UilPlus, UilEditAlt} from '@iconscout/react-unicons';\n\nconst ActionsHeader = (props) => {\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n        'managerID':     props.userID,\n        'orderStatusID': 1,\n        'isReclamation':  false,\n    }})\n\n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            props.history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n\n    const editOrderHandler = () => {\n        props.setEditState(!props.editState)\n    }\n\n    const editOrderBtn = () => {\n        if (props.accessLevel === 2){\n            const editIconClass = () => props.editState ? 'action-icon active': 'action-icon'\n            return <div data-for='global' data-tip=\"Добавить\" className={editIconClass()} onClick={editOrderHandler}><UilEditAlt/></div>\n        }\n    }\n\n    const addOrder = () => {\n        if (props.createOrder){\n            return <div data-for='global' data-tip=\"Добавить\" onClick={createOrderHandler} className=\"action-icon\"><UilPlus/></div>\n        }\n    }\n    return(\n        <div className=\"action-block noprint\">\n            {/* <div data-for='global' data-tip=\"Распечатать\" className=\"action-icon\"><UilPrint/></div> */}\n            {addOrder()}\n            {editOrderBtn()}\n            {/* <div data-for='global' data-tip=\"Уведомления\" className=\"action-icon\"><UilBell/></div> */}\n        </div>\n    )\n}\n\nexport default ActionsHeader","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_SEARCH_ORDERS = gql`\n  query ($keyword: String!){\n  erp_Orders(where: {\n    _or: [\n      { Entity: {_ilike: $keyword} }, \n      { InvoiceNumber: {_ilike: $keyword} }\n\n      ],\n    OrderStatusID: {_eq: 3}\n    }) {\n      ActualShippingDate\n      AwaitingDispatch\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n  }\n}\n`\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\nimport { Typography } from '@mui/material/';\n\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows, \n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return <Typography color='textSecondary' variant=\"subtitle2\">-> ничего не найдено</Typography>\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          const unpaidOrder = row.original.unpaid\n          return (\n               <tr className={unpaidOrder ? mainsass.unpaidOrder : ''} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { gql } from \"graphql-tag\"\n\nexport const GET_ALL_ORDERS_AMOUNT = gql`\nquery{\n  erp_Orders(\n    where: {OrderStatusID: {_eq: 3}},\n    order_by: {OrderID: desc},\n    limit: 1000,\n    ){\n\t\tOrderID\n    PaidAmount\n    TotalAmount\n  }\n}\n`\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_LATEST_ORDERS = gql`\nquery($limit: Int!){\n  erp_Orders(\n    where: { OrderStatusID: {_eq: 3} } \n    limit: $limit\n    ){\n    ActualShippingDate\n    AwaitingDispatch\n    OrderID\n    Entity\n    InvoiceNumber\n    City\n    ShippingDate\n    PaidAmount\n    TotalAmount\n    CreatingDate\n    ManagerID\n    OrderItems {\n      Quantity\n      OrderItemID\n      Name\n    } \n    User {\n      FirstName\n    }\n  }\n}\n`","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_UNPAID_ORDERS = gql`\nquery MyQuery($unpaidIDs: [Int!]) {\n    erp_Orders(where: { OrderStatusID: {_eq: 3}, OrderID: {_in: $unpaidIDs } } ) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      ActualShippingDate\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n    }\n  }\n`","//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ALL_ORDERS_AMOUNT } from './queries/getAllOrdersAmount'\nimport { GET_ARCHIVED_LATEST_ORDERS } from './queries/getArchivedLatestOrders'\nimport { GET_ARCHIVED_UNPAID_ORDERS } from './queries/getArchivedUnpaidOrders'\n\nimport Table from './TableMarkup'\nimport sass from './archive.module.sass'\nimport { Typography } from '@mui/material/';\n\n\nconst PreviewTable = (props) => {\n  const { state, dispatch, columns } = props\n\n  const { data : latestOrders = [], loading: latestOrdersloading } = useQuery(GET_ARCHIVED_LATEST_ORDERS, {variables:{ limit: 10 }});\n\n  const { loading } = useQuery(GET_ALL_ORDERS_AMOUNT, { onCompleted: (res) => {\n    dispatch({ type: 'unpaidIDs', payload: res.erp_Orders.filter(e => e.PaidAmount / e.TotalAmount < .999).map(e => e.OrderID)})\n  }})\n\n  const { data : unpaidOrders = [], loading: unpaidOrdersLoading } = useQuery(GET_ARCHIVED_UNPAID_ORDERS, { variables: {unpaidIDs: state.unpaidIDs } })\n\n  const previewData = () => {\n    if (!unpaidOrders.erp_Orders || !latestOrders.erp_Orders) return []\n    return ([\n      ...unpaidOrders.erp_Orders.map(e => ({...e, unpaid: true})),\n      // проверяем есть ли в последних заказах неоплаченный, если есть, то убираем из их заказ из latestOrders\n      ...latestOrders.erp_Orders\n      .filter(e => !state.unpaidIDs.includes(e.OrderID))\n      .sort(function(a,b){\n        return new Date(b.ActualShippingDate) - new Date(a.ActualShippingDate);\n      })\n      ])\n  }\n\n  // if (latestOrdersloading || unpaidOrdersLoading || loading) return( \n  // <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height={400}>\n  //   <Spinner />\n  // </Pane>)\n\n  return (<>\n    <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n      Недавно отгруженные\n    </Typography>\n\n      <Table columns = {columns} data = {previewData()} className={sass.archiveTable}/>\n  </>)\n}\nexport default PreviewTable","import { useMemo, useReducer } from 'react';\n\n//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ARCHIVED_SEARCH_ORDERS } from './queries/getArchivedSearchOrders'\n\n//ui\nimport sass from './archive.module.sass'\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from './TableMarkup'\nimport { Typography, InputBase } from '@mui/material/';\n\nimport PreviewTable from './PreviewTable';\n\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n      case 'searchKeyword': \n      case 'unpaidIDs': \n          return {...state, [action.type]: action.payload };\n      default: \n          return {...state}\n  }\n}\n\nconst Archive = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    //заказы которые отгружено, но еще не оплачены\n    unpaidIDs: [],\n    searchKeyword: '',\n  });\n\n  const { data = [] } = useQuery(GET_ARCHIVED_SEARCH_ORDERS, { variables: {\n    keyword: '%' + state.searchKeyword + '%'\n  }})\n\n  const columns = useMemo(\n    () => columnsList, []\n  )\n  \n  const searchHandler = (e) => {\n    setTimeout(() => {\n      dispatch({ type: 'searchKeyword', payload: e.target.value})\n    }, 400)\n  }\n\n  return(\n    <div>\n      <InputBase\n        className={sass.inputWrapper}\n        autoFocus\n        onChange={searchHandler}\n        placeholder='номер счета или юрлицо'/>\n\n      {!state.searchKeyword && <PreviewTable state={state} dispatch={dispatch} columns={columns} /> }\n\n      {state.searchKeyword &&  data.erp_Orders && <>\n          <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n            Результат поиска по архиву\n          </Typography>\n          <Table columns = {columns} data = {data.erp_Orders} className={sass.archiveTable}/>\n      </>}\n\n    </div>\n  )\n}\nexport default Archive;","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\n\n// apollo\nimport { useSubscription, useQuery } from '@apollo/client'\nimport { GetOrdersSubscription } from './queries/getOrders'\nimport { GET_USERS } from '../../hasura-queries/getUsers'\n\n// ui \nimport {Tabs, Tab, Box} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport mainsass from './main.module.sass'\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport ActionsHeader from '../BaseHeader/ActionsHeader'\nimport Archive from './Archive/';\n\nconst StyledTabs = styled((props) => <Tabs {...props} />)(\n  ({ theme }) => ({\n    margin: '0 0 1rem',\n    '& .MuiTabs-indicator': {\n      display: 'none'\n    },\n  }),\n  );\n\nconst StyledTab = styled((props) => <Tab {...props} />)(\n    ({ theme }) => ({\n      textTransform: 'none',\n      fontWeight: 400,\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(15),\n      marginRight: theme.spacing(1),\n      borderBottomRightRadius: '8px',\n      borderBottomLeftRadius: '8px',\n      border: '1px solid transparent',\n      '&.Mui-selected': {\n        backgroundColor: 'var(--L1)',\n        color: theme.palette.primary,\n        border: '1px solid var(--borderLight)'\n      }\n    }),\n  );\n\n\nconst OrderListLayout = (props) => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState( store.priorityTab, store.cachedOrders, store.cachedPreOrders ));\n    const { selectedTab } = state; \n\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n  \n        options.subscriptionData.data.erp_Orders.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n          });\n\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID === 1) preOrders.push(order)\n            else if (order.OrderStatus.ID === 2) orders.push(order)\n        })\n        store.setCachedOrders(orders)\n        store.setCachedPreOrders(preOrders)\n\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    \n    useSubscription(GetOrdersSubscription, { onSubscriptionData,  fetchPolicy: \"cache-first\", nextFetchPolicy: \"cache-first\" });\n    const { data: users = []} = useQuery(GET_USERS);\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        dispatch({ type: 'resetFilters'})\n        store.setPriorutyTab(newValue)\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n    \n    return(\n        <div className={mainsass.OrderListLayout}>\n        <StyledTabs value={selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\" className='orderListLayoutTabs'>\n            <StyledTab label=\"Предзаказы\" {...a11yProps(0)} />\n            <StyledTab label=\"Очередость\" {...a11yProps(1)} />\n            <StyledTab label=\"Недавние\"   {...a11yProps(2)} />\n            <StyledTab label='Архив'      {...a11yProps(3)} />\n            <ActionsHeader createOrder={1} userID={store.user.UserID} history={history}/>\n        </StyledTabs>\n\n\n        <TabPanel value={selectedTab} index={0}>\n            <PreOrders state={state} dispatch={dispatch}/>\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={1} >\n            <Priority state={state} dispatch={dispatch} users={users.erp_Users} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={2}>\n            <Recently state={state} dispatch={dispatch} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={3}>\n            <Archive state={state} dispatch={dispatch} />\n        </TabPanel>\n\n      </div>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    AwaitingDispatch\n    ActualShippingDate\n    AcceptanceDate\n    OrderID\n    ManagerID\n    OrderStatusID\n    City\n    ShippingDate\n    CreatingDate\n    Comment\n    Entity\n    InvoiceNumber\n    OrderNumber\n    PaidAmount\n    TotalAmount\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems(order_by: {OrderItemID: asc}) {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialNumber\n    }\n    CheckListUnits(order_by: {CheckListUnitID: desc}) {\n      CheckListUnitID\n      OrderID\n      IsComplited\n      Point\n    }\n    Docs {\n      Key\n      FileName\n    }\n    PaymentHistories(\n      where: {PaidAmount: {_neq: 0}}\n    ){\n      PaidAmount\n      Date\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;\n\n\nexport const UPDATE_ORDER_ITEM = gql`\nmutation($OrderItemID: Int!, $FullName: String!, $Name: String!, $Quantity: Int!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n    _set: {FullName: $FullName, Name: $Name, Quantity: $Quantity}) {\n    Name\n    FullName\n    OrderItemID\n    Quantity\n  }\n}\n\n`;\nexport const UPDATE_ORDER_ITEM_METADATA = gql`\nmutation($OrderItemID: Int!, $Fitter: String!, $SerialNumber: String!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n     _set: {Fitter: $Fitter, SerialNumber: $SerialNumber}\n  ){\n    OrderItemID\n  }\n}\n`","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu, MenuItem, TextField } from '@mui/material';\nimport { UilEllipsisV } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n  \nconst OrderItemActions = ({ editState, item, editItemHandler, deleteItemHandler, updateItem, setOIDialog }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    'serialNumber': item.SerialNumber,\n    'fitter': item.Fitter\n  });\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n\n    if (item.SerialNumber !== state.serialNumber || item.Fitter !== state.fitter){\n      updateItem({ variables: {\n        'OrderItemID': item.OrderItemID,\n        'Fitter': state.fitter,\n        'SerialNumber': state.serialNumber.toString()\n      } })\n    }\n  };\n    \n  return (\n  <div className='noprint'>\n    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size='small'>\n      <UilEllipsisV className={sass.moreVertIcon}/>\n    </Button>\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n    >\n\n\n      <MenuItem className={sass.inputListItem} >\n        <TextField \n          type=\"number\"\n          label=\"Серийный номер\" \n          multiline\n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'serialNumber': e.target.value\n          }))}\n          defaultValue={state.serialNumber}\n          />\n      </MenuItem>\n\n      <MenuItem className={sass.inputListItem} >\n        <TextField \n          label=\"Сборщик\"  \n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'fitter': e.target.value\n          }))}\n          defaultValue={state.fitter}\n        />\n      </MenuItem>\n\n\n      {editState && (\n        <div className={sass.actionsWrapper}>\n          <MenuItem onClick={ (e) => {\n              setOIDialog(true)\n              handleClose();\n              editItemHandler(e, item);\n          }}>Редактировать</MenuItem>\n\n          <MenuItem \n            className={sass.deleteButton}\n            onClick={ ()=> {\n              handleClose();\n              deleteItemHandler(item.OrderItemID);\n          }}>Удалить</MenuItem>\n        </div>\n      )}\n\n    </Menu>\n  </div>\n  );\n}\n\nOrderItemActions.propTypes = { \n    editState: PropTypes.bool,\n    item:      PropTypes.object,\n    editItemHandler:  PropTypes.func, \n    deleteItemHandler: PropTypes.func,\n    updateItem: PropTypes.func\n}\n\nexport default OrderItemActions\n\n","import { useReducer, useEffect, useState } from 'react'\n\n//apollo \nimport { useMutation } from \"@apollo/client\"\nimport { \nDELETE_ORDER_ITEM, \nINSERT_ORDER_ITEM, \nUPDATE_ORDER_ITEM, \nUPDATE_ORDER_ITEM_METADATA \n} from \"./queries/MutationOrderItem\";\n\n// ui \nimport { Button, TextField, Box, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport sass from './sass/composition.module.sass'\nimport OrderItemActions from './OrderItemActions'\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n    id: null,\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                id: action.payload[0],\n                name: action.payload[1],\n                fullName: action.payload[2],\n                quantity: action.payload[3]\n            }\n        default: \n            return {...state}\n    }\n\n}\n\nconst OrderComposition = props => {\n    const { data, editState, refetch, orderID, OIDialog, setOIDialog } = props\n    const [ deleteOrderItemMutation ]         = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ]         = useMutation(INSERT_ORDER_ITEM);\n    const [ updateOrderItemMutation ]         = useMutation(UPDATE_ORDER_ITEM);\n    const [ updateOrderItemMetadataMutation ] = useMutation(UPDATE_ORDER_ITEM_METADATA);\n    const [state, dispatch ] = useReducer(reducer, initialState)\n    \n    const deleteItemHandler = (itemID) => {\n        deleteOrderItemMutation({ variables: { orderItemID: itemID} })\n        refetch()    \n    }\n    const editItemHandler = (e, item) => {\n        dispatch({ type: 'editItem', payload: [item.OrderItemID, item.Name, item.FullName, item.Quantity] })\n    }\n\n    const closeOIDialog = () => {\n      setOIDialog(false);\n    };\n\n    useEffect(() => {\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n    const insertOrderItem = () => {\n        closeOIDialog();\n        if (state.quantity === '' || state.name === '') return null\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const updateOrderItem = () => {\n      if (state.quantity === '' || state.name === '') return null\n      closeOIDialog();\n      updateOrderItemMutation({variables: { \n        OrderItemID: state.id,\n        Name: state.name, \n        Quantity: parseInt(state.quantity),\n        FullName: state.fullName, }}).then( () => { dispatch({ type: 'reset'}); refetch() })    \n  }\n  \n    return(<>     \n        {data.map( (el, index) => \n        <div\n          key={el.OrderItemID}\n          className={sass.Unit} \n        >\n              <span className={sass.index}>{index+1}</span>\n              <Typography color='textPrimary' className={sass.name}> {el.Name} </Typography>\n              <span  className={sass.quantity}> {el.Quantity}</span>\n              <OrderItemActions\n                  {...props}\n                  item={el}\n                  editItemHandler={editItemHandler}\n                  deleteItemHandler={deleteItemHandler}\n                  updateItem={updateOrderItemMetadataMutation}\n              />\n\n              <div className={sass.fullName}> { el.FullName }</div>\n\n        </div>\n        )}\n        \n      <Dialog maxWidth='md' fullWidth={true} open={OIDialog} onClose={closeOIDialog}>\n        <DialogTitle>Добавить позицию</DialogTitle>\n        <DialogContent>\n        <Box className={sass.addOrderItem}>\n          <TextField\n            label=\"Наименование\"\n            value={state.name}\n            variant='filled'\n            sx={{mb: '8px'}}\n            onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"Полное наименование\"\n            multiline\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.fullNameInput}\n            value={state.fullName}\n            onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"Кол-во\"\n            type=\"number\"\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.quantityInput}\n            value={state.quantity}\n            onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n            />\n        </Box>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'start'}} >\n            {state.name && state.quantity && (!state.id \n            ? <Box><Button variant='contained' onClick={insertOrderItem}>Добавить</Button> </Box>\n            : <Box><Button variant='contained' onClick={updateOrderItem}>Изменить</Button></Box> )}\n              <Box  ><Button onClick={() => {\n                  closeOIDialog();\n                  dispatch({type: 'reset'});\n              }}>Закрыть</Button></Box>\n        </DialogActions>\n      </Dialog>\n    </>)\n}\n\nexport default OrderComposition","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($orderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $orderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($orderID: Int!, $awaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $orderID},\n   _set: { AwaitingDispatch: $awaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;\n\nexport const UPDATE_ORDER_STATUS = gql`\n  mutation MyMutation($OrderID: Int!, $ActualShippingDate: timestamptz!) {\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID}, \n      _set: {\n        OrderStatusID: 3,\n        AwaitingDispatch: false,\n        ActualShippingDate: $ActualShippingDate,\n        }){\n      OrderID\n      OrderStatusID\n    }\n  }\n`;","import {gql} from 'graphql-tag'; \n\nexport const DELETE_ORDER = gql`\nmutation MyMutation($OrderID: Int!) {\n  delete_erp_Orders_by_pk(OrderID: $OrderID) {\n    OrderID\n  }\n}\n`;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function ConfirmDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant='outlined' onClick={handleClickOpen} sx={{ fontSize: '.8rem !important'}}>\n        Отгружен\n      </Button>\n      <Dialog\n        open={open}\n        maxWidth='xs'\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Перенести в архив?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Заказ удалится из очередности, но его в любое время можно будет найти в архиве по номеру счета, юрлицу, маркировке привода.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>Отменить</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Перенести \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useState } from 'react'\nimport sass from './shipment.module.sass'\nimport { useMutation } from \"@apollo/client\"\nimport { useHistory } from \"react-router-dom\";\n\nimport { \n  UPDATE_AWAITING_DISPATCH,\n  UPDATE_ORDER_STATUS } from '../queries/MutationOrderInfo'\nimport { DELETE_ORDER } from '../queries/MutationDeleteOrder';\n\nimport ConfirmDialog from './ConfirmDialog'\nimport { Button, Checkbox, FormControlLabel } from '@mui/material';\n\nconst Shipment = (props) => {\n  const { data, orderID } = props\n  const history = useHistory();\n  const [mutateAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n  const [mutateOrderStatus] = useMutation(UPDATE_ORDER_STATUS);\n  const [deleteOrder] = useMutation(DELETE_ORDER);\n\n  function deleteOrderHandler(){\n    deleteOrder({ variables: {\n      OrderID: orderID\n    }}).then( res => {\n      if (res.data.delete_erp_Orders_by_pk.OrderID){\n        history.push(\"/\")\n      }\n    })\n  }\n  function awaitingDispatchHandler(){\n    mutateAwaitingDispatch({\n      variables: {orderID, awaitingDispatch: !data.AwaitingDispatch },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: orderID,\n            AwaitingDispatch: !data.AwaitingDispatch\n          }\n        }\n    })\n  }\n  async function TransferOrder(){\n    mutateOrderStatus({ variables: { \n      OrderID: orderID,\n      ActualShippingDate: new Date()\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderStatusID === 3){\n          history.push(\"/\")\n        }\n      }\n    )\n  }\n\n  if (data.OrderStatusID === 3) return null\n  if (data.OrderStatusID === 1) return (\n    <div>\n        <Button onClick={deleteOrderHandler} color='secondary'>\n          Удалить предзаказ\n        </Button>\n    </div>\n  )\n  return (\n    <div>\n        {/* <Checkbox className={sass.checkbox} marginTop={0} label=\"Ожидает отгрузки\" onChange={awaitingDispatchHandler} checked={data.AwaitingDispatch}/> */}\n\n        <FormControlLabel \n        sx={{\n          margin: 0,\n          padding: '0 0 10px',\n        }}\n        className={sass.checkbox}\n        control={<Checkbox \n        onChange={awaitingDispatchHandler}\n        checked={data.AwaitingDispatch}\n        />} label=\"Ожидает отгрузки\" />\n\n        <ConfirmDialog onConfirmF={TransferOrder}/>\n    </div>\n  )\n}\nexport default Shipment","import  moment  from 'moment'\nimport \"./sass/order-meta.sass\";\nimport { Typography, Box } from '@mui/material/';\n\nimport Shipment from \"./Shipment/Shipment\";\nimport { styled } from '@mui/material/styles';\n\nconst OrderInfoCard = (props) => {\n  const { heading, secondaryHeading } = props;\n  return (\n    <Box className=\"OrderInfoCard\" sx={{ color: 'text.primary' }}>\n    <div className='row'>\n      <div className='heading'>\n        {heading}\n      </div>\n      <div className='secondaryHeading noprint'>\n        {secondaryHeading}\n      </div>\n    </div>\n\n    <div className='body'>\n      {props.children}\n    </div>\n  </Box>\n  )\n}\nconst Pre = styled((props) => <Typography {...props} />)(\n  ({ theme }) => ({\n    color: theme.palette.text.secondary,\n    fontSize: '.8rem'\n  }),\n  );\n\nconst OrderMeta = (props) => {\n   const { data } = props;\n    \n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ' '\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n   \n    const paidVisualization = () => {\n      if (data.PaymentHistories.length == 0) return null\n\n      return (\n        <OrderInfoCard className='noprint' heading=\"Платежи\" secondaryHeading={`${data.TotalAmount} ₽`}>\n           <table className='paidVisualization'>\n           <tbody>\n            {data.PaymentHistories.map(e => (\n                <tr key={e.Date}>\n                  <td>{(e.PaidAmount / data.TotalAmount * 100).toFixed(0)} % </td>\n                  <td>{moment(e.Date).format('DD.MM.YY')}</td>\n              </tr>\n            ))}\n          </tbody>\n          </table>\n        </OrderInfoCard>\n      )\n    }\n    \n    const aboutOrder = () => {\n      const columns = [\n        {\n          'heading': \"Менеджер\",\n          'data': `${data.User?.FirstName} ${data.User?.LastName || 'undefined'}`, \n        },\n        {\n          'heading': \"Создан\",\n          'data': moment(data.CreatingDate).format('DD.MM.YY'),\n        },\n        {\n          'heading': \"В очередности\",\n          'data': moment(data.AcceptanceDate).format('DD.MM.YY'), \n        },\n        {\n          'heading': \"Факт. отгрузка\",\n          'data': moment(data.ActualShippingDate).format('DD.MM.YY'), \n        }\n      ]\n      return (\n        <OrderInfoCard heading=\"О заказе\">\n          <table><tbody>\n             {columns.map(el => {\n                if (!el.data || el.data === 'Invalid date') return null\n                return <tr key={`${el.heading} ${el.data}`}>\n                  <td>{el.heading}</td>\n                  <td>{el.data}</td>\n                </tr>\n                }\n              )}\n          </tbody></table>\n        </OrderInfoCard>\n      )\n    }\n\n  return (<>\n      <div className=\"wrap\">\n\n          <Box className='significantInfo' sx={{ color: 'text.primary' }}>\n            <div className='bold'>\n              <Pre>План. отгузка</Pre>\n              {data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY')}\n            </div>\n            <div className='bold'>\n              <Pre>Номер заказа</Pre>\n              {data.OrderNumber}\n            </div>\n            <div className='bold'>\n              <Pre>Счет / оплата</Pre>\n              {\"№ \"+ (data.InvoiceNumber || '')+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n            </div>\n          </Box>\n\n          <div className='OrderComment'>\n              <Pre>Комментарий</Pre>\n              {data.Comment}\n          </div>\n\n        {aboutOrder()}\n        {paidVisualization()}\n      </div>\n      <div className=\"actions noprint\">\n        <Shipment {...props} />\n      </div>\n  </>)\n}\n\nexport default OrderMeta\n","import {gql} from 'graphql-tag'; \n\nexport const INSERT_PAYMENT = gql`\n  mutation($PaidAmount: numeric!, $Date: timestamptz!, $OrderID: Int!) {\n    insert_erp_PaymentHistory_one(object: {PaidAmount: $PaidAmount, OrderID: $OrderID, Date: $Date}) {\n      ID\n      OrderID\n    }\n}\n`;","import { useEffect } from 'react';\nimport './EditableInfo.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\nimport { INSERT_PAYMENT } from '../queries/MutationPaymentHistory'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nimport { TextField, Autocomplete } from '@mui/material';\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'₽ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch, users }) => {  \n  \n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n    const [insertPayment] = useMutation(INSERT_PAYMENT)\n  \n    function saveChanges(){\n      console.log('doing mutation for order', orderID, fields)\n      updateOrderInfo({variables: {\n        orderID,\n        fields,\n      }})\n\n      if (fields.PaidAmount) insertPayment({ variables: {\n          Date: new Date,\n          OrderID: orderID,\n          PaidAmount: fields.PaidAmount\n        }})\n      \n      refetch()\n    }\n    useEffect(() => {\n        fields = {};\n        return () => {\n            saveChanges()\n        };\n    }, []);\n\n    function findSelectedManeger(users, managerID){\n      if (!users) return null\n      const index = users.indexOf(users.find(user => user.UserID === managerID))\n      return users[index]\n    }\n\n  return(\n    <form className=\"EditableInfo\">  \n      <div className=\"wrap\">\n       <TextField\n          label=\"План. отгрузка\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          autoComplete=\"off\"\n          InputProps={{\n            inputComponent: DateFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"Номер счета\"\n          type=\"number\"\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"Номер заказа\"\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={users.filter( (user) => user.AccessLevelID != 3)}\n          getOptionLabel={(option) => `${option.FirstName} ${option.LastName}`}\n          renderInput={(params) => <TextField {...params} label=\"Менеджер\"/>}\n          defaultValue={() => findSelectedManeger(users, data.ManagerID)}\n          onChange={(event, newValue) => {\n            fields['ManagerID'] = (newValue?.UserID || null)\n          }}\n        />\n\n         <TextField\n          label=\"Юр лицо\"\n          autoComplete=\"off\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"Город\"\n          autoComplete=\"off\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Сумма заказа\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n          />\n        \n        <TextField\n          label=\"Оплачено\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"Комментарий\"\n          multiline\n          autoComplete=\"off\"\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n       </div>\n    </form>\n  )\n}\n\nexport default EditableInfo","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nexport default function ConfirmDialog(props) {\n  const { filename, open, handleClose, onConfirmF} = props\n  return (\n    <div>\n      <Dialog\n        open={open}\n        minWidth='xs'\n\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" sx={{\n          color: 'var(--lowContrast) !important',\n          'span': {\n            color: 'var(--highContrast) !important'\n          }\n        }}>\n            Удалить <span>{filename}</span> ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>Отменить</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Удалить \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useContext, useState, useEffect } from 'react';\nimport { Context } from '../../../index'\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from '../queries/MutationOrderDocs';\n\nimport './docs.sass'\n\nimport ConfirmDialog from './ConfirmDialog';\n\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const { store } = useContext(Context)\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length === 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n    useEffect(() => {\n        setOpen(false)\n    }, [editState]);\n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        await store.deleteFile(fileOnDelete.Key, deleteFileMutation)\n        refetch()\n    }\n\n    const attachedFiles = data.map(\n        file => {\n            // delite file\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n             // opne file\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    rel=\"noreferrer\"\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n            <div className='filesContainer'>\n                {attachedFiles}\n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n\n            <ConfirmDialog \n                filename={fileOnDelete?.FileName} \n                open={open}  \n                handleClose={handleClose}\n                onConfirmF={deleteFile}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_COMMENT = gql`\nmutation($OrderID: Int!, $Text: String!, $UserID: Int!) {\n  insert_erp_Comments_one(\n    object: {OrderID: $OrderID, Text: $Text, UserID: $UserID}) \n    {\n    CommentID\n    OrderID\n    Text\n    Timestamp\n    UserID\n  }\n}\n`;\n\nexport const DELETE_ORDER_COMMENT = gql`\n mutation($CommentID: Int!) {\n  delete_erp_Comments_by_pk(CommentID: $CommentID) {\n    CommentID\n  }\n}\n`;\n\nexport const UPDATE_ORDER_COMMENT = gql`\nmutation($CommentID: Int!, $Text: String!, $Timestamp: timestamptz!) {\n  update_erp_Comments_by_pk(\n    pk_columns: {CommentID: $CommentID},\n    _set: {Text: $Text, Timestamp: $Timestamp}) \n    {\n    OrderID\n    Text\n    Timestamp\n    UserID\n    CommentID\n  }\n  }\n`;","import gql from 'graphql-tag'\n\nexport const SUBSCRIBTION_ORDER_COMMENT = gql`\n  subscription MySubscritp($OrderID: Int!) {\n    erp_Comments(where: {OrderID: {_eq: $OrderID}}, order_by: {CommentID: desc}) {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n  }\n`\n","import sass from './index.module.sass'\nimport moment from 'moment'\n\nconst Comment = (props) => {\n  const { data, userID, updateComment, deleteComment, nowEditing, setNowEditing } = props\n\n  function sender(){\n    return `${data.User.FirstName} ${data.User.LastName}`\n  }\n  \n  function actions(){\n    if (userID === data.User.UserID && nowEditing?.CommentID !== data.CommentID ) return (\n        <div onClick={()=> deleteComment(data.CommentID)}>Удалить</div>\n    )\n  }\n  function timestamp(){\n    const date = moment(data.Timestamp)\n    return date.format('MMM D') +' at '+ date.format('hh:mm')\n  }\n\n  function getCommentContent(){\n    if (userID === data.User.UserID) return <div contentEditable=\"true\"\n    key={data.CommentID}\n    className={sass.commentContent}\n    suppressContentEditableWarning=\"true\"\n    onBlur={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n    }}\n    onMouseLeave={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n      setNowEditing(null)\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text}}></div>\n\n    else return <div className={sass.commentContent}>{data.Text}</div>\n\n  }\n\n  return (\n    <div className={sass.commentUnit}>\n\n      <div className={sass.commentHeader}>\n        <div className={sass.sender}> {sender()} </div>\n        <div className={sass.actions}>{actions()}</div>\n        <div className={sass.time}> {timestamp()} </div>\n      </div>\n      {getCommentContent()}\n\n    </div>\n  )\n}\nexport default Comment ","import PropTypes from 'prop-types'\nimport { Menu, MenuItem, Box } from '@mui/material/';\nimport ReactDOM from 'react-dom';\nimport sass from './index.module.sass'\n\nconst СommandsPopover = props => {\n  const {anchorEl, open, handleClose, inputRef} = props\n\n  function insertTodoinDOM (){\n    const s = <div className={sass.checklistUnit}> </div>\n    ReactDOM.render(s, inputRef.current)\n  }\n  return (\n    <Menu\n        id=\"Comments__commandMenu\"\n        aria-labelledby=\"Comments__commandMenu__button\"\n        anchorEl={anchorEl}\n        open={open}\n        elevation={5}\n        onClose={handleClose}\n        sx={{\n          border: '1px solid var(--border) !important',\n          '.MuiList-root':{\n            padding: '10px',\n\n          }\n        }}\n      >\n        <MenuItem onClick={() => {\n          handleClose();\n          insertTodoinDOM();\n        }}>Чеклист</MenuItem>\n        <MenuItem onClick={handleClose} sx={{ color: 'var(--border)'}}>Упомянуть</MenuItem>\n    </Menu>\n  )\n}\n\nСommandsPopover.propTypes = {\n\n}\n\nexport default СommandsPopover\n","import { useState, useRef, useEffect } from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { INSERT_ORDER_COMMENT, UPDATE_ORDER_COMMENT, DELETE_ORDER_COMMENT } from '../queries/MutationOrderCommnets'\nimport { SUBSCRIBTION_ORDER_COMMENT } from '../queries/SubscriptionComments'\nimport sass from './index.module.sass'\n\nimport { Box } from '@mui/material/';\nimport Comment from './Comment'\nimport { UilMessage } from '@iconscout/react-unicons'\nimport СommandsPopover from './СommandsPopover'\n\nconst CommentsList = (props) => {\n  const { orderID, user } = props\n  const [ insertOrderCommentMutation ] = useMutation(INSERT_ORDER_COMMENT);\n  const [ updateOrderCommentMutation ] = useMutation(UPDATE_ORDER_COMMENT);\n  const [ deleteOrderCommentMutation ] = useMutation(DELETE_ORDER_COMMENT);\n  var inputRef = useRef();\n  const [nowEditing, setNowEditing] = useState();\n  const { data: comments = [], loading } = useSubscription(SUBSCRIBTION_ORDER_COMMENT, { variables: { OrderID: orderID }});\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  function insertComment(){\n    const text = inputRef.current.innerHTML\n    if (!text) return null\n    insertOrderCommentMutation({ variables: {\n      OrderID: orderID,\n      UserID: user.UserID,\n      Text: text\n      }\n    })\n    inputRef.current.innerHTML = ''\n  }\n\n  function updateComment(id, newText){\n    updateOrderCommentMutation({ variables: {\n      CommentID: id,\n      Text: newText,\n      Timestamp: new Date()\n    }})\n  }\n\n  function deleteComment(id){\n    deleteOrderCommentMutation({ variables: {\n      CommentID: id\n    }\n  })\n  }\n  \n  function switchTodo(e) {\n    e.target.classList.toggle(sass.checklistUnit_complited)\n  }\n\n  function inputHandler(e){\n    if (e.target.innerText.trim() === '/') setAnchorEl(e.target)\n  }\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  \n  function switchTodo(e) {\n    e.target.classList.toggle(sass.checklistUnit_complited)\n  }\n\n  useEffect(() => {\n    const els = [...document.querySelectorAll(`div.${sass.commentUnit} div.${sass.checklistUnit}`)]\n    els.forEach( el => {\n      el.addEventListener('click', switchTodo, false);\n    }, {once : true})\n    return () => {\n      els.forEach( el => {\n        el.removeEventListener('click', switchTodo, false);\n      })\n    }\n  }, [comments])\n\n  return(\n    <div className={sass.commentsListWrapper}>\n     <div className={sass.commentInputForm}>\n      \n      <СommandsPopover anchorEl={anchorEl} open={open} handleClose={handleClose} inputRef={inputRef}/>\n\n      <Box id=\"Comments__commandMenu__button inputField\"\n        aria-controls=\"Comments__commandMenu\"\n        aria-haspopup=\"true\"\n        contentEditable='true'\n        ref={inputRef}\n        data-ph=\"Комментарий или ' / ' для команды\"\n        onInput={inputHandler}>\n      </Box>\n    \n      <div onClick={insertComment} className={sass.saveButton}><UilMessage/></div>\n    </div>\n\n     {!loading && \n      comments.erp_Comments.map( (comment) => <Comment \n        data={comment} \n        key={comment.CommentID}\n        userID={user.UserID}\n        deleteComment={deleteComment}\n        updateComment={updateComment}\n        nowEditing={nowEditing}\n        setNowEditing={setNowEditing}\n      />)}\n    </div>\n  )\n}\n\nexport default CommentsList","import { UilCloudUpload } from '@iconscout/react-unicons'\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <div >\n             <UilCloudUpload className='inCloudconIcon'/>\n         </div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","import { useContext, useCallback, useState } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_USERS } from '../../hasura-queries/getUsers';\nimport { GET_ORDER_BY_ID } from './queries/GetOrderByID'\nimport { PUSH_DOCS_ARRAY } from './queries/MutationOrderDocs'\nimport { useMutation, useQuery } from \"@apollo/client\";\n\n//components\nimport Composition from \"./Composition\";\nimport Info from \"./Info\";\nimport EditableInfo from \"./EditableComponents/EditableInfo\";\nimport Docs from './Docs/Docs';\nimport CommentsList from \"./Comments/CommentsList\";\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport './sass/index.sass';\nimport { Typography, Button, Box } from '@mui/material'\nimport { UilPlus, UilEditAlt } from '@iconscout/react-unicons';\n\n\nfunction orderStatus(data){\n    // add a note to the title if this is a pre-order\n    if (data.OrderStatusID === 1) return ' | Предзаказ';\n    if (data.OrderStatusID === 3) return ' | В архиве';\n}\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    // Add new Order Item Dialog\n    const [OIDialog, setOIDialog] = useState(false)\n    const [pushDocs] = useMutation(PUSH_DOCS_ARRAY);\n    const orderID = useParams().id\n\n    const S3Upload = useCallback(acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        store.uploadFile(acceptedFiles).then(\n            (res) => {\n                if (res.status !== 200) console.log('S3 file upload error')\n                else{\n                    let m = []\n                    for (var i=0;  i<res.data.length; i=i+2 ){\n                        m.push({\n                            'Key': res.data[i].key,\n                            'OrderID': orderID,\n                            'FileName': res.data[i].originalname,\n                        })\n                    }\n                    pushDocs({ variables: {'objects': m} })\n                } \n                setOnUploadFiles([])\n                refetch();\n                }\n            \n        )\n      }, [])\n\n    var { data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID} });\n    const { data: users = []} = useQuery(GET_USERS);\n    const {getRootProps, isDragActive} = useDropzone({className: 'dropzone', onDrop: S3Upload });\n    \n    function showOrderActions(){\n        if ([1,2,4].includes(store.user.AccessLevelID)) return true\n    }\n\n    return(\n    <div> \n        {isFileOnDropzone(isDragActive)}\n        { data.erp_Orders ? (<>\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n                <div className='LeftSideContent'>\n\n                    <div className=\"page-header\">\n                        <Typography sx={{ fontWeight: 600, fontSize: '1rem'}}>\n                            {data.erp_Orders[0].Entity} __ {data.erp_Orders[0].City} \n                            <span className=\"preorderTitle\">{orderStatus(data.erp_Orders[0])}</span>\n                        </Typography>\n\n                       {showOrderActions() && <Box className='orderActions_box'>\n                         {editState && \n                          <Button variant=\"iconbutton\" onClick={() => setOIDialog(true)}>\n                            <UilPlus/>\n                          </Button>}\n                          <Button variant=\"iconbutton\" onClick={() => setEditState(!editState)}>\n                              <UilEditAlt/>\n                          </Button>\n                        </Box>}\n                    </div>\n\n                    <div className=\"Composition\">  \n                      <Composition \n                          data={data.erp_Orders[0].OrderItems} \n                          editState={editState}\n                          refetch={refetch}\n                          OIDialog={OIDialog}\n                          setOIDialog={setOIDialog}\n                          orderID= {orderID} /> \n                    </div>\n\n                    <CommentsList \n                    orderID={orderID} \n                    user={store.user} \n                    data={data.erp_Orders[0].Comments}/> \n\n                    <Docs data={data.erp_Orders[0].Docs} \n                    onUpload={onUploadFiles} \n                    editState = {editState} \n                    refetch={refetch} />\n                     \n                </div>\n                <div className=\"Info\">\n                  {editState? <EditableInfo data={data.erp_Orders[0]} orderID={orderID} refetch={refetch} users={users.erp_Users} /> : (\n                              <Info data={data.erp_Orders[0]} editState = {editState} orderID={orderID} />)}\n                </div>\n        </section> \n\n        </>): null }\n\n    </div>\n    )\n}\n\nexport default OrderLayout","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervalsPools(where: {entrance: {_gte: $gte,  _lte: $lte}}) {\n        entrance\n        exit\n        card\n        interval\n        status\n      }\n    }\n  }\n}  \n`\n\n\n","\nexport function daysInMonth (selectedMonth) {\n    // количество дней в текущем месяце\n      const [month, year] = selectedMonth\n      return new Date(year, month+1, 0).getDate();\n}\n\n\n  \n\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './functions'\nimport sass from './attendance.module.sass'\n\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  let columnsList = [\n      {\n      Header: 'Сотрудник',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'Итого',\n      Cell: row => {\n        var hours = 0;\n        const intervals = row.row.original.intervalsPools\n        intervals.forEach( interval => {\n          hours += interval.interval \n        });\n\n        //вычетаем время на обед\n        hours -= timeDeduction/60 * intervals.length\n\n        return <div>{hours.toFixed(0)}</div>\n      }\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => {\n        const day1 = row.column.Header\n\n        const [entrance, exit, interval, status] = getIntervalData(day1, row.row.original.intervalsPools, timeDeduction)\n        \n        return (\n          <div className={\"status-\"+ status}> \n            <div>{ entrance }</div> \n            <div>{ exit }</div>\n            <div className={sass.interval}>{ interval }</div>\n          \n          </div>\n        )\n      }\n    })\n  }\n  return columnsList\n}\n\n\n\nfunction getIntervalData(day, intervals, timeDeduction){\n\n    // конвертация float в часы и минуты\n    function convertInterval(number, timeDeduction){\n        //вычетаем время на обед\n        number -= timeDeduction/60\n\n        var hour = Math.floor(number);\n        var decpart = number - hour;\n        var min = 1 / 60;\n\n        // Round to nearest minute\n        decpart = min * Math.round(decpart / min);\n        var minute = Math.floor(decpart * 60) + '';\n\n        // Add padding if need\n        if (minute.length < 2) {\n            minute = '0' + minute; \n        }\n\n        return hour + ':' + minute;\n    }\n\n    function getMinutes(t){\n        const minutes = t.getMinutes()\n        return (minutes < 10) ? `0${minutes}` : minutes\n    }\n\n    const e = intervals.find(el =>  new Date(el.entrance).getDate() == day)\n\n    if (e) {\n        const _entr = new Date(e.entrance)\n        const _exit = new Date(e.exit)\n\n        const entrance = _entr.getHours()+':'+ getMinutes(_entr)\n        const exit = _exit.getHours()+':'+ getMinutes(_exit)\n        const interval = convertInterval(e.interval, timeDeduction)\n\n        return [entrance, exit, interval, e.status]\n    }   else return [null, null, null, null]\n}\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nfunction monthAdd(date, month) {\n    // функция используется для корректного вычитания месяцев в chooseMonth\n    var temp = date;\n    temp = new Date(date.getFullYear(), date.getMonth(), 1);\n    temp.setMonth(temp.getMonth() + (month + 1));\n    temp.setDate(temp.getDate() - 1); \n  \n    if (date.getDate() < temp.getDate()) { \n        temp.setDate(date.getDate()); \n    }\n    return temp;    \n  }\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i< 6; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div onClick={selectedMonthHandler} \n                    className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                    date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>обед</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>мин</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>норма</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>ч</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","import { Typography } from \"@mui/material\"\nconst BaseHeader = (props) => {\n\n    return(\n           <div className=\"page-header\">\n                    <span>{props.pageParams.icon}</span>\n                    <Typography>{props.pageParams.title}</Typography>                    \n                    {props.children}\n            </div>\n    )\n}\n\nexport default BaseHeader","\nimport  { useContext, useMemo, useEffect, useReducer } from 'react'\nimport { Context } from '../../index'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\n\nimport Table, { generateColumns } from './table'\nimport { getVarsForSubscription } from './functions'\n\n\nimport './index.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport BaseHeader from '../BaseHeader'\nimport { UilSearch } from '@iconscout/react-unicons'\n\nimport sass from './attendance.module.sass'\n\nvar attendanceData = null;\n// учет рабочего времени\nconst Attendance = props => {\n    const date = new Date()\n    const { store } = useContext(Context);\n\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 'filtredData':\n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [date.getMonth()-1, date.getFullYear()],\n    });\n    const { timeDeduction, selectedMonth, filtredData } = state;\n\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n    const { loading } = useQuery(GET_USERS, { variables: { gte, lte }, onCompleted: (options) => {\n        attendanceData = options.attendance_users_aggregate.nodes;\n        dispatch({ type: 'filtredData', payload: attendanceData})\n    } });\n    \n    useEffect(() => {\n        return () => {\n            attendanceData = null\n        };\n    }, []);\n\n    function filteringAlg(user, keyword){\n        if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else return false\n    }\n\n    const onChangeSearch = (e) => {\n        const keyword = e.target.value.trim();\n\n            if (keyword !== '') {\n              const result = attendanceData.filter((user) => filteringAlg(user, keyword))\n              dispatch({ type: 'filtredData', payload: result })\n            } else dispatch({ type: 'filtredData', payload: attendanceData})\n    }\n\n    const columns = useMemo(\n        () => generateColumns(selectedMonth, timeDeduction), [selectedMonth, timeDeduction]\n    )\n\n    return(\n    <div className={sass.attendanceLayout}>\n            <BaseHeader pageParams = { store.getPageParams(window.location.pathname) } search={onChangeSearch} /> \n            <ReportConfigurator state={state} dispatch={dispatch} />\n\n        <div className={sass.tableWrapper}>\n\n            <div className={sass.tableSearchInput}>\n                <UilSearch/>\n                <input type='text' placeholder=\"поиск (номер счета или организация)\" onChange={ (e) => onChangeSearch(e) } autoFocus/>\n            </div>\n            \n            {filtredData && columns && <Table columns = {columns} data = {filtredData} className={sass.attendanceTable} /> }\n\n             {/* условное обозначение */}\n             <div className={`${sass.tableFooter} legend`}>\n                <div className=\"status-101\">Прерванный рабочий день</div>\n                <div className=\"status-102\">Не отмечен конец смены</div>\n                <span className=\"reportMeta\">\n                    Отчет за {selectedMonth[0] + 1} месяц {selectedMonth[1]} года \n                </span>\n\n            </div>\n\n        </div>\n    </div>\n    )\n}\n\nexport default Attendance","import sass from './index.module.sass'\n\nconst Reclamation = (props) => {\n\n    return(\n        <div></div>\n        \n    )\n}\nexport default Reclamation","import {Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport LoginForm from '../components/LoginForm';\nimport OrderListLayout from \"../components/OrderListLayout\";\nimport OrderLayout from \"../components/OrderLayout\";\nimport Attendance from '../components/AttendanceLayout'\nimport Reclamation from \"../components/ReclamationLayout\";\n\nconst AppRouter = () => {\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/reclamation' component={Reclamation}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            #if required route was not found\n            <Redirect     to=\"/\" />\n            {/* <PrivateRoute path='/recently' component={() => <PriorityLayout props={isRecently}/>} store={props.store}/> */}\n        </Switch>\n    )\n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\nconst BaseLayout = (props) => {\n    return(\n        <div className=\"base-container\">\n                <AppRouter/> \n                {props.children}\n        </div>\n    )\n}   \n\nexport default BaseLayout;","import { useEffect } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DARK_CLASS = \"dark\";\n\nexport function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport const SystemPreferTheme = (appTheme, setAppTheme) => {\n    // theme can will be dark, light or system (used for corrent displaying selected theme in preferences)\n    // mode can be only dark or light (used for material ui pallete)\n    const systemPrefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\"}, undefined);\n    var mode = appTheme\n\n    function changeTheme(newTheme){\n        var expires = new Date()\n        expires.setFullYear(expires.getFullYear()+1)\n        document.cookie = `theme=${newTheme}; expires=${expires}; path=/`\n        setAppTheme(newTheme)\n    }\n\n    useEffect(() => {\n      if (appTheme === 'dark') document.documentElement.classList.add(DARK_CLASS)\n      else if (appTheme === 'light') document.documentElement.classList.remove(DARK_CLASS)\n\n      else if (appTheme === 'system'){\n        if (systemPrefersDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n      };\n    }, [appTheme, systemPrefersDark]);\n\n    if (appTheme === 'system'){\n      if (systemPrefersDark) mode = 'dark'\n      else mode = 'light'\n    }\n    return {appTheme, mode, changeTheme}\n};\n","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../../../index';\nimport { useHistory } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { styled } from '@mui/material/styles';\n\nimport { UilSun, UilMoon, UilDesktop, UilSetting } from '@iconscout/react-unicons'\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material/';\n\nimport sass from './index.module.sass'\nimport { SystemPreferTheme } from '../../_core/SystemPreferTheme';\n\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    border: '1px solid var(--border)',\n    padding: 8,\n    textTransform: 'none',\n    '&:not(:first-of-type)': {\n\n    },\n    '&:first-of-type': {\n      borderTopLeftRadius: 'var(--br)',\n      borderBottomLeftRadius: 'var(--br)',\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 'var(--br)',\n      borderBottomRightRadius: 'var(--br)',\n    },\n  },\n}));\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function SettingsDrawer() {\n  const {store} = useContext(Context);\n  const [state, setState] = useState(false);\n  const history = useHistory()\n  const {changeTheme} = SystemPreferTheme(store.UItheme.state, store.UItheme.dispatch)\n\n  async function logout(){\n    await store.logout(); \n    history.push('/login')\n  }\n\n  const themeHandler = (e, newTheme) => {\n    changeTheme(newTheme)\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open);\n  };\n  \n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 400 }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n    >\n\n      <List>\n        <ListItem className={sass.user}>\n        <div>Добро пожаловать, {store.user.FirstName} {store.user.LastName}!</div>\n        </ListItem>\n\n        <ListItem >\n          <StyledToggleButtonGroup\n            className={sass.themeToggleButtons}\n            color=\"primary\"\n            value={getCookie('theme')}\n            exclusive\n            fullWidth\n            onChange={themeHandler}\n            >\n            <ToggleButton value=\"light\"> <UilSun/> Light</ToggleButton>\n            <ToggleButton value=\"system\"> <UilDesktop/>System</ToggleButton>\n            <ToggleButton value=\"dark\"> <UilMoon/> Dark</ToggleButton>\n          </StyledToggleButtonGroup>\n        </ListItem>\n\n      </List>\n      \n      <div className={sass.logoutButton}>\n        <button onClick={logout}>Выйти</button>\n      </div>\n    </Box>\n  );\n\n  return (\n    <div>\n          <div onClick={toggleDrawer(true)}>\n            <UilSetting/>\n          </div>\n          <Drawer\n            open={state}\n            onClose={toggleDrawer(false)}\n          >\n            {list('left')}\n          </Drawer>\n    </div>\n  );\n}","// import { observer } from 'mobx-react-lite';\nimport { NavLink} from 'react-router-dom';\nimport './index.sass';\n\nimport { UilSortAmountDown, UilWrench, UilConstructor} from '@iconscout/react-unicons';\nimport SettingsDrawer from './SettingsDrawer/SettingsDrawer';\n\nconst Sidebar = () => {\n    return(\n        <div className='Sidebar noprint'>\n\n            <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"action-icon\"><UilSortAmountDown/></NavLink>\n            <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"action-icon\"><UilWrench/></NavLink>\n            <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"action-icon\"><UilConstructor/></NavLink>\n                \n            <div className=\"action-icon settings\">\n                <SettingsDrawer/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Sidebar;","import { useContext, useState, useMemo } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\n\n\nimport {getCookie, SystemPreferTheme} from './components/_core/SystemPreferTheme'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { muicomponents } from './materialStyles'\n\nfunction App() {  \n  const { store } = useContext(Context);\n  const [appTheme, setAppTheme] = useState(() => getCookie('theme'))\n  store.setUItheme(appTheme, setAppTheme)\n  const {mode} = SystemPreferTheme(appTheme, setAppTheme)\n  \n  const getDesignTokens = (mode) => ({\n    palette: {\n      mode,\n      ...(mode === 'light'\n        ? {\n            // palette values for light mode\n            primary: {\n              main: '#3763FE',\n              light: '#E7E9FB',\n            },\n            secondary: {\n              main: '#e5534b',\n            }\n          }\n        : {\n            // palette values for dark mode\n            primary: {\n              main: '#99affc',\n              light: '#43435c',\n            },\n            secondary: {\n              main: '#e5534b',\n            },\n           \n          }),\n    },\n    typography: {\n      fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',sans-serif`,\n      subtitle1: {\n        fontSize: '.9rem',\n        fontFamily: \"IBM PLEX MONO\"\n      }\n    },\n  });\n\n  var theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  theme = createTheme(theme, muicomponents(theme));\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        \n        { store.inMemoryToken && <Sidebar/> }\n          <BaseLayout/>\n        \n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default observer(App);\n","import { palette } from \"@mui/system\";\n\nexport const muicomponents = (theme) => ({\n  components: {\n    MuiDialog: {\n      styleOverrides: {\n        paper: {\n          borderRadius: 'var(--br) !important',\n        }\n      }\n    },\n    MuiDialogTitle: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n        }\n      }\n    },\n\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem'\n        }\n      },\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          textTransform: 'none !important',\n        },\n        textInfo: {\n          color: 'var(--lowContrast) !important',\n        },\n        iconbutton: {\n          minWidth: '40px',\n          padding: '5px',\n          'path': {\n            color: theme.palette.text.primary,\n            strokeWidth: .8,\n            stroke: 'var(--L0)'\n          },\n          '&:hover': {\n            background: 'var(--accentLight)',\n          }\n        }\n      },\n      defaultProps: {\n        disableElevation: true,\n        disableRipple: true,\n      },\n    },\n\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard'\n      }\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          color: 'var(--lowContrast) !important',\n        }\n      },\n      defaultProps: {\n        shrink: true,\n      }\n    },\n    MuiFilledInput: {\n      defaultProps: {\n        disableUnderline: 'true',\n        size: 'small',\n      },\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          border: '1px solid var(--borderLight)',\n          borderRadius: '10px',\n          ':hover': {\n            background: 'var(--L1)',\n          },\n        },\n\n      }\n    },\n    MuiInput: {\n      defaultProps: {\n        disableUnderline: 'true'\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          color: 'var(--highContrast) !important',\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          border: 'none',\n        }\n      }\n    },\n    MuiPopover: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0)',\n          borderRadius: 'var(--br) !important'\n        }\n      }\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          fontSize: '.8rem',\n          boxSizing: 'border-box',\n          border: 'none !important',\n          outline: 'none !important',\n          boxShadow: 'none !important',\n          padding: 0,\n        }\n      }\n    },\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiCheckbox: {\n      defaultProps: {\n        disableRipple: true\n      }\n    }\n  },\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/s3/upload'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n// $api.interceptors.request.use( (config) => {\n//     config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n//     return config;\n// })\n// $api.interceptors.response.use( (config) => {\n//     return config;\n// }, async (error) => {\n//     const originalRequest = error.config;\n//     if(error.response.status === 401 && error.config && !error.config._isRetry){\n//         originalRequest._isRetry = true;\n//         try {\n//             const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n//             localStorage.setItem('token', response.data.accessToken);\n//             return $api.request(originalRequest);\n//         } catch (e) {\n//             console.log('Авторизация не прошла. Попробуйте снова');\n//         }\n//     }\n       \n// })\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  { email, password })\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isLoading = false;\n    UItheme = {\n        state: null,\n        dispatch: null\n    };\n    inMemoryToken = undefined;\n\n    priorityTab = 1;\n    cachedOrders = [];\n    cachedPreOrders = [];\n    \n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setCachedOrders(array){\n        this.cachedOrders = array\n    }\n    setCachedPreOrders(array){\n        this.cachedPreOrders = array\n    }\n    setUItheme(state, dispatch){\n        this.UItheme = { state, dispatch }\n    }\n    async login(email, password){\n        try {\n            const res = await AuthService.login(email, password)\n            if (res.status === 200){\n              this.setInMemoryToken(res.data.accessToken)\n              this.setUser(res.data.user);\n              return res\n            }\n            \n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            this.setInMemoryToken(null)\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n            (r) => {\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            await axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n              (res) => {\n                if (res.status === 200){\n                  console.log(res)\n                  this.setUser(res.data.user);\n                  this.setInMemoryToken(res.data.accessToken)      \n                  console.log('token validation complited')  \n                }\n              }\n            )\n        } catch (e) {\n            console.log(e)\n        } finally {\n            this.setLoading(false);\n            return this.inMemoryToken\n        }\n    }\n\n    async uploadFile(acceptedFiles){\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/s3/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            }\n          });\n        return res\n    }\n\n    async downloadFile(file){\n        await fetch(`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`)\n    }\n\n    async deleteFile(key, deleteFileMutation){\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/s3/delete/${key}`);\n\n        if (res.status === 200){\n            const hasuraRes = await deleteFileMutation({variables: {\n                'key': key,\n            }})\n            console.log(hasuraRes.data)\n        }\n    }\n\n    pageParams = [\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Рекламация',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Рабочее время',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n}\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport jwt from 'jsonwebtoken'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\n\n\n//apollo \nimport { WebSocketLink} from 'apollo-link-ws';\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  from,\n} from \"@apollo/client\";\n\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\n\nlet webSocketLink = new WebSocketLink({\n  uri: process.env.REACT_APP_HASURA_WS,\n  options: {\n    reconnect: true,\n    lazy: true,\n    reconnectionAttempts: 5,\n    inactivityTimeout: 10000000,\n    connectionCallback: async (error) => { error && console.log(error) },\n    connectionParams: () => ({\n      headers: {\n        'Authorization' : `Bearer ${store.inMemoryToken}`\n      }\n    }),\n    \n  }\n})\n\nconst asyncTokenValidation = setContext( async (_, {headers, ...context}) => {\n  var token = null \n\n  if (Date.now() >= jwt.decode(store.inMemoryToken).exp * 1000 ) {\n    console.log('Existed access token was expired, request for new token..')\n    token = await store.getNewToken()\n  }\n\n  return {\n    headers: {\n      ...headers,\n      ...(token ? {Authorization: `Bearer ${token}`} : {}),\n    },\n    ...context,\n  };\n});\n\n\nconst apolloClient = new ApolloClient({\n  link: from([ asyncTokenValidation, webSocketLink ]),\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n        erp_CheckListUnits: {\n          keyFields: ['CheckListUnitID']\n        },\n        erp_Comments: {\n          keyFields: ['CommentID']\n        }\n    },\n  })\n})\n\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderListLayout\":\"main_OrderListLayout__3KzFa\",\"tableWrapper\":\"main_tableWrapper__3lHmG\",\"tableSearchInput\":\"main_tableSearchInput__3VMNw\",\"action-icon\":\"main_action-icon__1owGu\",\"tableFooter\":\"main_tableFooter__1Egk2\",\"tableMain\":\"main_tableMain__GJwKh\",\"awaitingDispatch\":\"main_awaitingDispatch__ZF9uh\",\"unpaidOrder\":\"main_unpaidOrder__22HJx\",\"customerTableInfo\":\"main_customerTableInfo__JKJM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__1O75u\",\"quantity\":\"composition_quantity__2YtVw\",\"unitName\":\"composition_unitName__3YGne\",\"addOrderItem\":\"composition_addOrderItem__2AnFf\",\"quantityInput\":\"composition_quantityInput__2zcBe\",\"Unit\":\"composition_Unit__2Fqng\",\"index\":\"composition_index__2aXz6\",\"fullName\":\"composition_fullName__NObJ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attendanceLayout\":\"attendance_attendanceLayout__3ZkJT\",\"tableWrapper\":\"attendance_tableWrapper__32pvV\",\"attendanceTable\":\"attendance_attendanceTable__36c11\",\"interval\":\"attendance_interval__3CNBY\",\"status-101\":\"attendance_status-101__3aCi6\",\"tableSearchInput\":\"attendance_tableSearchInput__hHxoD\",\"tableFooter\":\"attendance_tableFooter__3W2nf\"};"],"sourceRoot":""}