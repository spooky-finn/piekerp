{"version":3,"sources":["components/AttendanceLayout/attendance.module.sass","components/OrderListLayout/Archive/archive.module.sass","components/OrderListLayout/Search/search.module.sass","components/OrderLayout/OrderItemActions/index.module.sass","components/Sidebar/SettingsDrawer/index.module.sass","components/OrderListLayout/Recently/recently.module.sass","components/OrderListLayout/PreOrders/preorders.module.sass","components/OrderLayout/Comments/index.module.sass","routers/PrivateRoute.js","components/LoginForm/index.js","components/_core/notification.js","components/OrderListLayout/reducer.js","components/OrderListLayout/queries/getOrders.js","hasura-queries/getUsers.js","components/OrderListLayout/queries/MutationInsertOrder.js","components/OrderListLayout/UniversalTable/columnList.js","components/OrderListLayout/UniversalTable/TableMarkup.jsx","components/OrderListLayout/Search/index.js","components/OrderListLayout/Search/filter.js","components/OrderListLayout/PreOrders/MutationOrderStatus.js","components/OrderListLayout/PreOrders/index.js","components/OrderListLayout/Priority/index.js","components/OrderListLayout/Recently/index.jsx","components/OrderListLayout/Recently/spreadOrders.js","components/OrderListLayout/Archive/queries/getArchivedSearchOrders.js","components/OrderListLayout/Archive/TableMarkup.jsx","components/OrderListLayout/Archive/queries/getAllOrdersAmount.js","components/OrderListLayout/Archive/queries/getArchivedLatestOrders.js","components/OrderListLayout/Archive/queries/getArchivedUnpaidOrders.js","components/OrderListLayout/Archive/PreviewTable.jsx","components/_core/OrderStatus.js","components/OrderListLayout/Archive/index.jsx","components/OrderListLayout/index.jsx","components/OrderLayout/queries/GetOrderByID.js","components/OrderLayout/queries/MutationOrderDocs.js","components/OrderLayout/queries/MutationOrderItem.js","components/OrderLayout/OrderItemActions/index.jsx","components/OrderLayout/Composition.jsx","components/OrderLayout/Info.jsx","components/OrderLayout/queries/MutationOrderInfo.js","components/OrderLayout/queries/MutationPaymentHistory.js","components/OrderLayout/EditableComponents/EditableInfo.jsx","components/OrderLayout/Docs/ConfirmDialog.jsx","components/OrderLayout/Docs/Docs.jsx","components/OrderLayout/queries/MutationOrderCommnets.js","components/OrderLayout/queries/SubscriptionComments.js","components/OrderLayout/Comments/Comment.jsx","components/OrderLayout/Comments/СommandsPopover.jsx","components/OrderLayout/Comments/CommentsList.jsx","components/OrderLayout/queries/MutationDeleteOrder.js","components/OrderLayout/OrderActions/TransferOrderConfirmDialog.jsx","components/OrderLayout/OrderActions/Actions/OrderActions.jsx","components/OrderLayout/OrderActions/Actions/PreOrderActions.jsx","components/OrderLayout/OrderActions/Actions/OrderStatusesActions.jsx","components/OrderLayout/OrderActions/Actions/ReclamationActions.jsx","components/OrderLayout/OrderActions/OrderActionsMenu.jsx","components/OrderLayout/Dropzone.js","components/_core/UserStatus.js","components/OrderLayout/index.jsx","components/AttendanceLayout/queries/getUsers.js","components/AttendanceLayout/functions.js","components/AttendanceLayout/table.js","components/AttendanceLayout/ReportConfigurator.jsx","components/AttendanceLayout/index.js","components/ReclamationLayout/reducer.js","components/ReclamationLayout/queries.js","components/ReclamationLayout/index.js","routers/Router.js","components/BaseLayout/index.js","components/_core/SystemPreferTheme.js","components/Sidebar/SettingsDrawer/SettingsDrawer.jsx","components/Sidebar/Sidebar.js","App.js","materialStyles.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","index.js","components/OrderListLayout/main.module.sass","components/ReclamationLayout/index.module.sass","components/OrderLayout/sass/composition.module.sass"],"names":["module","exports","PrivateRoute","Component","component","rest","store","useContext","Context","useState","isLoaded","setisLoaded","inMemoryToken","token","setToken","a","checkAuth","then","res","useEffect","getToken","render","props","to","LoginForm","email","setEmail","password","setPassword","history","useHistory","login","status","push","console","error","type","title","message","addNotification","insert","container","dismiss","duration","className","TextField","variant","label","onChange","e","target","value","trim","Button","width","onClick","reducer","state","action","payload","searchKeyword","managerFilter","GetOrdersSubscription","gql","GET_USERS","INSERT_ORDER","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","OrderID","map","item","Name","OrderItemID","Quantity","order","ShippingDate","moment","format","sass","customerTableInfo","Entity","City","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","mainsass","tableMain","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","row","original","NeedAttention","needAttention","AwaitingDispatch","awaitingDispatch","getRowProps","cells","cell","getCellProps","Search","dispatch","users","tableSearchInput","placeholder","autoFocus","defaultValue","filter","filterPlaceholder","FormControl","Select","name","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","filteringAlg","keyword","finded","arg","toLowerCase","includes","array","result","newOrders","ord","ManagerID","MUTATE_ORDER_STATUS","PreOrders","preOrders","useMutation","mutationOrderStatus","onClickTransfer","splice","indexOf","variables","AcceptanceDate","Date","toLocaleString","timeZone","newColumnList","filtredData","tableWrapper","preOrdersTableWrapper","Priority","useMemo","sortedData","orders","sort","b","AccessLevelID","Recently","spreadData","days","subtract","dateCreation","split","date","objs","spread","Typography","color","m","recentlyTable","GET_ARCHIVED_SEARCH_ORDERS","unpaidOrder","unpaid","GET_ALL_ORDERS_AMOUNT","GET_ARCHIVED_LATEST_ORDERS","GET_ARCHIVED_UNPAID_ORDERS","PreviewTable","archiveColumns","ActualShippingDate","useQuery","limit","OrderStatus","reqOrderStatus","fetchPolicy","latestOrders","loading","onCompleted","erp_Orders","unpaidIDs","unpaidOrders","archiveTable","ordRegistration","ordProduction","ordArchived","reclInbox","reclDecision","reclProduction","reclArchived","Archive","useReducer","OS","InputBase","inputWrapper","setTimeout","filterFormControl","InputLabel","labelId","filterInputBase","event","StyledTabs","styled","Tabs","theme","margin","display","StyledTab","Tab","textTransform","fontWeight","palette","text","secondary","fontSize","typography","pxToRem","marginRight","spacing","borderBottomRightRadius","borderBottomLeftRadius","border","backgroundColor","primary","OrderListLayout","selectedTab","cachedOrders","cachedPreOrders","initialState","priorityTab","useSubscription","onSubscriptionData","options","subscriptionData","forEach","ID","setCachedOrders","setCachedPreOrders","nextFetchPolicy","createNewOrder","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","mb","a11yProps","newValue","setPriorutyTab","aria-label","insert_erp_Orders","returning","sx","marginLeft","erp_Users","GET_ORDER_BY_ID","PUSH_DOCS_ARRAY","DELETE_ORDER_FILE","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","UPDATE_ORDER_ITEM","UPDATE_ORDER_ITEM_METADATA","OrderItemActions","editState","editItemHandler","deleteItemHandler","updateItem","setOIDialog","anchorEl","setAnchorEl","SerialNumber","Fitter","setState","handleClose","serialNumber","fitter","toString","aria-controls","aria-haspopup","currentTarget","size","moreVertIcon","Menu","keepMounted","open","Boolean","PaperProps","boxShadow","background","borderRadius","onClose","inputListItem","multiline","prevState","actionsWrapper","deleteButton","fullName","quantity","OrderComposition","refetch","orderID","OIDialog","deleteOrderItemMutation","insertOrderItemMutation","updateOrderItemMutation","updateOrderItemMetadataMutation","itemID","orderItemID","FullName","closeOIDialog","insertOrderItem","parseInt","el","Unit","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","addOrderItem","fullNameInput","quantityInput","DialogActions","justifyContent","OrderInfoCard","heading","secondaryHeading","Pre","OrderMeta","OrderNumber","Comment","CreatingDate","aboutOrder","PaymentHistories","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","UPDATE_NEED_ATTENTION","MOVE_ORDER_TO_ARCHIVE","MOVE_ORDER_TO_PRIORITY","INSERT_PAYMENT","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","insertPayment","log","InputProps","inputComponent","Autocomplete","getOptionLabel","option","renderInput","params","managerID","find","findSelectedManeger","ConfirmDialog","filename","onConfirmF","minWidth","aria-describedby","DialogContentText","Docs","onUpload","setOpen","fileOnDelete","setFileOnDelete","deleteFileMutation","deleteFile","Key","attachedFiles","file","handleClickOpen","FileName","href","process","rel","files","path","onUploadFiles","INSERT_ORDER_COMMENT","DELETE_ORDER_COMMENT","UPDATE_ORDER_COMMENT","SUBSCRIBTION_ORDER_COMMENT","userID","updateComment","deleteComment","nowEditing","setNowEditing","commentUnit","commentHeader","sender","actions","CommentID","time","Timestamp","timestamp","contentEditable","commentContent","suppressContentEditableWarning","onBlur","innerHTML","onMouseLeave","dangerouslySetInnerHTML","__html","Text","checklistUnit","СommandsPopover","elevation","padding","root","document","getElementById","elem","createElement","classList","add","appendChild","insertTodoinDOM","CommentsList","insertOrderCommentMutation","updateOrderCommentMutation","deleteOrderCommentMutation","useRef","comments","newText","switchTodo","toggle","checklistUnit_complited","els","querySelectorAll","addEventListener","once","removeEventListener","commentsListWrapper","commentInputForm","ref","minHeight","data-ph","onInput","innerText","current","saveButton","erp_Comments","comment","DELETE_ORDER","TransferOrderConfirmDialog","React","OrderActions","transferOrderToArchive","OrderStatusID","ListItemIcon","ListItemText","PreOrderActions","transferOrderToPriority","mutationDeleteOrderHandler","OrderStatusesActions","needAttentionHandler","awaitingDispatchHandler","ReclamationActions","ifInproduction","ifInbox","OrderActionsMenu","OAMenu","setOAMenu","OAMenuRef","mutationAwaitingDispatch","mutationNeedAttention","mutationMoveOrderToArchive","mutationMoveOrderToPriority","mutationDeleteOrder","baseurl","update_erp_Orders_by_pk","delete_erp_Orders_by_pk","Popper","Paper","ClickAwayListener","onClickAway","MenuList","optimisticResponse","__typename","isFileOnDropzone","isDragActive","remove","UserStatus","orderStatus","general","management","bookkeeping","manufacture","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","search","get","setEditState","pushDocs","useParams","S3Upload","useCallback","acceptedFiles","uploadFile","key","originalname","useDropzone","onDrop","getRootProps","US","Composition","Comments","Info","daysInMonth","selectedMonth","month","year","getDate","getIntervalData","day","intervals","timeDeduction","getMinutes","t","minutes","entrance","_entr","_exit","exit","getHours","number","hour","Math","floor","decpart","min","round","minute","convertInterval","interval","monthAdd","temp","getFullYear","getMonth","setMonth","setDate","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","attendanceData","Attendance","Error","replace","gte","lte","getVarsForSubscription","attendance_users_aggregate","nodes","lastname","firstname","Cell","hours","intervalsPools","generateColumns","attendanceLayout","startsWith","onChangeSearch","attendanceTable","tableFooter","inbox","decision","inproduction","SUBSCRIPTION_RECLAMATION_ORDERS","UPDATE_ORDER_STATUS","Reclamation","getState","columnName","droppableId","orderStatusID","mutateOrderStatusID","insertOrder","col","getOrderStatus","reclatationLayout","onDragEnd","source","destination","items","list","startIndex","endIndex","Array","from","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","movedObj","move","Object","entries","columnWrapper","reclColumn","provided","snapshot","innerRef","draggableWrapper","draggableId","draggableProps","dragHandleProps","style","isDragging","draggableStyle","userSelect","orderItem","AppRouter","exact","BaseLayout","DARK_CLASS","SystemPreferTheme","appTheme","setAppTheme","systemPrefersDark","useMediaQuery","query","undefined","mode","documentElement","changeTheme","newTheme","expires","setFullYear","cookie","StyledToggleButtonGroup","ToggleButtonGroup","borderTopLeftRadius","borderTopRightRadius","getCookie","parts","pop","shift","SettingsDrawer","UItheme","logout","anchor","themeHandler","toggleDrawer","Drawer","onKeyDown","List","ListItem","themeToggleButtons","exclusive","ToggleButton","logoutButton","Sidebar","activeClassName","observer","setUItheme","createTheme","main","light","fontFamily","subtitle1","letterSpacing","getDesignTokens","components","MuiDialog","styleOverrides","paper","MuiDialogTitle","MuiMenuItem","defaultProps","disableRipple","MuiListItemText","MuiListItemIcon","strokeWidth","stroke","MuiButton","textInfo","iconic","disableElevation","MuiTextField","autoComplete","MuiInputLabel","transform","position","shrink","MuiFilledInput","disableUnderline","MuiInput","MuiInputBase","MuiOutlinedInput","notchedOutline","MuiPopover","MuiSelect","select","boxSizing","outline","MuiTab","MuiCheckbox","muicomponents","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","axios","create","withCredentials","baseURL","AuthService","post","Store","isLoading","pageParams","makeAutoObservable","this","bool","isAuth","setInMemoryToken","accessToken","setUser","response","r","setLoading","formData","FormData","append","fetch","hasuraRes","url","createContext","webSocketLink","WebSocketLink","uri","reconnect","lazy","reconnectionAttempts","inactivityTimeout","connectionCallback","connectionParams","asyncTokenValidation","setContext","_","context","now","jwt","decode","exp","getNewToken","Authorization","apolloClient","ApolloClient","link","cache","InMemoryCache","typePolicies","keyFields","erp_CheckListUnits","ReactDOM","client","sessionData","dataset","session","Provider"],"mappings":"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","file":"static/js/main.d615f6d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"attendanceLayout\":\"attendance_attendanceLayout__3ZkJT\",\"tableWrapper\":\"attendance_tableWrapper__32pvV\",\"attendanceTable\":\"attendance_attendanceTable__36c11\",\"interval\":\"attendance_interval__3CNBY\",\"status-101\":\"attendance_status-101__3aCi6\",\"tableSearchInput\":\"attendance_tableSearchInput__hHxoD\",\"tableFooter\":\"attendance_tableFooter__3W2nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"archive_inputWrapper__3nHE2\",\"archiveTable\":\"archive_archiveTable__1BwU5\",\"filterFormControl\":\"archive_filterFormControl__1DXa5\",\"filterInputBase\":\"archive_filterInputBase__2Du59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableSearchInput\":\"search_tableSearchInput__mHzTe\",\"filter\":\"search_filter__1BI6Q\",\"filterPlaceholder\":\"search_filterPlaceholder__2NcNB\",\"filterIndicator\":\"search_filterIndicator__Rfc0e\",\"circle\":\"search_circle__2PIMx\",\"pulsate\":\"search_pulsate__pgEiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsWrapper\":\"OrderItemActions_actionsWrapper__1mryM\",\"deleteButton\":\"OrderItemActions_deleteButton__14fyW\",\"moreVertIcon\":\"OrderItemActions_moreVertIcon__3Qdex\",\"inputListItem\":\"OrderItemActions_inputListItem__22HbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeToggleButtons\":\"SettingsDrawer_themeToggleButtons__hIzSP\",\"user\":\"SettingsDrawer_user__3iVNA\",\"logoutButton\":\"SettingsDrawer_logoutButton__2_Id_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"recently_heading__2gRdv\",\"recentlyTable\":\"recently_recentlyTable__3NJpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preOrdersTableWrapper\":\"preorders_preOrdersTableWrapper__2ELAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsListWrapper\":\"Comments_commentsListWrapper__25Ylk\",\"commentInputForm\":\"Comments_commentInputForm__2W6Of\",\"checklistUnit\":\"Comments_checklistUnit__2rS_e\",\"checklistUnit_complited\":\"Comments_checklistUnit_complited__1J6jW\",\"saveButton\":\"Comments_saveButton__FkrZB\",\"commentUnit\":\"Comments_commentUnit__1L_o5\",\"actions\":\"Comments_actions__2pxUd\",\"commentContent\":\"Comments_commentContent__EsGgq\",\"commentHeader\":\"Comments_commentHeader__3aEgO\",\"sender\":\"Comments_sender__3ld3S\",\"time\":\"Comments_time__2egg6\"};","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const { store } = useContext(Context)\n  const [isLoaded, setisLoaded] = useState(false);\n  const [token, setToken] = useState(store.inMemoryToken);\n\n    async function getToken() {\n      store.checkAuth().then(\n        (res) => {\n          setToken(res)\n          setisLoaded(true)\n        }\n      )\n    }\n\n    useEffect(() => {\n      if (token) setisLoaded(true)\n      else getToken();\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n          if (token) return <Component {...props} />\n          else return <Redirect to='/login'/>;\n        }\n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import { useState, useContext } from 'react';\nimport { Context } from '../../index';\nimport { useHistory } from \"react-router-dom\";\n\nimport ReactNotification from 'react-notifications-component'\nimport { TextField, Button } from '@mui/material';\nimport './LoginForm.sass'\nimport { notif } from '../_core/notification'\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    \n    const { store } = useContext(Context);\n    const history = useHistory();\n\n\n    const login = async () => {\n      const res = await store.login(email, password)\n\n      if (res?.status === 200){\n        history.push('/')\n      }\n      else{\n        console.error('Invalig email or password')\n        notif('warning', 'Unauthorized error', 'Invalig email or password')\n      }\n      \n    }\n\n    return(<>\n      <ReactNotification />\n      <div className='loginCard'>\n        <TextField\n        className='loginInput'\n        variant='filled'\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          variant='filled'\n          className='loginInput'\n          onChange={e => setPassword(e.target.value.trim()) }\n        />\n        <Button\n          className=\"Button\"\n          variant=\"outlined\"\n          width='300px'\n          onClick={login}\n        >Войти</Button>\n      </div>\n    </>);\n}\n\nexport default LoginForm\n","import { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\n\nexport const notif = (type, title, message) =>  store.addNotification({\n  title,\n  message,\n  type,\n  insert: \"bottom\",\n  container: \"top-right\",\n  dismiss: {\n    duration: 4000,\n  }\n});\n","export const initialState = (selectedTab, cachedOrders, cachedPreOrders) => ({\n    orders: cachedOrders || [],\n    preOrders: cachedPreOrders || [],\n    selectedTab : selectedTab,\n\n    searchKeyword: '',\n    managerFilter: 0,\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'managerFilter': \n            return {...state, [action.type]: action.payload };\n\n        case 'resetFilters': \n            return {...state, searchKeyword: '', managerFilter: 0}\n        default: \n            return {...state}\n    }\n}","import gql from 'graphql-tag'; \n\n// Выбираем заказы находящиеся только в Прездаказах и в производстве \n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [1,2]} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      NeedAttention\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems(order_by: {OrderItemID: asc}){\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n        LastName\n      }\n\n    }  \n  }\n`\n","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n    AccessLevelID\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\nimport sass from '../main.module.sass'\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ' - 0%'\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row, counter) => counter +1\n    },\n    {\n      Header: 'Наим.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length === 0) return <Link to={`/orders/${data.OrderID}`}><div>Нет содержимого</div></Link>\n\n        else return (<Link to={`/orders/${data.OrderID}`}>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </Link>)\n      }\n      \n    },\n    {\n      Header: 'Кол-во',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'Отгрузка',\n      accessor: (order) => \n      <> { order.ShippingDate && moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'Компания / город',\n      accessor: data => \n      <div className={sass.customerTableInfo}>\n        <div>{data.Entity}</div>\n        <div>{data.City}</div>\n      </div>\n    },\n    {\n      Header: 'Счет- оплата',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'Мдж.',\n      accessor: data => <> {data.User?.FirstName[0] || ''} </>\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\n\nfunction statusHighlighting(order){\n  // Выделение заказов требующих внимания имеют приоритет\n  if (order.NeedAttention) return mainsass.needAttention\n  else if (order.AwaitingDispatch) return mainsass.awaitingDispatch\n  else return ''\n}\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return null;\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n               <tr className={statusHighlighting(row.original)} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { UilSearch } from '@iconscout/react-unicons'\nimport sass from './search.module.sass'\nimport { FormControl, Select, MenuItem } from '@mui/material';\n\nconst Search = ({state, dispatch, users }) => {\n    // const classes = useStyles();\n\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter !== 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>Выдача ограничена фильтром</p>\n            </div>\n        ) \n    }\n\n    return (\n        <>\n        <div className={sass.tableSearchInput}>\n            <UilSearch/>\n            <input type='text' placeholder=\"Счет или юрлицо\" onChange={searchHandler} autoFocus defaultValue={state.searchKeyword}/>\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl>\n                <Select\n                    name=\"managerFilter\"\n                    value={state.managerFilter}\n                    onChange={managerHandler}\n                >\n                    <MenuItem value={0}>Все</MenuItem>\n                    { users.map( (user) => \n                    <MenuItem value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                    )}\n                \n                </Select>\n                </FormControl>\n            </div>)}\n        </div>\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","function filteringAlg(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // применить поиск по ключевому слову\n    if (keyword !== '') {\n        result = array.filter( (order) => filteringAlg(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //применить поиск по фильру\n    if (managerFilter !== 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID === managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n    }\n  }\n\n`;","import { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\nimport Search from '../Search';\nimport { filter } from '../Search/filter'\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport { UilFileCheck} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\nimport mainsass from '../main.module.sass'\nimport { Button } from '@mui/material';\n\nconst PreOrders = ({ state, dispatch }) => {\n    const data = state.preOrders\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    const onClickTransfer = (order) => {\n        data.splice(data.indexOf(order), 1)\n        dispatch({ type: 'preOrders', payload: data })\n\n        mutationOrderStatus({ variables: { \n            OrderID: order.OrderID, \n            AcceptanceDate: new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"}) } \n        })\n    }\n\n    var newColumnList = [...columnsList];\n    const filtredData = filter(data, state.searchKeyword)\n    \n    newColumnList.push({\n        Header: 'Принять',\n        accessor: data => \n        <Button onClick={() => onClickTransfer(data)} variant='iconic'><UilFileCheck/></Button>\n        ,\n      })\n   \n    return(\n    <div className={`${mainsass.tableWrapper} ${sass.preOrdersTableWrapper}`}>\n        <Search state={state} dispatch={dispatch} />\n        {filtredData && <Table columns = {newColumnList} data = {filtredData} />}\n    </div>\n    )\n}\nexport default PreOrders","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ users, state, dispatch }) => {\n    const columns = useMemo(\n        () => columnsList, []\n    )\n    \n    const sortedData = state.orders .sort(function(a,b){\n        return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n    })\n\n    const filtredData = filter(sortedData, state.searchKeyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            {users && <Search state={state} dispatch={dispatch} users={users.filter(e => [1,2].includes(e?.AccessLevelID))}/>}\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\nimport Table from '../UniversalTable/TableMarkup'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport { Typography } from '@mui/material'\nimport sass from './recently.module.sass'\n\nconst Recently = ({ state, dispatch }) => {\n\n    const sortedData = state.orders.sort(function(a,b){\n        return new Date(b.AcceptanceDate) - new Date(a.AcceptanceDate);\n      });\n\n    const spreadData = spread(sortedData);\n\n    const columns = useMemo(() => columnsList, [] )\n\n    const filtredData = filter(spreadData[2].objs, state.searchKeyword)\n\n    return(\n        <div>\n            <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n                Сегодня\n            </Typography>\n            { spreadData[0].objs.length ? ( <>\n           \n            <Table columns={columns} data={spreadData[0].objs} className={sass.recentlyTable} />\n            </>): null}\n\n\n            <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n                Вчера\n            </Typography>\n            { spreadData[1].objs.length ? ( <>\n          \n            <Table columns={columns} data={spreadData[1].objs} className={sass.recentlyTable} />\n            </>): null}\n\n            {/* <div className={sass.heading}>Остальные</div>\n            <div className={mainsass.tableWrapper}>\n                <Search state={state} dispatch={dispatch} incomingOrders={sortedData} />\n                { <Table columns = { columns } data = { filtredData } />}\n            </div> */}\n\n        </div>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Сегодня',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'Вчера',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': '',\n        'objs': [] \n        },\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.AcceptanceDate?.split('T')[0]\n\n        if (dateCreation === days[0].date) days[0].objs.push(order);\n        else if (dateCreation === days[1].date) days[1].objs.push(order);\n        else days[2].objs.push(order);    \n    }\n\n    return days;\n};\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_SEARCH_ORDERS = gql`\n  query ($keyword: String!, $OrderStatus: Int!){\n  erp_Orders(where: {\n    _or: [\n      { Entity: {_ilike: $keyword} }, \n      { InvoiceNumber: {_ilike: $keyword} }\n\n      ],\n    OrderStatusID: {_eq: $OrderStatus}\n    }) {\n      ActualShippingDate\n      AwaitingDispatch\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n  }\n}\n`\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\nimport { Typography } from '@mui/material/';\n\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows, \n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return <Typography color='textSecondary' variant=\"subtitle2\">-> ничего не найдено</Typography>\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          const unpaidOrder = row.original.unpaid\n          return (\n               <tr className={unpaidOrder ? mainsass.unpaidOrder : ''} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { gql } from \"graphql-tag\"\n\nexport const GET_ALL_ORDERS_AMOUNT = gql`\nquery{\n  erp_Orders(\n    where: {OrderStatusID: {_eq: 3}},\n    order_by: {OrderID: desc},\n    limit: 1000,\n    ){\n\t\tOrderID\n    PaidAmount\n    TotalAmount\n  }\n}\n`\n","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_LATEST_ORDERS = gql`\nquery($limit: Int!, $OrderStatus: Int!){\n  erp_Orders(\n    order_by: {ActualShippingDate: desc_nulls_last}\n    where: { OrderStatusID: {_eq: $OrderStatus } } \n    limit: $limit\n    ){\n    ActualShippingDate\n    ShippingDate\n    AwaitingDispatch\n    OrderID\n    Entity\n    InvoiceNumber\n    City\n    PaidAmount\n    TotalAmount\n    CreatingDate\n    ManagerID\n    OrderItems {\n      Quantity\n      OrderItemID\n      Name\n    } \n    User {\n      FirstName\n    }\n  }\n}\n`","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_UNPAID_ORDERS = gql`\nquery MyQuery($unpaidIDs: [Int!], $OrderStatus: Int!) {\n    erp_Orders(where: { OrderStatusID: {_eq: $OrderStatus}, OrderID: {_in: $unpaidIDs } } ) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      ActualShippingDate\n      CreatingDate\n      ManagerID\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n      } \n      User {\n        FirstName\n      }\n    }\n  }\n`","//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ALL_ORDERS_AMOUNT } from './queries/getAllOrdersAmount'\nimport { GET_ARCHIVED_LATEST_ORDERS } from './queries/getArchivedLatestOrders'\nimport { GET_ARCHIVED_UNPAID_ORDERS } from './queries/getArchivedUnpaidOrders'\n\nimport Table from './TableMarkup'\nimport sass from './archive.module.sass'\nimport { Typography } from '@mui/material/';\nimport moment from 'moment'\n\nconst PreviewTable = (props) => {\n  const { state, dispatch, columns } = props\n\n  var archiveColumns = [...columns]\n  archiveColumns[3] = {\n    Header: 'Факт отгрузка',\n    accessor: order => \n    <> { order.ActualShippingDate && moment(order.ActualShippingDate).format('DD.MM.YY') }\n    </>\n  }\n\n  const { data : latestOrders = [], loading: latestOrdersloading } = useQuery(GET_ARCHIVED_LATEST_ORDERS, { variables: {\n     limit: 15, \n     OrderStatus: state.reqOrderStatus\n    },\n    fetchPolicy: \"cache-and-network\"\n    });\n\n  const { loading } = useQuery(GET_ALL_ORDERS_AMOUNT, { onCompleted: (res) => {\n    dispatch({ type: 'unpaidIDs', payload: res.erp_Orders.filter(e => e.PaidAmount / e.TotalAmount < .999).map(e => e.OrderID)})\n  }})\n\n  const { data : unpaidOrders = [], loading: unpaidOrdersLoading } = useQuery(GET_ARCHIVED_UNPAID_ORDERS, { variables: {\n    unpaidIDs: state.unpaidIDs,\n    OrderStatus: state.reqOrderStatus\n  } })\n\n  const previewData = () => {\n    if (!unpaidOrders.erp_Orders || !latestOrders.erp_Orders) return []\n    return ([\n      ...unpaidOrders.erp_Orders.map(e => ({...e, unpaid: true})),\n      // проверяем есть ли в последних заказах неоплаченный, если есть, то убираем из их заказ из latestOrders\n      ...latestOrders.erp_Orders\n      .filter(e => !state.unpaidIDs.includes(e.OrderID))\n      .sort(function(a,b){\n        return new Date(b.ActualShippingDate) - new Date(a.ActualShippingDate);\n      })\n      ])\n  }\n\n  return (<>\n    <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n      Последние 15\n    </Typography>\n\n      <Table columns = {archiveColumns} data = {previewData()} className={sass.archiveTable}/>\n  </>)\n}\nexport default PreviewTable","export default class OrderStatus {\n  static ordRegistration = 1 // предзаказы\n  static ordProduction = 2\n  static ordArchived = 3\n\n  static reclInbox = 10\n  static reclDecision = 11\n  static reclProduction = 12\n  static reclArchived = 13\n}","import { useMemo, useReducer } from 'react';\n\n//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ARCHIVED_SEARCH_ORDERS } from './queries/getArchivedSearchOrders'\n\n//ui\nimport sass from './archive.module.sass'\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from './TableMarkup'\nimport { Typography, InputBase } from '@mui/material/';\n\nimport PreviewTable from './PreviewTable';\n\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport OS from '../../_core/OrderStatus'\n\nfunction reducer(state, action) {\n  switch (action.type) {\n      case 'reqOrderStatus': \n      case 'searchKeyword': \n      case 'unpaidIDs': \n          return {...state, [action.type]: action.payload };\n      default: \n          return {...state}\n  }\n}\nconst Archive = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    //заказы которые отгружено, но еще не оплачены\n    reqOrderStatus: OS.ordArchived,\n    unpaidIDs: [],\n    searchKeyword: '',\n  });\n\n  const handleChange = (event) => {\n    dispatch({ type: 'reqOrderStatus', payload: event.target.value })\n  };\n\n  const { data = [] } = useQuery(GET_ARCHIVED_SEARCH_ORDERS, { variables: {\n    keyword: '%' + state.searchKeyword + '%'\n  }})\n\n  const columns = useMemo(\n    () => columnsList, []\n  )\n  \n  const searchHandler = (e) => {\n    setTimeout(() => {\n      dispatch({ type: 'searchKeyword', payload: e.target.value})\n    }, 400)\n  }\n\n  return(\n    <div>\n      <InputBase\n      className   ={sass.inputWrapper}\n      onChange    = {searchHandler}\n      placeholder = 'номер счета или юрлицо'\n      autoFocus\n      />\n\n      <FormControl className={sass.filterFormControl}>\n        <InputLabel variant=\"filter\">Выбрать только </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={state.reqOrderStatus}\n          label=\"Age\"\n          className={sass.filterInputBase}\n          onChange={handleChange}\n        >\n          <MenuItem value={OS.ordArchived}>Заказы</MenuItem>\n          <MenuItem value={OS.reclArchived}>Рекламации</MenuItem>\n        </Select>\n      </FormControl>\n\n      {!state.searchKeyword && <PreviewTable state={state} dispatch={dispatch} columns={columns} /> }\n\n      {state.searchKeyword &&  data.erp_Orders && <>\n          <Typography color='textSecondary' variant=\"subtitle1\" m='10px 0'>\n            Результат поиска по архиву\n          </Typography>\n          <Table columns = {columns} data = {data.erp_Orders} className={sass.archiveTable}/>\n      </>}\n\n    </div>\n  )\n}\nexport default Archive;","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\n\n// apollo\nimport { useSubscription, useQuery, useMutation } from '@apollo/client'\nimport { GetOrdersSubscription } from './queries/getOrders'\nimport { GET_USERS } from '../../hasura-queries/getUsers'\nimport { INSERT_ORDER } from './queries/MutationInsertOrder';\n\n// ui \nimport {Tabs, Tab, Box, Button} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { UilPlus} from '@iconscout/react-unicons';\n\nimport mainsass from './main.module.sass'\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport Archive from './Archive/';\n\nconst StyledTabs = styled((props) => <Tabs {...props} />)(\n  ({ theme }) => ({\n    margin: '0 0 1rem',\n    '& .MuiTabs-indicator': {\n      display: 'none'\n    },\n  }),\n  );\n\nconst StyledTab = styled((props) => <Tab {...props} />)(\n    ({ theme }) => ({\n      textTransform: 'none',\n      fontWeight: 400,\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(15),\n      marginRight: theme.spacing(1),\n      borderBottomRightRadius: '8px',\n      borderBottomLeftRadius: '8px',\n      border: '1px solid transparent',\n      '&.Mui-selected': {\n        backgroundColor: 'var(--L1)',\n        color: theme.palette.primary,\n        border: '1px solid var(--borderLight)'\n      }\n    }),\n  );\n\n\nconst OrderListLayout = (props) => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState( store.priorityTab, store.cachedOrders, store.cachedPreOrders ));\n    const { selectedTab } = state; \n\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n  \n        options.subscriptionData.data.erp_Orders.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n          });\n\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID === 1) preOrders.push(order)\n            else if (order.OrderStatus.ID === 2) orders.push(order)\n        })\n        store.setCachedOrders(orders)\n        store.setCachedPreOrders(preOrders)\n\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    \n    useSubscription(GetOrdersSubscription, { onSubscriptionData,  fetchPolicy: \"cache-first\", nextFetchPolicy: \"cache-first\" });\n    const { data: users = []} = useQuery(GET_USERS);\n\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n      'managerID':     store.user.UserID,\n      'orderStatusID': 1,\n    }})\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        dispatch({ type: 'resetFilters'})\n        store.setPriorutyTab(newValue)\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box mb='30px'>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n  \n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n  \n    return(\n        <div className={mainsass.OrderListLayout}>\n        <StyledTabs value={selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\" className='orderListLayoutTabs'>\n            <StyledTab label=\"Предзаказы\" {...a11yProps(0)} />\n            <StyledTab label=\"Очередость\" {...a11yProps(1)} />\n            <StyledTab label=\"Недавние\"   {...a11yProps(2)} />\n            <StyledTab label='Архив'      {...a11yProps(3)} />\n\n            <Button onClick={createOrderHandler} sx={{ marginLeft: 'auto' }} variant='iconic'><UilPlus/></Button>\n        </StyledTabs>\n\n\n        <TabPanel value={selectedTab} index={0}>\n            <PreOrders state={state} dispatch={dispatch}/>\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={1} >\n            <Priority state={state} dispatch={dispatch} users={users.erp_Users} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={2}>\n            <Recently state={state} dispatch={dispatch} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={3}>\n            <Archive state={state} dispatch={dispatch} />\n        </TabPanel>\n\n      </div>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    AwaitingDispatch\n    ActualShippingDate\n    AcceptanceDate\n    OrderID\n    ManagerID\n    OrderStatusID\n    City\n    ShippingDate\n    CreatingDate\n    Comment\n    Entity\n    InvoiceNumber\n    NeedAttention\n    OrderNumber\n    PaidAmount\n    TotalAmount\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems(order_by: {OrderItemID: asc}) {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialNumber\n    }\n    CheckListUnits(order_by: {CheckListUnitID: desc}) {\n      CheckListUnitID\n      OrderID\n      IsComplited\n      Point\n    }\n    Docs {\n      Key\n      FileName\n    }\n    PaymentHistories(\n      where: {PaidAmount: {_neq: 0}}\n    ){\n      PaidAmount\n      Date\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;\n\n\nexport const UPDATE_ORDER_ITEM = gql`\nmutation($OrderItemID: Int!, $FullName: String!, $Name: String!, $Quantity: Int!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n    _set: {FullName: $FullName, Name: $Name, Quantity: $Quantity}) {\n    Name\n    FullName\n    OrderItemID\n    Quantity\n  }\n}\n\n`;\nexport const UPDATE_ORDER_ITEM_METADATA = gql`\nmutation($OrderItemID: Int!, $Fitter: String!, $SerialNumber: String!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n     _set: {Fitter: $Fitter, SerialNumber: $SerialNumber}\n  ){\n    OrderItemID\n  }\n}\n`","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu, MenuItem, TextField } from '@mui/material';\nimport { UilEllipsisV } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n  \nconst OrderItemActions = ({ editState, item, editItemHandler, deleteItemHandler, updateItem, setOIDialog }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    'serialNumber': item.SerialNumber,\n    'fitter': item.Fitter\n  });\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n\n    if (item.SerialNumber !== state.serialNumber || item.Fitter !== state.fitter){\n      updateItem({ variables: {\n        'OrderItemID': item.OrderItemID,\n        'Fitter': state.fitter,\n        'SerialNumber': state.serialNumber.toString()\n      } })\n    }\n  };\n    \n  return (\n  <div className='noprint'>\n    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size='small'>\n      <UilEllipsisV className={sass.moreVertIcon}/>\n    </Button>\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      PaperProps={{\n        sx: {\n          boxShadow: '0 10px 50px 0 var(--bs)',\n          background: 'var(--LI)',\n          borderRadius: 'var(--br)' }\n      }}\n      onClose={handleClose}\n    >\n\n\n      <MenuItem className={sass.inputListItem} >\n        <TextField \n          type=\"number\"\n          label=\"Серийный номер\" \n          multiline\n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'serialNumber': e.target.value\n          }))}\n          defaultValue={state.serialNumber}\n          />\n      </MenuItem>\n\n      <MenuItem className={sass.inputListItem} >\n        <TextField \n          label=\"Сборщик\"  \n          variant=\"filled\"\n          size='small'\n          onChange={(e) => setState(prevState => ({\n          ...prevState,\n          'fitter': e.target.value\n          }))}\n          defaultValue={state.fitter}\n        />\n      </MenuItem>\n\n\n      {editState && (\n        <div className={sass.actionsWrapper}>\n          <MenuItem onClick={ (e) => {\n              setOIDialog(true)\n              handleClose();\n              editItemHandler(e, item);\n          }}>Редактировать</MenuItem>\n\n          <MenuItem \n            className={sass.deleteButton}\n            onClick={ ()=> {\n              handleClose();\n              deleteItemHandler(item.OrderItemID);\n          }}>Удалить</MenuItem>\n        </div>\n      )}\n\n    </Menu>\n  </div>\n  );\n}\n\nOrderItemActions.propTypes = { \n    editState: PropTypes.bool,\n    item:      PropTypes.object,\n    editItemHandler:  PropTypes.func, \n    deleteItemHandler: PropTypes.func,\n    updateItem: PropTypes.func\n}\n\nexport default OrderItemActions\n\n","import { useReducer, useEffect, useState } from 'react'\n\n//apollo \nimport { useMutation } from \"@apollo/client\"\nimport { \nDELETE_ORDER_ITEM, \nINSERT_ORDER_ITEM, \nUPDATE_ORDER_ITEM, \nUPDATE_ORDER_ITEM_METADATA \n} from \"./queries/MutationOrderItem\";\n\n// ui \nimport { Button, TextField, Box, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport sass from './sass/composition.module.sass'\nimport OrderItemActions from './OrderItemActions'\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n    id: null,\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                id: action.payload[0],\n                name: action.payload[1],\n                fullName: action.payload[2],\n                quantity: action.payload[3]\n            }\n        default: \n            return {...state}\n    }\n\n}\n\nconst OrderComposition = props => {\n    const { data, editState, refetch, orderID, OIDialog, setOIDialog } = props\n    const [ deleteOrderItemMutation ]         = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ]         = useMutation(INSERT_ORDER_ITEM);\n    const [ updateOrderItemMutation ]         = useMutation(UPDATE_ORDER_ITEM);\n    const [ updateOrderItemMetadataMutation ] = useMutation(UPDATE_ORDER_ITEM_METADATA);\n    const [state, dispatch ] = useReducer(reducer, initialState)\n    \n    const deleteItemHandler = (itemID) => {\n        deleteOrderItemMutation({ variables: { orderItemID: itemID} })\n        refetch()    \n    }\n    const editItemHandler = (e, item) => {\n        dispatch({ type: 'editItem', payload: [item.OrderItemID, item.Name, item.FullName, item.Quantity] })\n    }\n\n    const closeOIDialog = () => {\n      setOIDialog(false);\n    };\n\n    useEffect(() => {\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n    const insertOrderItem = () => {\n        closeOIDialog();\n        if (state.quantity === '' || state.name === '') return null\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const updateOrderItem = () => {\n      if (state.quantity === '' || state.name === '') return null\n      closeOIDialog();\n      updateOrderItemMutation({variables: { \n        OrderItemID: state.id,\n        Name: state.name, \n        Quantity: parseInt(state.quantity),\n        FullName: state.fullName, }}).then( () => { dispatch({ type: 'reset'}); refetch() })    \n  }\n  \n    return(<>     \n        {data.map( (el, index) => \n        <div\n          key={el.OrderItemID}\n          className={sass.Unit} \n        >\n              <span className={sass.index}>{index+1}</span>\n              <Typography color='textPrimary' className={sass.name}> {el.Name} </Typography>\n              <span  className={sass.quantity}> {el.Quantity}</span>\n              <OrderItemActions\n                  {...props}\n                  item={el}\n                  editItemHandler={editItemHandler}\n                  deleteItemHandler={deleteItemHandler}\n                  updateItem={updateOrderItemMetadataMutation}\n              />\n\n              <div className={sass.fullName}> { el.FullName }</div>\n\n        </div>\n        )}\n        \n      <Dialog maxWidth='md' fullWidth={true} open={OIDialog} onClose={closeOIDialog}>\n        <DialogTitle>Добавить позицию</DialogTitle>\n        <DialogContent>\n        <Box className={sass.addOrderItem}>\n          <TextField\n            label=\"Наименование\"\n            value={state.name}\n            variant='filled'\n            sx={{mb: '8px'}}\n            onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"Полное наименование\"\n            multiline\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.fullNameInput}\n            value={state.fullName}\n            onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n            />\n        <TextField\n            label=\"Кол-во\"\n            type=\"number\"\n            variant='filled'\n            sx={{mb: '8px'}}\n            className={sass.quantityInput}\n            value={state.quantity}\n            onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n            />\n        </Box>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'start'}} >\n            {state.name && state.quantity && (!state.id \n            ? <Box><Button variant='contained' onClick={insertOrderItem}>Добавить</Button> </Box>\n            : <Box><Button variant='contained' onClick={updateOrderItem}>Изменить</Button></Box> )}\n              <Box  ><Button onClick={() => {\n                  closeOIDialog();\n                  dispatch({type: 'reset'});\n              }}>Закрыть</Button></Box>\n        </DialogActions>\n      </Dialog>\n    </>)\n}\n\nexport default OrderComposition","import  moment  from 'moment'\nimport \"./sass/order-meta.sass\";\nimport { Typography, Box } from '@mui/material/';\n\nimport { styled } from '@mui/material/styles';\n\nconst OrderInfoCard = (props) => {\n  const { heading, secondaryHeading } = props;\n  return (\n    <Box className=\"OrderInfoCard\" sx={{ color: 'text.primary' }}>\n    <div className='row'>\n      <div className='heading'>\n        {heading}\n      </div>\n      <div className='secondaryHeading noprint'>\n        {secondaryHeading}\n      </div>\n    </div>\n\n    <div className='body'>\n      {props.children}\n    </div>\n  </Box>\n  )\n}\nconst Pre = styled((props) => <Typography {...props} />)(\n  ({ theme }) => ({\n    color: theme.palette.text.secondary,\n    fontSize: '.8rem'\n  }),\n  );\n\nconst OrderMeta = (props) => {\n   const { data } = props;\n    \n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ' '\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n   \n    const paidVisualization = () => {\n      if (data.PaymentHistories.length == 0 || !data.PaidAmount || !data.TotalAmount) return null\n\n      return (\n        <OrderInfoCard className='noprint' heading=\"Платежи\" secondaryHeading={`${data.TotalAmount} ₽`}>\n           <table className='paidVisualization'>\n           <tbody>\n            {data.PaymentHistories.map(e => (\n                <tr key={e.Date}>\n                  <td>{(e.PaidAmount / data.TotalAmount * 100).toFixed(0)} % </td>\n                  <td>{moment(e.Date).format('DD.MM.YY')}</td>\n              </tr>\n            ))}\n          </tbody>\n          </table>\n        </OrderInfoCard>\n      )\n    }\n    \n    const aboutOrder = () => {\n      const columns = [\n        {\n          'heading': \"Менеджер\",\n          'data': `${data.User?.FirstName} ${data.User?.LastName || 'undefined'}`, \n        },\n        {\n          'heading': \"Создан\",\n          'data': moment(data.CreatingDate).format('DD.MM.YY'),\n        },\n        {\n          'heading': \"В очередности\",\n          'data': moment(data.AcceptanceDate).format('DD.MM.YY'), \n        },\n        {\n          'heading': \"Факт. отгрузка\",\n          'data': moment(data.ActualShippingDate).format('DD.MM.YY'), \n        }\n      ]\n      return (\n        <OrderInfoCard heading=\"О заказе\">\n          <table><tbody>\n             {columns.map(el => {\n                if (!el.data || el.data === 'Invalid date') return null\n                return <tr key={`${el.heading} ${el.data}`}>\n                  <td>{el.heading}</td>\n                  <td>{el.data}</td>\n                </tr>\n                }\n              )}\n          </tbody></table>\n        </OrderInfoCard>\n      )\n    }\n\n  return (<>\n      <div className=\"wrap\">\n\n          <Box className='significantInfo' sx={{ color: 'text.primary' }}>\n            <div className='bold'>\n              <Pre>План. отгузка</Pre>\n              {data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY')}\n            </div>\n            <div className='bold'>\n              <Pre>Номер заказа</Pre>\n              {data.OrderNumber}\n            </div>\n            <div className='bold'>\n              <Pre>Счет / оплата</Pre>\n              {\"№ \"+ (data.InvoiceNumber || '')+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n            </div>\n          </Box>\n\n          <div className='OrderComment'>\n              <Pre>Комментарий</Pre>\n              {data.Comment}\n          </div>\n\n        {aboutOrder()}\n        {paidVisualization()}\n      </div>\n  </>)\n}\n\nexport default OrderMeta\n","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($OrderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $OrderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($OrderID: Int!, $AwaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { AwaitingDispatch: $AwaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;\nexport const UPDATE_NEED_ATTENTION = gql`\nmutation MyMutation($OrderID: Int!, $NeedAttention: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $OrderID},\n   _set: { NeedAttention: $NeedAttention }\n  ) {\n\t\tOrderID\n    NeedAttention\n  }\n}\n`\n\nexport const MOVE_ORDER_TO_ARCHIVE = gql`\n  mutation MyMutation($OrderID: Int!, $ActualShippingDate: timestamptz!, $OrderStatusID: Int!) {\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID}, \n      _set: {\n        OrderStatusID: $OrderStatusID,\n        AwaitingDispatch: false,\n        ActualShippingDate: $ActualShippingDate,\n        }){\n      OrderID\n      OrderStatusID\n    }\n  }\n`;\n\nexport const MOVE_ORDER_TO_PRIORITY = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_PAYMENT = gql`\n  mutation($PaidAmount: numeric!, $Date: timestamptz!, $OrderID: Int!) {\n    insert_erp_PaymentHistory_one(object: {PaidAmount: $PaidAmount, OrderID: $OrderID, Date: $Date}) {\n      ID\n      OrderID\n    }\n}\n`;","import { useEffect } from 'react';\nimport './EditableInfo.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\nimport { INSERT_PAYMENT } from '../queries/MutationPaymentHistory'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nimport { TextField, Autocomplete } from '@mui/material';\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'₽ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch, users }) => {  \n  \n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n    const [insertPayment] = useMutation(INSERT_PAYMENT)\n  \n    function saveChanges(){\n      console.log('doing mutation for order', orderID, fields)\n      updateOrderInfo({variables: {\n        OrderID: orderID,\n        fields,\n      }})\n\n      if (fields.PaidAmount) insertPayment({ variables: {\n          Date: new Date,\n          OrderID: orderID,\n          PaidAmount: fields.PaidAmount\n        }})\n      \n      refetch()\n    }\n    useEffect(() => {\n        fields = {};\n        return () => {\n            saveChanges()\n        };\n    }, []);\n\n    function findSelectedManeger(users, managerID){\n      if (!users) return null\n      const index = users.indexOf(users.find(user => user.UserID === managerID))\n      return users[index]\n    }\n\n  return(\n    <form className=\"EditableInfo\">  \n      <div className=\"wrap\">\n       <TextField\n          label=\"План. отгрузка\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          InputProps={{\n            inputComponent: DateFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"Номер счета\"\n          type=\"number\"\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"Номер заказа\"\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={users.filter( (user) => user.AccessLevelID != 3)}\n          getOptionLabel={(option) => `${option.FirstName} ${option.LastName}`}\n          renderInput={(params) => <TextField {...params} label=\"Менеджер\"/>}\n          defaultValue={() => findSelectedManeger(users, data.ManagerID)}\n          onChange={(event, newValue) => {\n            fields['ManagerID'] = (newValue?.UserID || null)\n          }}\n        />\n\n         <TextField\n          label=\"Юр лицо\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"Город\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Сумма заказа\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n          />\n        \n        <TextField\n          label=\"Оплачено\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom,\n          }}\n        />\n\n        <TextField\n          label=\"Комментарий\"\n          multiline\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n       </div>\n    </form>\n  )\n}\n\nexport default EditableInfo","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nexport default function ConfirmDialog(props) {\n  const { filename, open, handleClose, onConfirmF} = props\n  return (\n    <div>\n      <Dialog\n        open={open}\n        minWidth='xs'\n\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" sx={{\n          color: 'var(--lowContrast) !important',\n          'span': {\n            color: 'var(--highContrast) !important'\n          }\n        }}>\n            Удалить <span>{filename}</span> ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>Отменить</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Удалить \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useContext, useState, useEffect } from 'react';\nimport { Context } from '../../../index'\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from '../queries/MutationOrderDocs';\n\nimport './docs.sass'\n\nimport ConfirmDialog from './ConfirmDialog';\n\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const { store } = useContext(Context)\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length === 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n    useEffect(() => {\n        setOpen(false)\n    }, [editState]);\n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        await store.deleteFile(fileOnDelete.Key, deleteFileMutation)\n        refetch()\n    }\n\n    const attachedFiles = data.map(\n        file => {\n            // delite file\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n             // opne file\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    rel=\"noreferrer\"\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n            <div className='filesContainer'>\n                {attachedFiles}\n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n\n            <ConfirmDialog \n                filename={fileOnDelete?.FileName} \n                open={open}  \n                handleClose={handleClose}\n                onConfirmF={deleteFile}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_COMMENT = gql`\nmutation($OrderID: Int!, $Text: String!, $UserID: Int!) {\n  insert_erp_Comments_one(\n    object: {OrderID: $OrderID, Text: $Text, UserID: $UserID}) \n    {\n    CommentID\n    OrderID\n    Text\n    Timestamp\n    UserID\n  }\n}\n`;\n\nexport const DELETE_ORDER_COMMENT = gql`\n mutation($CommentID: Int!) {\n  delete_erp_Comments_by_pk(CommentID: $CommentID) {\n    CommentID\n  }\n}\n`;\n\nexport const UPDATE_ORDER_COMMENT = gql`\nmutation($CommentID: Int!, $Text: String!, $Timestamp: timestamptz!) {\n  update_erp_Comments_by_pk(\n    pk_columns: {CommentID: $CommentID},\n    _set: {Text: $Text, Timestamp: $Timestamp}) \n    {\n    OrderID\n    Text\n    Timestamp\n    UserID\n    CommentID\n  }\n  }\n`;","import gql from 'graphql-tag'\n\nexport const SUBSCRIBTION_ORDER_COMMENT = gql`\n  subscription MySubscritp($OrderID: Int!) {\n    erp_Comments(where: {OrderID: {_eq: $OrderID}}, order_by: {CommentID: desc}) {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n  }\n`\n","import sass from './index.module.sass'\nimport moment from 'moment'\n\nconst Comment = (props) => {\n  const { data, userID, updateComment, deleteComment, nowEditing, setNowEditing } = props\n\n  function sender(){\n    return `${data.User.FirstName} ${data.User.LastName}`\n  }\n  \n  function actions(){\n    if (userID === data.User.UserID && nowEditing?.CommentID !== data.CommentID ) return (\n        <div onClick={()=> deleteComment(data.CommentID)}>Удалить</div>\n    )\n  }\n  function timestamp(){\n    const date = moment(data.Timestamp)\n    return date.format('MMM D') +' at '+ date.format('hh:mm')\n  }\n\n  function getCommentContent(){\n    if (userID === data.User.UserID) return <div \n    contentEditable = \"true\"\n    key             = {data.CommentID}\n    className       = {sass.commentContent}\n    suppressContentEditableWarning = \"true\"\n    onBlur={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n    }}\n    onMouseLeave={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n      setNowEditing(null)\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text}}>\n    </div>\n\n    else return <div \n    onClick={(e) => {\n      // если комментарий содержит чек-лист выполняем мутацию на обновление состояния\n      if (e.currentTarget.innerHTML.toString().includes(sass.checklistUnit, 0)){\n        updateComment(data.CommentID, e.currentTarget.innerHTML)\n      }\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text }} \n    className={sass.commentContent}>\n    </div>\n\n  }\n\n  return (\n    <div className={sass.commentUnit}>\n\n      <div className={sass.commentHeader}>\n        <div className={sass.sender}> {sender()} </div>\n        <div className={sass.actions}>{actions()}</div>\n        <div className={sass.time}> {timestamp()} </div>\n      </div>\n      {getCommentContent()}\n\n    </div>\n  )\n}\nexport default Comment ","import { Menu, MenuItem } from '@mui/material/';\nimport sass from './index.module.sass'\n\nconst СommandsPopover = props => {\n  const {anchorEl, open, handleClose} = props\n\n  function insertTodoinDOM (){\n    const root = document.getElementById('Comments__commandMenu__button')\n    const elem = document.createElement('div')\n    elem.classList.add(sass.checklistUnit)\n    root.appendChild(elem)\n  }\n\n  return (\n    <Menu\n        id=\"Comments__commandMenu\"\n        aria-labelledby=\"Comments__commandMenu__button\"\n        anchorEl={anchorEl}\n        open={open}\n        elevation={5}\n        onClose={handleClose}\n        sx={{\n          border: '1px solid var(--border) !important',\n          '.MuiList-root':{\n            padding: '10px',\n\n          }\n        }}\n      >\n        <MenuItem onClick={() => {\n          handleClose();\n          insertTodoinDOM();\n        }}>Чеклист</MenuItem>\n        <MenuItem onClick={handleClose} sx={{ color: 'var(--border)'}}>Упомянуть</MenuItem>\n    </Menu>\n  )\n}\n\nexport default СommandsPopover\n","import { useState, useRef, useEffect } from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { INSERT_ORDER_COMMENT, UPDATE_ORDER_COMMENT, DELETE_ORDER_COMMENT } from '../queries/MutationOrderCommnets'\nimport { SUBSCRIBTION_ORDER_COMMENT } from '../queries/SubscriptionComments'\nimport sass from './index.module.sass'\n\nimport { Box } from '@mui/material/';\nimport Comment from './Comment'\nimport { UilMessage } from '@iconscout/react-unicons'\nimport СommandsPopover from './СommandsPopover'\n\nconst CommentsList = (props) => {\n  const { orderID, user } = props\n  const [ insertOrderCommentMutation ] = useMutation(INSERT_ORDER_COMMENT);\n  const [ updateOrderCommentMutation ] = useMutation(UPDATE_ORDER_COMMENT);\n  const [ deleteOrderCommentMutation ] = useMutation(DELETE_ORDER_COMMENT);\n\n  var   inputRef = useRef();\n  const [nowEditing, setNowEditing] = useState();\n  \n  const { data: comments = [], loading } = useSubscription(SUBSCRIBTION_ORDER_COMMENT, { variables: { OrderID: orderID }});\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  function insertComment(){\n    const text = inputRef.current.innerHTML\n    if (!text) return null\n    insertOrderCommentMutation({ variables: {\n      OrderID: orderID,\n      UserID: user.UserID,\n      Text: text\n      }\n    })\n    inputRef.current.innerText = ''\n   \n  }\n\n  function updateComment(id, newText){\n    updateOrderCommentMutation({ variables: {\n      CommentID: id,\n      Text: newText,\n      Timestamp: new Date()\n    }})\n  }\n\n  function deleteComment(id){\n    deleteOrderCommentMutation({ variables: {\n      CommentID: id\n    }\n  })\n  }\n  \n  function switchTodo(e) {\n    e.target.classList.toggle(sass.checklistUnit_complited)\n  }\n\n  function inputHandler(e){\n    if (e.target.innerText.trim() === '/'){\n      setAnchorEl(e.target)\n      e.target.innerHTML = ''\n    }\n  }\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  \n  useEffect(() => {\n    const els = [...document.querySelectorAll(`div.${sass.commentUnit} div.${sass.checklistUnit}`)]\n    els.forEach( el => {\n      el.addEventListener('click', switchTodo, false);\n    }, {once : true})\n    return () => {\n      els.forEach( el => {\n        el.removeEventListener('click', switchTodo, false);\n      })\n    }\n  }, [comments])\n\n  return(\n    <div className={sass.commentsListWrapper}>\n     <div className={sass.commentInputForm}>\n      \n      <СommandsPopover anchorEl={anchorEl} open={open} handleClose={handleClose}/>\n\n      <Box id=\"Comments__commandMenu__button\"\n        aria-controls=\"Comments__commandMenu\"\n        aria-haspopup=\"true\"\n        contentEditable='true'\n        ref={inputRef}\n        sx={{ minHeight: 20, padding: '10px 5px'}}\n        data-ph=\"Комментарий или ' / ' для команды\"\n        suppressContentEditableWarning={true}\n        onInput={inputHandler}>\n      </Box>\n    \n      <div onClick={insertComment} className={sass.saveButton}><UilMessage/></div>\n    </div>\n\n     {!loading && \n      comments.erp_Comments.map( (comment) => <Comment \n        data={comment} \n        key={comment.CommentID}\n        userID={user.UserID}\n        deleteComment={deleteComment}\n        updateComment={updateComment}\n        nowEditing={nowEditing}\n        setNowEditing={setNowEditing}\n      />)}\n    </div>\n  )\n}\n\nexport default CommentsList","import {gql} from 'graphql-tag'; \n\nexport const DELETE_ORDER = gql`\nmutation MyMutation($OrderID: Int!) {\n  delete_erp_Orders_by_pk(OrderID: $OrderID) {\n    OrderID\n  }\n}\n`;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function TransferOrderConfirmDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div onClick={handleClickOpen}>\n        Отгружен\n      </div>\n      \n      <Dialog\n        open={open}\n        maxWidth='xs'\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Перенести в архив?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Заказ удалится из очередности, но его в любое время можно будет найти в архиве по номеру счета, юрлицу, маркировке привода.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color='info' onClick={handleClose}>Отменить</Button>\n          <Button color='secondary' onClick={()=> {\n            handleClose()\n            props.onConfirmF()\n          }}>\n            Перенести \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilArchive,\n } from '@iconscout/react-unicons'\n\nimport DeleteOrderConfirmDialog from '../TransferOrderConfirmDialog'\nimport OS from '../../../_core/OrderStatus';\n\nconst OrderActions = (props) => {\n  const { order, transferOrderToArchive} = props\n\n  if ( [OS.ordProduction].includes(order.OrderStatusID) ) return (\n    <MenuItem>\n      <ListItemIcon>\n        <UilArchive/>\n      </ListItemIcon>\n      <ListItemText>\n        <DeleteOrderConfirmDialog onConfirmF={() => transferOrderToArchive(3)}/>  \n      </ListItemText>\n    </MenuItem>\n  )\n\n  return null\n}\nexport default OrderActions","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilTrashAlt, \n  UilFileCheck,\n } from '@iconscout/react-unicons'\n\nimport OS from '../../../_core/OrderStatus';\n\n\nconst PreOrderActions = (props) => {\n  const { order, transferOrderToPriority, mutationDeleteOrderHandler} = props\n\n  if ( [OS.ordRegistration].includes(order.OrderStatusID)) return (\n    <div>\n        <MenuItem>\n        <ListItemIcon>\n          <UilFileCheck/> \n        </ListItemIcon>\n        <ListItemText onClick={transferOrderToPriority}>\n            В очередность\n        </ListItemText>\n      </MenuItem>\n      <MenuItem sx={{ color: 'var(--danger)', 'svg': {\n        color: 'var(--danger)'\n        }}}>\n        <ListItemIcon>\n          <UilTrashAlt/>\n        </ListItemIcon>\n        <ListItemText onClick={mutationDeleteOrderHandler}>Удалить предазказ</ListItemText>\n      </MenuItem>\n    </div>\n  )\n  return null\n}\nexport default PreOrderActions","import {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n} from '@mui/material/';\nimport { \n  UilExclamationTriangle, \n  UilClock,\n } from '@iconscout/react-unicons'\nimport OS from '../../../_core/OrderStatus';\n\nconst OrderStatusesActions = (props) => {\n  const { order, needAttentionHandler, awaitingDispatchHandler} = props\n  if ( [OS.ordProduction, OS.reclInbox, OS.reclDecision, OS.reclProduction].includes(order.OrderStatusID) ) return (\n    <div>\n      <MenuItem \n        className={ order.AwaitingDispatch? 'awaitingDispatch': ''}\n        onClick={awaitingDispatchHandler}>\n        <ListItemIcon>\n          <UilClock/>\n        </ListItemIcon>\n        <ListItemText>Ожидает отгрузки</ListItemText>\n      </MenuItem>\n      <MenuItem \n        className={ order.NeedAttention? 'needAttention': ''}\n        onClick={needAttentionHandler}>\n        <ListItemIcon>\n          <UilExclamationTriangle/>\n        </ListItemIcon>\n        <ListItemText>Требует внимания</ListItemText>\n      </MenuItem>\n    </div>\n  )\n  return null\n}\nexport default OrderStatusesActions","import {\n  MenuItem,\n  ListItemIcon,\n  ListItemText\n} from '@mui/material/';\n\nimport { \n  UilTrashAlt, \n  UilArchive \n} from '@iconscout/react-unicons'\n\nimport TransferOrderConfirmDialog from '../TransferOrderConfirmDialog';\nimport OS from '../../../_core/OrderStatus';\n\nconst ReclamationActions = (props) => {\n  const { order, transferOrderToArchive, mutationDeleteOrderHandler } = props\n  const ifInbox = () => {\n    if (order.OrderStatusID === OS.reclInbox) return true\n  }\n\n  const ifDecision = () => {\n    if (order.OrderStatusID === OS.reclDecision) return true\n  }\n\n  const ifInproduction = () => {\n    if (order.OrderStatusID === OS.reclProduction) return true\n  }\n\n return (<>\n  {ifInproduction() && \n    <MenuItem>\n      <ListItemIcon>\n        <UilArchive/>\n      </ListItemIcon>\n      <ListItemText>\n        <TransferOrderConfirmDialog onConfirmF={() => transferOrderToArchive(13) }/>  \n      </ListItemText>\n    </MenuItem>\n  }\n  {ifInbox() && \n      <MenuItem sx={{ color: 'var(--danger)', 'svg': {\n        color: 'var(--danger)'\n      }}}>\n      <ListItemIcon>\n        <UilTrashAlt/>\n      </ListItemIcon>\n      <ListItemText onClick={mutationDeleteOrderHandler}>Удалить</ListItemText>\n      </MenuItem>\n    }\n\n </>)\n}\nexport default ReclamationActions","import { useHistory } from \"react-router-dom\";\n\nimport {\n  Popper,\n  ClickAwayListener,\n  MenuList,\n  Paper\n} from '@mui/material/';\n\n\n//apollo\nimport { useMutation } from \"@apollo/client\"\nimport { \n  UPDATE_AWAITING_DISPATCH,\n  UPDATE_NEED_ATTENTION,\n  MOVE_ORDER_TO_ARCHIVE,\n  MOVE_ORDER_TO_PRIORITY\n} from '../queries/MutationOrderInfo'\nimport { DELETE_ORDER } from '../queries/MutationDeleteOrder';\n\nimport OrderActions from \"./Actions/OrderActions\";\nimport PreOrderActions from \"./Actions/PreOrderActions\";\nimport OrderStatusesActions from \"./Actions/OrderStatusesActions\";\n\nimport ReclamationActions from \"./Actions/ReclamationActions\";\n\nconst OrderActionsMenu = props => {\n  const OrderID = props.order.OrderID \n  const { OAMenu, setOAMenu, OAMenuRef, order, refetch} = props\n\n  const [mutationAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n  const [mutationNeedAttention] = useMutation(UPDATE_NEED_ATTENTION);\n  const [mutationMoveOrderToArchive] = useMutation(MOVE_ORDER_TO_ARCHIVE);\n  const [mutationMoveOrderToPriority] = useMutation(MOVE_ORDER_TO_PRIORITY);\n  const [mutationDeleteOrder] = useMutation(DELETE_ORDER);\n\n  const history = useHistory();\n\n  const baseurl = () => {\n    if ( [1,2].includes(order.OrderStatusID) ) return '/'\n    if ( [10,11,12].includes(order.OrderStatusID) ) return '/reclamation'\n  }\n\n  // При статусе \"требует внимания\" происходит выделение заказа красным цветом в очередности. \n  // В левом меню в информации о заказе фиксируется  дата включения этого статуса.  \n  // Желательно чтобы возможность снятия была только у определенных аккаунтов .  \n  // Это необходимо когда при открытии заказа выясняется дефицит комплектующих или по заказу требуются срочные уточнения от заказчика какие-нибудь.\n  function needAttentionHandler(){\n    mutationNeedAttention({\n      variables: {OrderID, NeedAttention: !order.NeedAttention },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            NeedAttention: !order.NeedAttention\n          }\n        }\n    })\n  }\n  // При статусе \"ожидает отгрузки\" происходит выделение зеленым цветом в очередности, что означает, что заказ уже собран,\n  // и не отгружается по бумажным причинам\n  function awaitingDispatchHandler(){\n    mutationAwaitingDispatch({\n      variables: {OrderID, AwaitingDispatch: !order.AwaitingDispatch },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: order.OrderID,\n            AwaitingDispatch: !order.AwaitingDispatch\n          }\n        }\n    })\n  }\n  // Перекидывает заказ в архив (убирает из очередности)\n  async function transferOrderToArchive(OrderStatusID){\n    mutationMoveOrderToArchive({ variables: { \n      OrderID,\n      ActualShippingDate: new Date(),\n      OrderStatusID\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderID){\n          history.push(baseurl())\n        }\n      }\n    )\n  }\n\n  // Перекидывает предзаказ в очередность \n  async function transferOrderToPriority(){\n    mutationMoveOrderToPriority({ variables: { \n      OrderID,\n      AcceptanceDate: new Date(),\n     }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderID){\n          refetch()\n        }\n      }\n    )\n  }\n  \n  // для удаления заказа\n  function mutationDeleteOrderHandler(){\n    mutationDeleteOrder({ variables: {\n      OrderID\n    }}).then( res => {\n      if (res.data.delete_erp_Orders_by_pk.OrderID){\n        history.push(baseurl())\n      }\n    })\n  }\n\n  const handleClose = (event) => {\n    setOAMenu(false);\n  };\n\n  return (\n    <Popper\n    open={OAMenu} \n    anchorEl={OAMenuRef.current}\n    >\n\n    <Paper \n      sx={{ \n      boxShadow: '0 10px 50px 0 var(--bs)',\n      background: 'var(--LI)',\n       width: 200,\n       maxWidth: '100%',\n       borderRadius: 'var(--br)' }}> \n      <ClickAwayListener onClickAway={handleClose}>\n      <MenuList>\n\n        <OrderStatusesActions\n        order                   = {order}\n        awaitingDispatchHandler = {awaitingDispatchHandler}\n        needAttentionHandler    = {needAttentionHandler}\n        />\n\n        <PreOrderActions \n        order                      = {order}\n        transferOrderToPriority    = {transferOrderToPriority}\n        mutationDeleteOrderHandler = {mutationDeleteOrderHandler}\n        />\n        <OrderActions \n        order                  = {order}\n        transferOrderToArchive = {transferOrderToArchive}\n        />\n        <ReclamationActions\n        order = {order }\n        transferOrderToArchive ={transferOrderToArchive}\n        mutationDeleteOrderHandler ={mutationDeleteOrderHandler}\n        />\n      </MenuList>\n      </ClickAwayListener>\n    </Paper>\n  </Popper>\n\n  \n  )\n}\nexport default OrderActionsMenu;","import { UilCloudUpload } from '@iconscout/react-unicons'\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <div >\n             <UilCloudUpload className='inCloudconIcon'/>\n            </div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","export default class UserStatus {\n  static general    = 1 \n  static management = 2\n  static bookkeeping = 4\n  static manufacture = 3\n}","import { useContext, useCallback, useState, useRef } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_USERS }             from '../../hasura-queries/getUsers';\nimport { GET_ORDER_BY_ID }       from './queries/GetOrderByID'\nimport { PUSH_DOCS_ARRAY }       from './queries/MutationOrderDocs'\nimport { useMutation, useQuery } from \"@apollo/client\";\n\n//components\nimport Composition      from \"./Composition\";\nimport Info             from \"./Info\";\nimport EditableInfo     from \"./EditableComponents/EditableInfo\";\nimport Docs             from './Docs/Docs';\nimport CommentsList     from \"./Comments/CommentsList\";\nimport OrderActionsMenu from \"./OrderActions/OrderActionsMenu\";\n\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport './sass/index.sass';\nimport { Typography, Button, Box } from '@mui/material'\nimport { UilPlus, UilEditAlt, UilEllipsisH } from '@iconscout/react-unicons';\nimport OS from \"../_core/OrderStatus\";\nimport US from \"../_core/UserStatus\";\n\nfunction orderStatus(data){\n    // add a note to the title if this is a pre-order\n    if (data.OrderStatusID === OS.ordRegistration) return ' | Предзаказ';\n    if (data.OrderStatusID === OS.ordArchived) return ' | В архиве';\n    if ([ OS.reclInbox, OS.reclDecision , OS.reclProduction ].includes(data.OrderStatusID)) return ' | Рекламация';\n}\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    // Add new Order Item Dialog\n    const [OIDialog, setOIDialog] = useState(false)\n\n    //OrderActions Dropdown menu\n    const [OAMenu, setOAMenu] = useState(false);\n    const OAMenuRef = useRef(null);\n\n    const [pushDocs] = useMutation(PUSH_DOCS_ARRAY);\n    const orderID = useParams().id\n\n    const S3Upload = useCallback(acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        store.uploadFile(acceptedFiles).then(\n            (res) => {\n                if (res.status !== 200) console.log('S3 file upload error')\n                else{\n                    let m = []\n                    for (var i=0;  i<res.data.length; i=i+2 ){\n                        m.push({\n                            'Key': res.data[i].key,\n                            'OrderID': orderID,\n                            'FileName': res.data[i].originalname,\n                        })\n                    }\n                    pushDocs({ variables: {'objects': m} })\n                } \n                setOnUploadFiles([])\n                refetch();\n                }\n            \n        )\n      }, [])\n\n    var { data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID} });\n    const { data: users = []} = useQuery(GET_USERS);\n    const {getRootProps, isDragActive} = useDropzone({className: 'dropzone', onDrop: S3Upload });\n    \n    function showOrderActions(){\n        if ([ US.general, US.management , US.bookkeeping ].includes(store.user.AccessLevelID)) return true\n    }\n\n    return(\n    <div> \n        {isFileOnDropzone(isDragActive)}\n        { data.erp_Orders && users.erp_Users ? (<>\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n          <div className='LeftSideContent'>\n\n              <div className=\"page-header\">\n                <Typography sx={{ fontWeight: 600, fontSize: '1rem'}}>\n                    {data.erp_Orders[0].Entity} __ {data.erp_Orders[0].City} \n                    <span className=\"preorderTitle\">{orderStatus(data.erp_Orders[0])}</span>\n                </Typography>\n\n                {/* Показывать Кнопки редактирования заказа только для определенных групп юзеров */}\n                { <Box className='orderActions_box'>\n                  {editState && \n                  <Button \n                  variant = \"iconic\" \n                  onClick = {() => setOIDialog(true)}>\n                    <UilPlus/>\n                  </Button>\n                  }\n                  \n                 {[ US.general, US.management , US.bookkeeping ].includes(store.user.AccessLevelID) && \n                  <Button \n                  variant = \"iconic\" \n                  onClick = {() => setEditState(!editState)}>\n                      <UilEditAlt/>\n                  </Button>\n                }\n                  <Button \n                  aria-haspopup = \"true\" \n                  ref           = {OAMenuRef} \n                  variant       = \"iconic\" \n                  onClick       = {() => setOAMenu(true)}>\n                      <UilEllipsisH/>\n                  </Button>\n                </Box>}\n              </div>\n\n              <div className=\"Composition\">  \n                <Composition \n                  data        = {data.erp_Orders[0].OrderItems} \n                  editState   = {editState}\n                  refetch     = {refetch}\n                  OIDialog    = {OIDialog}\n                  setOIDialog = {setOIDialog}\n                  orderID     = {orderID} /> \n              </div>\n\n              <CommentsList \n              orderID = {orderID} \n              user    = {store.user} \n              data    = {data.erp_Orders[0].Comments}/> \n\n              <Docs \n              data      = {data.erp_Orders[0].Docs} \n              onUpload  = {onUploadFiles} \n              editState = {editState} \n              refetch   = {refetch} />\n          </div>\n\n          <div className=\"Info\">\n            { editState? <EditableInfo \n            data      = {data.erp_Orders[0]} \n            orderID   = {orderID} \n            refetch   = {refetch} \n            users     = {users.erp_Users} /> : (\n\n            <Info \n            data      = {data.erp_Orders[0]} \n            editState = {editState} \n            orderID   = {orderID} \n            />\n            )}\n          </div>\n\n          <OrderActionsMenu\n          refetch   = {refetch}\n          order     = {data.erp_Orders[0]}\n          OAMenu    = {OAMenu} \n          setOAMenu = {setOAMenu}\n          OAMenuRef = {OAMenuRef}\n          />\n\n        </section> \n        </>): null }\n    </div>\n    )\n}\n\nexport default OrderLayout","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervalsPools(where: {entrance: {_gte: $gte,  _lte: $lte}}) {\n        entrance\n        exit\n        card\n        interval\n        status\n      }\n    }\n  }\n}  \n`\n\n\n","\nexport function daysInMonth (selectedMonth) {\n    // количество дней в текущем месяце\n      const [month, year] = selectedMonth\n      return new Date(year, month+1, 0).getDate();\n}\n\n\n  \n\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './functions'\nimport sass from './attendance.module.sass'\n\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  let columnsList = [\n      {\n      Header: 'Сотрудник',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'Итого',\n      Cell: row => {\n        var hours = 0;\n        const intervals = row.row.original.intervalsPools\n        intervals.forEach( interval => {\n          hours += interval.interval \n        });\n\n        //вычетаем время на обед\n        hours -= timeDeduction/60 * intervals.length\n\n        return <div>{hours.toFixed(0)}</div>\n      }\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => {\n        const day1 = row.column.Header\n\n        const [entrance, exit, interval, status] = getIntervalData(day1, row.row.original.intervalsPools, timeDeduction)\n        \n        return (\n          <div className={\"status-\"+ status}> \n            <div>{ entrance }</div> \n            <div>{ exit }</div>\n            <div className={sass.interval}>{ interval }</div>\n          \n          </div>\n        )\n      }\n    })\n  }\n  return columnsList\n}\n\n\n\nfunction getIntervalData(day, intervals, timeDeduction){\n\n    // конвертация float в часы и минуты\n    function convertInterval(number, timeDeduction){\n        //вычетаем время на обед\n        number -= timeDeduction/60\n\n        var hour = Math.floor(number);\n        var decpart = number - hour;\n        var min = 1 / 60;\n\n        // Round to nearest minute\n        decpart = min * Math.round(decpart / min);\n        var minute = Math.floor(decpart * 60) + '';\n\n        // Add padding if need\n        if (minute.length < 2) {\n            minute = '0' + minute; \n        }\n\n        return hour + ':' + minute;\n    }\n\n    function getMinutes(t){\n        const minutes = t.getMinutes()\n        return (minutes < 10) ? `0${minutes}` : minutes\n    }\n\n    const e = intervals.find(el =>  new Date(el.entrance).getDate() == day)\n\n    if (e) {\n        const _entr = new Date(e.entrance)\n        const _exit = new Date(e.exit)\n\n        const entrance = _entr.getHours()+':'+ getMinutes(_entr)\n        const exit = _exit.getHours()+':'+ getMinutes(_exit)\n        const interval = convertInterval(e.interval, timeDeduction)\n\n        return [entrance, exit, interval, e.status]\n    }   else return [null, null, null, null]\n}\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nfunction monthAdd(date, month) {\n    // функция используется для корректного вычитания месяцев в chooseMonth\n    var temp = date;\n    temp = new Date(date.getFullYear(), date.getMonth(), 1);\n    temp.setMonth(temp.getMonth() + (month + 1));\n    temp.setDate(temp.getDate() - 1); \n  \n    if (date.getDate() < temp.getDate()) { \n        temp.setDate(date.getDate()); \n    }\n    return temp;    \n  }\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i< 6; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div onClick={selectedMonthHandler} \n                    className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                    date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>обед</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>мин</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>норма</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>ч</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","\nimport  { useContext, useMemo, useEffect, useReducer } from 'react'\nimport { Context } from '../../index'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\n\nimport Table, { generateColumns } from './table'\nimport { getVarsForSubscription } from './functions'\n\n\nimport './index.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport { UilSearch, UilConstructor } from '@iconscout/react-unicons'\nimport sass from './attendance.module.sass'\n\nvar attendanceData = null;\n// учет рабочего времени\nconst Attendance = props => {\n    const date = new Date()\n    const { store } = useContext(Context);\n\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 'filtredData':\n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [date.getMonth()-1, date.getFullYear()],\n    });\n    const { timeDeduction, selectedMonth, filtredData } = state;\n\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n    const { loading } = useQuery(GET_USERS, { variables: { gte, lte }, onCompleted: (options) => {\n        attendanceData = options.attendance_users_aggregate.nodes;\n        dispatch({ type: 'filtredData', payload: attendanceData})\n    } });\n    \n    useEffect(() => {\n        return () => {\n            attendanceData = null\n        };\n    }, []);\n\n    function filteringAlg(user, keyword){\n        if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else return false\n    }\n\n    const onChangeSearch = (e) => {\n        const keyword = e.target.value.trim();\n\n            if (keyword !== '') {\n              const result = attendanceData.filter((user) => filteringAlg(user, keyword))\n              dispatch({ type: 'filtredData', payload: result })\n            } else dispatch({ type: 'filtredData', payload: attendanceData})\n    }\n\n    const columns = useMemo(\n        () => generateColumns(selectedMonth, timeDeduction), [selectedMonth, timeDeduction]\n    )\n\n    return(\n    <div className={sass.attendanceLayout}>\n            <div className=\"pageLayout__header\">\n                <UilConstructor className='pageLayout__icon'/>\n                <div className='pageLayout__title'>Рабочее время</div>                    \n            </div> \n            <ReportConfigurator state={state} dispatch={dispatch} />\n\n        <div className={sass.tableWrapper}>\n\n            <div className={sass.tableSearchInput}>\n                <UilSearch/>\n                <input type='text' placeholder=\"поиск (номер счета или организация)\" onChange={ (e) => onChangeSearch(e) } autoFocus/>\n            </div>\n            \n            {filtredData && columns && <Table columns = {columns} data = {filtredData} className={sass.attendanceTable} /> }\n\n             {/* условное обозначение */}\n             <div className={`${sass.tableFooter} legend`}>\n                <div className=\"status-101\">Прерванный рабочий день</div>\n                <div className=\"status-102\">Не отмечен конец смены</div>\n                <span className=\"reportMeta\">\n                    Отчет за {selectedMonth[0] + 1} месяц {selectedMonth[1]} года \n                </span>\n\n            </div>\n\n        </div>\n    </div>\n    )\n}\n\nexport default Attendance","const getItems = (count, offset = 0) =>\n    Array.from({ length: count }, (v, k) => k).map(k => ({\n        id: (k + offset).toString(),\n        content: `item ${k + offset}`\n    }));\n    \nexport const initialState ={\n  //Входящие\n  inbox: [],\n  // Принятие решения\n  decision: [],\n  //В производстве\n  inproduction: []\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n      case 'inbox': \n      case 'decision': \n      case 'inproduction': \n          return {...state, [action.type]: action.payload };\n\n      case 'reset': \n          return initialState\n      default: \n          return {...state}\n  }\n}","import gql from 'graphql-tag'; \n\n// Выбираем заказы находящиеся только в Прездаказах и в производстве \n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const SUBSCRIPTION_RECLAMATION_ORDERS = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_in: [10,11,12]} }) {\n      AwaitingDispatch\n      NeedAttention\n      OrderID\n      Entity\n      City\n      OrderStatusID\n      OrderItems(order_by: {OrderItemID: asc}){\n        OrderItemID\n        Name\n      }   \n    }  \n  }\n`\n\nexport const UPDATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $OrderStatusID: Int!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: $OrderStatusID,\n         }\n      ) {\n        OrderID\n        OrderStatusID\n    }\n  }\n\n`;\n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int, $orderStatusID: Int!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { Link, useHistory } from 'react-router-dom'\nimport { useReducer } from 'react'\n\n\nimport sass from './index.module.sass'\nimport { Button, Typography, Box } from \"@mui/material\"\n\nimport { UilWrench, UilPlus, UilArchive } from '@iconscout/react-unicons'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { reducer, initialState } from './reducer';\n//apollo\nimport { useSubscription, useMutation } from '@apollo/client'\nimport { \n  SUBSCRIPTION_RECLAMATION_ORDERS, \n  UPDATE_ORDER_STATUS,\n  INSERT_ORDER } from './queries';\n\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return {result, movedObj: removed };\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n\n    // change background colour if dragging\n    background: isDragging ? 'var(--accentLight)' : 'transparent',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\n\nconst Reclamation = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { inbox, decision, inproduction } = state;\n  const history = useHistory();\n\n\n  const getState = id => {\n    if (id === 'inbox') return inbox\n    if (id === 'decision') return decision\n    if (id === 'inproduction') return inproduction\n  };\n\n  const columns = [\n    {\n      columnName: 'Входящие',\n      droppableId: 'inbox',\n      data: inbox,\n      orderStatusID: 10\n    },\n    {\n      columnName: 'Принятие решения',\n      droppableId: 'decision',\n      data: decision,\n      orderStatusID: 11\n    },\n    {\n      columnName: 'В производстве',\n      droppableId: 'inproduction',\n      data: inproduction,\n      orderStatusID: 12\n    }\n  ]\n\n  const [mutateOrderStatusID] = useMutation(UPDATE_ORDER_STATUS);\n  const [ insertOrder ] = useMutation(INSERT_ORDER, {variables: {\n    'orderStatusID': columns[0].orderStatusID,\n  }})\n\n  function insertOrderHandler (){\n    insertOrder().then( (res) => {\n        history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n    })\n  }\n\n  const onSubscriptionData = (options) => {\n    const data = options.subscriptionData.data.erp_Orders \n    // для dnd небходимо установить id в string\n    data.map( el => {\n      el.id = el.OrderID.toString()\n      return el\n    })\n    columns.forEach(col => {\n      dispatch({\n        type: col.droppableId,\n        payload: data.filter(order => order.OrderStatusID === col.orderStatusID)\n      })\n    })\n  }\n\n  useSubscription(SUBSCRIPTION_RECLAMATION_ORDERS, { onSubscriptionData});\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n        return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n        const items = reorder(\n            getState(source.droppableId),\n            source.index,\n            destination.index\n        );\n\n        dispatch({ type: source.droppableId, payload: items })\n    } else {\n      //отрабатывает при перемещинии элемента в другой столбик\n        const {result, movedObj } = move(\n            getState(source.droppableId),\n            getState(destination.droppableId),\n            source,\n            destination\n        );\n        Object.entries(result).map( el => {\n          if (el[0] === el[0]) dispatch({ type: el[0], payload: el[1] })\n        } )\n        mutateOrderStatusID({\n          variables: {\n            OrderID: movedObj.OrderID, \n            OrderStatusID: columns.find(col => col.droppableId === destination.droppableId).orderStatusID\n          }\n        })\n    }\n};\n\n  function getOrderStatus(order){\n    if (order.NeedAttention) return sass.needAttention\n    if (order.AwaitingDispatch) return sass.awaitingDispatch\n  }\n\n  function getOrderUnit(order){\n      if (order.OrderItems.length === 0) return <Link to={`/orders/${order.OrderID}`} className={sass.item} ><div>Нет содержимого</div></Link>\n\n      else return (\n      <Link to={`/orders/${order.OrderID}`} className={`${sass.item} ${getOrderStatus(order)}`}>\n        <div className={sass.items}>\n          {order.OrderItems.map(item => (\n            <div key={item.OrderItemID} className={sass.orderItem}>\n              {item.Name}\n            </div>\n          ))}\n        </div>\n        <div>{order.Entity}</div>\n        <div>{order.City}</div>\n      </Link>)\n  }\n\n  return(\n    <div className={sass.reclatationLayout}>\n       <div className='pageLayout__header'>\n        <UilWrench className='pageLayout__icon'/>\n        <div className=\"pageLayout__title\">Рекламация</div>\n\n        <div className='pageLayout__actions'>\n          <Button variant='iconic' onClick={insertOrderHandler}>\n            <UilPlus/>\n          </Button>\n          <Button variant='iconic'>\n            <UilArchive/>\n          </Button>\n        </div>\n      </div>\n\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Box className={sass.columnWrapper}>\n\n        {columns.map( e => (<div key={e.columnName} className={sass.reclColumn}>\n          <Typography className={sass.heading}>{e.columnName}</Typography>\n          <Droppable droppableId={e.droppableId} >\n          {(provided, snapshot) => (\n              <div\n                  ref={provided.innerRef}\n                  className={sass.draggableWrapper}>\n                  {e.data.map((item, index) => (\n                      <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}>\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}   \n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  style={getItemStyle(\n                                      snapshot.isDragging,\n                                      provided.draggableProps.style\n                                  )}>\n                                    {getOrderUnit(item)}\n                              </div>\n                          )}\n                      </Draggable>\n                  ))}\n                  {provided.placeholder}\n              </div>\n          )}\n          </Droppable>\n        </div>))}\n        \n        </Box>\n      </DragDropContext>\n    </div>\n  )\n}\nexport default Reclamation","import {Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport LoginForm from '../components/LoginForm';\nimport OrderListLayout from \"../components/OrderListLayout\";\nimport OrderLayout from \"../components/OrderLayout\";\nimport Attendance from '../components/AttendanceLayout'\nimport Reclamation from \"../components/ReclamationLayout\";\n\nconst AppRouter = () => {\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/reclamation' component={Reclamation}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            #if required route was not found\n            <Redirect     to=\"/\" />\n            {/* <PrivateRoute path='/recently' component={() => <PriorityLayout props={isRecently}/>} store={props.store}/> */}\n        </Switch>\n    )\n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\nconst BaseLayout = (props) => {\n    return(\n        <div className=\"base-container\">\n                <AppRouter/> \n                {props.children}\n        </div>\n    )\n}   \n\nexport default BaseLayout;","import { useEffect } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DARK_CLASS = \"dark\";\n\nexport function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport const SystemPreferTheme = (appTheme, setAppTheme) => {\n    // theme can will be dark, light or system (used for corrent displaying selected theme in preferences)\n    // mode can be only dark or light (used for material ui pallete)\n    const systemPrefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\"}, undefined);\n    var mode = appTheme\n\n    function changeTheme(newTheme){\n        var expires = new Date()\n        expires.setFullYear(expires.getFullYear()+1)\n        document.cookie = `theme=${newTheme}; expires=${expires}; path=/`\n        setAppTheme(newTheme)\n    }\n\n    useEffect(() => {\n      if (appTheme === 'dark') document.documentElement.classList.add(DARK_CLASS)\n      else if (appTheme === 'light') document.documentElement.classList.remove(DARK_CLASS)\n\n      else if (appTheme === 'system'){\n        if (systemPrefersDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n      };\n    }, [appTheme, systemPrefersDark]);\n\n    if (appTheme === 'system'){\n      if (systemPrefersDark) mode = 'dark'\n      else mode = 'light'\n    }\n    return {appTheme, mode, changeTheme}\n};\n","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../../../index';\nimport { useHistory } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { styled } from '@mui/material/styles';\n\nimport { UilSun, UilMoon, UilDesktop, UilSetting } from '@iconscout/react-unicons'\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material/';\n\nimport sass from './index.module.sass'\nimport { SystemPreferTheme } from '../../_core/SystemPreferTheme';\n\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    border: '1px solid var(--border)',\n    padding: 8,\n    textTransform: 'none',\n    '&:not(:first-of-type)': {\n\n    },\n    '&:first-of-type': {\n      borderTopLeftRadius: 'var(--br)',\n      borderBottomLeftRadius: 'var(--br)',\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 'var(--br)',\n      borderBottomRightRadius: 'var(--br)',\n    },\n  },\n}));\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function SettingsDrawer() {\n  const {store} = useContext(Context);\n  const [state, setState] = useState(false);\n  const history = useHistory()\n  const {changeTheme} = SystemPreferTheme(store.UItheme.state, store.UItheme.dispatch)\n\n  async function logout(){\n    await store.logout(); \n    history.push('/login')\n  }\n\n  const themeHandler = (e, newTheme) => {\n    changeTheme(newTheme)\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open);\n  };\n  \n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 400 }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n    >\n\n      <List>\n        <ListItem className={sass.user}>\n        <div>Добро пожаловать, {store.user.FirstName} {store.user.LastName}!</div>\n        </ListItem>\n\n        <ListItem >\n          <StyledToggleButtonGroup\n            className={sass.themeToggleButtons}\n            color=\"primary\"\n            value={getCookie('theme')}\n            exclusive\n            fullWidth\n            onChange={themeHandler}\n            >\n            <ToggleButton value=\"light\"> <UilSun/> Light</ToggleButton>\n            <ToggleButton value=\"system\"> <UilDesktop/>System</ToggleButton>\n            <ToggleButton value=\"dark\"> <UilMoon/> Dark</ToggleButton>\n          </StyledToggleButtonGroup>\n        </ListItem>\n\n      </List>\n      \n      <div className={sass.logoutButton}>\n        <button onClick={logout}>Выйти</button>\n      </div>\n    </Box>\n  );\n\n  return (\n    <div>\n          <div onClick={toggleDrawer(true)}>\n            <UilSetting/>\n          </div>\n          <Drawer\n            open={state}\n            onClose={toggleDrawer(false)}\n          >\n            {list('left')}\n          </Drawer>\n    </div>\n  );\n}","// import { observer } from 'mobx-react-lite';\nimport { NavLink} from 'react-router-dom';\nimport './index.sass';\n\nimport { UilSortAmountDown, UilWrench, UilConstructor} from '@iconscout/react-unicons';\nimport SettingsDrawer from './SettingsDrawer/SettingsDrawer';\n\nconst Sidebar = () => {\n    return(\n        <div className='Sidebar noprint'>\n\n            <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"action-icon\"><UilSortAmountDown/></NavLink>\n            <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"action-icon\"><UilWrench/></NavLink>\n            <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"action-icon\"><UilConstructor/></NavLink>\n                \n            <div className=\"action-icon settings\">\n                <SettingsDrawer/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Sidebar;","import { useContext, useState, useMemo } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\n\n\nimport {getCookie, SystemPreferTheme} from './components/_core/SystemPreferTheme'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { muicomponents } from './materialStyles'\n\nfunction App() {  \n  const { store } = useContext(Context);\n  const [appTheme, setAppTheme] = useState(() => getCookie('theme'))\n  store.setUItheme(appTheme, setAppTheme)\n  const {mode} = SystemPreferTheme(appTheme, setAppTheme)\n  \n  const getDesignTokens = (mode) => ({\n    palette: {\n      mode,\n      ...(mode === 'light'\n        ? {\n            // palette values for light mode\n            primary: {\n              main: '#3763FE',\n              light: '#E7E9FB',\n            },\n            secondary: {\n              main: '#e5534b',\n            }\n          }\n        : {\n            // palette values for dark mode\n            primary: {\n              main: '#99affc',\n              light: '#43435c',\n            },\n            secondary: {\n              main: '#e5534b',\n            },\n           \n          }),\n    },\n    typography: {\n      fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',sans-serif`,\n      subtitle1: {\n        fontSize: '.7rem',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n        letterSpacing: '.5px'\n        // color: 'var(--lowContrast)'\n      }\n    },\n  });\n\n  var theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  theme = createTheme(theme, muicomponents(theme));\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        \n        { store.inMemoryToken && <Sidebar/> }\n          <BaseLayout/>\n        \n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default observer(App);\n","import { color, palette } from \"@mui/system\";\n\nexport const muicomponents = (theme) => ({\n  components: {\n    MuiDialog: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0) !important',\n          borderRadius: 'var(--br) !important',\n        }\n      }\n    },\n    MuiDialogTitle: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n        }\n      }\n    },\n\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n        }\n      },\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          fontSize: '.8rem'\n        }\n      }\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          minWidth: '25px !important',\n          'svg':{\n            width: '17px'\n          },\n          'path':{\n            strokeWidth: .8,\n            stroke: 'var(--L0)'\n          },\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '.8rem',\n          textTransform: 'none !important',\n        },\n        textInfo: {\n          color: 'var(--lowContrast) !important',\n        },\n        iconic: {\n          minWidth: '40px',\n          padding: '5px',\n          'path': {\n            color: theme.palette.text.primary,\n            strokeWidth: .8,\n            stroke: 'var(--L0)'\n          },\n          '&:hover': {\n            background: 'var(--accentLight)',\n          }\n        }\n      },\n      defaultProps: {\n        disableElevation: true,\n        disableRipple: true,\n      },\n    },\n\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n        autoComplete: 'off',\n      }\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          color: 'var(--lowContrast) !important',\n        },\n        filter: {\n          fontSize: '.8rem',\n          transform: 'none',\n          position: 'relative',\n        }\n      },\n      defaultProps: {\n        shrink: true,\n      }\n    },\n    MuiFilledInput: {\n      defaultProps: {\n        disableUnderline: 'true',\n        size: 'small',\n      },\n      styleOverrides: {\n        root: {\n          background: 'var(--L1)',\n          border: '1px solid var(--borderLight)',\n          borderRadius: '10px',\n          ':hover': {\n            background: 'var(--L1)',\n          },\n        },\n\n      }\n    },\n    MuiInput: {\n      defaultProps: {\n        disableUnderline: 'true'\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          color: 'var(--highContrast) !important',\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          border: 'none',\n        }\n      }\n    },\n    MuiPopover: {\n      styleOverrides: {\n        paper: {\n          background: 'var(--L0)',\n          borderRadius: 'var(--br) !important'\n        }\n      }\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          fontSize: '.8rem',\n          boxSizing: 'border-box',\n          border: 'none !important',\n          outline: 'none !important',\n          boxShadow: 'none !important',\n          padding: 0,\n        }\n      }\n    },\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true\n      }\n    },\n    MuiCheckbox: {\n      defaultProps: {\n        disableRipple: true\n      }\n    }\n  },\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/s3/upload'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n// $api.interceptors.request.use( (config) => {\n//     config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n//     return config;\n// })\n// $api.interceptors.response.use( (config) => {\n//     return config;\n// }, async (error) => {\n//     const originalRequest = error.config;\n//     if(error.response.status === 401 && error.config && !error.config._isRetry){\n//         originalRequest._isRetry = true;\n//         try {\n//             const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n//             localStorage.setItem('token', response.data.accessToken);\n//             return $api.request(originalRequest);\n//         } catch (e) {\n//             console.log('Авторизация не прошла. Попробуйте снова');\n//         }\n//     }\n       \n// })\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  { email, password })\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isLoading = false;\n    UItheme = {\n        state: null,\n        dispatch: null\n    };\n    inMemoryToken = undefined;\n\n    priorityTab = 1;\n    cachedOrders = [];\n    cachedPreOrders = [];\n    \n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setCachedOrders(array){\n        this.cachedOrders = array\n    }\n    setCachedPreOrders(array){\n        this.cachedPreOrders = array\n    }\n    setUItheme(state, dispatch){\n        this.UItheme = { state, dispatch }\n    }\n    async login(email, password){\n        try {\n            const res = await AuthService.login(email, password)\n            if (res.status === 200){\n              this.setInMemoryToken(res.data.accessToken)\n              this.setUser(res.data.user);\n              return res\n            }\n            \n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            this.setInMemoryToken(null)\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n            (r) => {\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            await axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n              (res) => {\n                if (res.status === 200){\n                  console.log(res)\n                  this.setUser(res.data.user);\n                  this.setInMemoryToken(res.data.accessToken)      \n                  console.log('token validation complited')  \n                }\n              }\n            )\n        } catch (e) {\n            console.log(e)\n        } finally {\n            this.setLoading(false);\n            return this.inMemoryToken\n        }\n    }\n\n    async uploadFile(acceptedFiles){\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/s3/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            }\n          });\n        return res\n    }\n\n    async downloadFile(file){\n        await fetch(`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`)\n    }\n\n    async deleteFile(key, deleteFileMutation){\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/s3/delete/${key}`);\n\n        if (res.status === 200){\n            const hasuraRes = await deleteFileMutation({variables: {\n                'key': key,\n            }})\n            console.log(hasuraRes.data)\n        }\n    }\n\n    pageParams = [\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Рекламация',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Рабочее время',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n}\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport jwt from 'jsonwebtoken'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\n\n\n//apollo \nimport { WebSocketLink} from 'apollo-link-ws';\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  from,\n} from \"@apollo/client\";\n\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\n\nlet webSocketLink = new WebSocketLink({\n  uri: process.env.REACT_APP_HASURA_WS,\n  options: {\n    reconnect: true,\n    lazy: true,\n    reconnectionAttempts: 5,\n    inactivityTimeout: 10000000,\n    connectionCallback: async (error) => { error && console.log(error) },\n    connectionParams: () => ({\n      headers: {\n        'Authorization' : `Bearer ${store.inMemoryToken}`\n      }\n    }),\n    \n  }\n})\n\nconst asyncTokenValidation = setContext( async (_, {headers, ...context}) => {\n  var token = null \n\n  if (Date.now() >= jwt.decode(store.inMemoryToken).exp * 1000 ) {\n    console.log('Existed access token was expired, request for new token..')\n    token = await store.getNewToken()\n  }\n\n  return {\n    headers: {\n      ...headers,\n      ...(token ? {Authorization: `Bearer ${token}`} : {}),\n    },\n    ...context,\n  };\n});\n\n\nconst apolloClient = new ApolloClient({\n  link: from([ asyncTokenValidation, webSocketLink ]),\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n        erp_CheckListUnits: {\n          keyFields: ['CheckListUnitID']\n        },\n        erp_Comments: {\n          keyFields: ['CommentID']\n        }\n    },\n  })\n})\n\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderListLayout\":\"main_OrderListLayout__3KzFa\",\"tableWrapper\":\"main_tableWrapper__3lHmG\",\"tableFooter\":\"main_tableFooter__1Egk2\",\"tableMain\":\"main_tableMain__GJwKh\",\"awaitingDispatch\":\"main_awaitingDispatch__ZF9uh\",\"needAttention\":\"main_needAttention__io1X5\",\"unpaidOrder\":\"main_unpaidOrder__22HJx\",\"customerTableInfo\":\"main_customerTableInfo__JKJM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reclatationLayout\":\"ReclamationLayout_reclatationLayout__FiTwi\",\"columnWrapper\":\"ReclamationLayout_columnWrapper__1SCgf\",\"reclColumn\":\"ReclamationLayout_reclColumn__2kHvs\",\"draggableWrapper\":\"ReclamationLayout_draggableWrapper__10OPa\",\"heading\":\"ReclamationLayout_heading__1S6l3\",\"item\":\"ReclamationLayout_item__2uY2m\",\"orderItem\":\"ReclamationLayout_orderItem__3U0kY\",\"needAttention\":\"ReclamationLayout_needAttention__2S9H-\",\"awaitingDispatch\":\"ReclamationLayout_awaitingDispatch__GUQT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__1O75u\",\"quantity\":\"composition_quantity__2YtVw\",\"unitName\":\"composition_unitName__3YGne\",\"addOrderItem\":\"composition_addOrderItem__2AnFf\",\"quantityInput\":\"composition_quantityInput__2zcBe\",\"Unit\":\"composition_Unit__2Fqng\",\"index\":\"composition_index__2aXz6\",\"fullName\":\"composition_fullName__NObJ0\"};"],"sourceRoot":""}