{"version":3,"sources":["components/AttendanceLayout/attendance.module.sass","components/OrderListLayout/Search/search.module.sass","components/OrderListLayout/Recently/recently.module.sass","components/OrderLayout/OrderItemActions/index.module.sass","components/Sidebar/SettingsDrawer/index.module.sass","components/OrderListLayout/Archive/archive.module.sass","components/OrderLayout/Shipment/shipment.module.sass","components/OrderListLayout/PreOrders/preorders.module.sass","components/OrderLayout/CheckList/index.module.sass","routers/PrivateRoute.js","components/LoginForm/index.js","components/_core/notification.js","components/OrderListLayout/reducer.js","components/OrderListLayout/queries/getOrders.js","hasura-queries/getUsers.js","components/OrderListLayout/UniversalTable/columnList.js","components/OrderListLayout/UniversalTable/TableMarkup.jsx","components/OrderListLayout/Search/index.js","components/OrderListLayout/Search/filter.js","components/OrderListLayout/PreOrders/MutationOrderStatus.js","components/OrderListLayout/PreOrders/index.js","components/OrderListLayout/Priority/index.js","components/OrderListLayout/Recently/index.jsx","components/OrderListLayout/Recently/spreadOrders.js","components/BaseHeader/MutationInsertOrder.js","components/BaseHeader/ActionsHeader.js","components/OrderListLayout/Archive/GET_ARCHIVED_ORDERS.js","components/OrderListLayout/Archive/Archive.jsx","components/OrderListLayout/index.jsx","components/OrderLayout/queries/GetOrderByID.js","components/OrderLayout/queries/MutationOrderDocs.js","components/OrderLayout/queries/MutationOrderItem.js","components/OrderLayout/OrderItemActions/index.jsx","components/OrderLayout/Composition.jsx","components/OrderLayout/queries/MutationOrderInfo.js","components/OrderLayout/Shipment/Shipment.jsx","components/OrderLayout/Info.jsx","components/OrderLayout/EditableComponents/EditableInfo.jsx","components/OrderLayout/CheckList/mutations.js","components/OrderLayout/CheckList/CheckList.jsx","components/OrderLayout/Docs/Docs.jsx","components/OrderLayout/queries/MutationOrderCommnets.js","components/OrderLayout/queries/SubscriptionComments.js","components/OrderLayout/Comments/Comment.jsx","components/OrderLayout/Comments/CommentsList.jsx","components/OrderLayout/Dropzone.js","components/OrderLayout/index.jsx","components/AttendanceLayout/queries/getUsers.js","components/AttendanceLayout/functions.js","components/AttendanceLayout/table.js","components/AttendanceLayout/ReportConfigurator.jsx","components/BaseHeader/index.js","components/AttendanceLayout/index.js","components/ReclamationLayout/index.js","routers/Router.js","components/BaseLayout/index.js","components/_core/SystemPreferTheme.js","components/Sidebar/SettingsDrawer/SettingsDrawer.jsx","components/Sidebar/Sidebar.js","App.js","reportWebVitals.js","http/index.js","services/AuthService.js","store/store.js","index.js","components/OrderListLayout/main.module.sass","components/OrderLayout/Comments/index.module.sass","components/OrderLayout/sass/composition.module.sass"],"names":["module","exports","PrivateRoute","Component","component","rest","store","useContext","Context","useState","isLoaded","setisLoaded","inMemoryToken","token","setToken","a","checkAuth","then","res","useEffect","getToken","render","props","to","LoginForm","email","setEmail","password","setPassword","history","useHistory","login","status","push","console","error","type","title","message","addNotification","insert","container","dismiss","duration","className","TextField","label","onChange","e","target","value","Button","variant","width","onClick","reducer","state","action","payload","searchKeyword","managerFilter","GetOrdersSubscription","gql","GET_USERS","columnsList","Header","id","accessor","_row","counter","data","OrderItems","length","OrderID","map","item","Name","OrderItemID","Quantity","order","ShippingDate","moment","format","InvoiceNumber","total","TotalAmount","paid","PaidAmount","toFixed","User","FirstName","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","mainsass","tableMain","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","row","awaitingDispatch","original","AwaitingDispatch","getRowProps","cells","cell","getCellProps","useStyles","makeStyles","theme","formControl","minWidth","borderRadius","border","padding","select","fontSize","color","menuItem","Search","dispatch","users","classes","sass","tableSearchInput","placeholder","autoFocus","defaultValue","filter","filterPlaceholder","FormControl","Select","name","disableUnderline","MenuItem","user","UserID","LastName","filterIndicator","circle","managerFilterIndicator","filteringAlg","keyword","finded","arg","toLowerCase","includes","array","result","Entity","newOrders","ord","ManagerID","MUTATE_ORDER_STATUS","PreOrders","preOrders","useMutation","mutationOrderStatus","onClickTransfer","splice","indexOf","variables","AcceptanceDate","Date","toLocaleString","timeZone","newColumnList","filtredData","tableWrapper","preOrdersTableWrapper","Priority","orders","useMemo","Recently","sort","b","spreadData","days","subtract","dateCreation","split","date","objs","spread","heading","recentlyTable","incomingOrders","INSERT_ORDER","ActionsHeader","userID","createNewOrder","createOrderHandler","insert_erp_Orders","returning","editOrderHandler","setEditState","editState","createOrder","data-for","data-tip","addOrder","accessLevel","editOrderBtn","GET_ARCHIVED_ORDERS","Archive","setSearch","useQuery","InputBase","inputWrapper","erp_Orders","archiveTable","OrderListLayout","useReducer","selectedTab","cachedOrders","cachedPreOrders","initialState","priorityTab","useSubscription","onSubscriptionData","options","subscriptionData","forEach","OrderStatus","ID","setCachedOrders","setCachedPreOrders","fetchPolicy","nextFetchPolicy","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","a11yProps","tabHeight","AntTabs","withStyles","root","borderLeft","borderRight","background","minHeight","height","indicator","borderTopLeftRadius","borderTopRightRadius","backgroundColor","Tabs","AntTab","letterSpacing","opacity","transition","selected","Tab","disableRipple","event","newValue","setPriorutyTab","aria-label","erp_Users","GET_ORDER_BY_ID","PUSH_DOCS_ARRAY","DELETE_ORDER_FILE","INSERT_ORDER_ITEM","DELETE_ORDER_ITEM","UPDATE_ORDER_ITEM","UPDATE_ORDER_ITEM_METADATA","StyledMenuItem","StyledInput","size","InputLabelProps","shrink","OrderItemActions","editItemHandler","deleteItemHandler","updateItem","anchorEl","setAnchorEl","SerialNumber","Fitter","setState","handleClose","serialNumber","fitter","toString","aria-controls","aria-haspopup","currentTarget","moreVertIcon","Menu","keepMounted","open","Boolean","onClose","inputListItem","multiline","prevState","actionsWrapper","deleteButton","Input","autoComplete","InputProps","fullName","quantity","OrderComposition","refetch","orderID","deleteOrderItemMutation","insertOrderItemMutation","updateOrderItemMutation","updateOrderItemMetadataMutation","itemID","orderItemID","FullName","insertOrderItem","parseInt","updateOrderItem","el","Unit","addOrderItem","fullNameInput","quantityInput","pushOrderItemButton","UPDATE_ORDER_INFO","UPDATE_AWAITING_DISPATCH","UPDATE_ORDER_STATUS","Shipment","isShown","setIsShown","mutateAwaitingDispatch","mutateOrderStatus","update_erp_Orders_by_pk","OrderStatusID","CornerDialog","confirmLabel","onConfirm","cancelLabel","onCloseComplete","Checkbox","checkbox","optimisticResponse","__typename","checked","btn","appearance","OrderMeta","orderInfo","OrderNumber","City","CreatingDate","Comment","fields","DateFormatCustom","inputRef","getInputRef","onValueChange","values","MoneyFormatCustom","prefix","thousandSeparator","EditableInfo","addField","updateOrderInfo","log","inputComponent","Autocomplete","getOptionLabel","option","renderInput","params","managerID","find","findSelectedManeger","INSERT_UNIT","UPDATE_UNIT_STATE","CheckList","update","cache","existingUnits","readQuery","query","newcache","JSON","parse","stringify","CheckListUnits","insert_erp_CheckListUnits_one","writeQuery","insertUnitMutation","updateUnitStateMutation","units","motion","div","initial","animate","IsComplited","classList","toggle","CheckListUnitID","IsCompluted","toggleCheckListUnit","Point","unitInput","onKeyUp","keyCode","addUnit","Docs","onUpload","setOpen","fileOnDelete","setFileOnDelete","deleteFileMutation","deleteFile","Key","attachedFiles","file","handleClickOpen","FileName","href","process","rel","files","path","onUploadFiles","intent","INSERT_ORDER_COMMENT","DELETE_ORDER_COMMENT","UPDATE_ORDER_COMMENT","SUBSCRIBTION_ORDER_COMMENT","updateComment","deleteComment","nowEditing","setNowEditing","commentUnit","commentHeader","sender","actions","CommentID","time","Timestamp","timestamp","contentEditable","commentContent","suppressContentEditableWarning","onBlur","innerHTML","onMouseLeave","dangerouslySetInnerHTML","__html","Text","CommentsList","insertOrderCommentMutation","updateOrderCommentMutation","deleteOrderCommentMutation","loading","newText","commentsListWrapper","commentInputForm","commentInput","fullWidth","saveButton","erp_Comments","isFileOnDropzone","isDragActive","document","getElementById","add","remove","orderStatus","OrderLayout","setOnUploadFiles","editStateQueryArg","URLSearchParams","useLocation","search","get","pushDocs","useParams","S3Upload","useCallback","acceptedFiles","uploadFile","m","key","originalname","useDropzone","onDrop","getRootProps","Heading","Composition","Comments","Info","daysInMonth","selectedMonth","month","year","getDate","getIntervalData","day","intervals","timeDeduction","getMinutes","t","minutes","entrance","_entr","_exit","exit","getHours","number","hour","Math","floor","decpart","min","round","minute","convertInterval","interval","monthAdd","temp","getFullYear","getMonth","setMonth","setDate","ReportConfigurator","months","selectedMonthHandler","d","attributes","suitable","chooseMonth","trim","BaseHeader","pageParams","icon","attendanceData","Attendance","Error","replace","gte","lte","getVarsForSubscription","onCompleted","attendance_users_aggregate","nodes","onChangeSearch","lastname","startsWith","firstname","Cell","hours","intervalsPools","generateColumns","attendanceLayout","getPageParams","window","location","pathname","attendanceTable","tableFooter","Reclamation","AppRouter","exact","BaseLayout","DARK_CLASS","SystemPreferTheme","systemPrefersDark","useMediaQuery","undefined","parts","cookie","pop","shift","getCookie","setTheme","documentElement","newTheme","expires","setFullYear","StyledToggleButtonGroup","styled","ToggleButtonGroup","textTransform","borderBottomLeftRadius","borderBottomRightRadius","SettingsDrawer","changeTheme","logout","anchor","themeHandler","toggleDrawer","Drawer","sx","onKeyDown","List","ListItem","themeToggleButtons","exclusive","ToggleButton","logoutButton","Sidebar","activeClassName","darkTheme","createTheme","overrides","MuiInputLabel","MuiOutlinedInput","notchedOutline","borderColor","focused","MuiInputBase","borderBottom","MuiIconButton","MuiAutocomplete","paper","listbox","observer","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","$api","axios","create","withCredentials","baseURL","AuthService","post","Store","isLoading","preloader","Pane","display","alignItems","justifyContent","Spinner","makeAutoObservable","this","bool","isAuth","setInMemoryToken","accessToken","setUser","response","r","setLoading","formData","FormData","append","fetch","hasuraRes","url","createContext","webSocketLink","WebSocketLink","uri","reconnect","lazy","reconnectionAttempts","inactivityTimeout","connectionCallback","connectionParams","asyncTokenValidation","setContext","_","context","now","jwt","decode","exp","getNewToken","Authorization","apolloClient","ApolloClient","link","from","InMemoryCache","typePolicies","keyFields","erp_CheckListUnits","ReactDOM","client","sessionData","dataset","session","Provider"],"mappings":"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","file":"static/js/main.e106aafc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"attendanceLayout\":\"attendance_attendanceLayout__3ZkJT\",\"tableWrapper\":\"attendance_tableWrapper__32pvV\",\"attendanceTable\":\"attendance_attendanceTable__36c11\",\"interval\":\"attendance_interval__3CNBY\",\"status-101\":\"attendance_status-101__3aCi6\",\"tableSearchInput\":\"attendance_tableSearchInput__hHxoD\",\"tableFooter\":\"attendance_tableFooter__3W2nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableSearchInput\":\"search_tableSearchInput__mHzTe\",\"filter\":\"search_filter__1BI6Q\",\"filterPlaceholder\":\"search_filterPlaceholder__2NcNB\",\"filterIndicator\":\"search_filterIndicator__Rfc0e\",\"circle\":\"search_circle__2PIMx\",\"pulsate\":\"search_pulsate__pgEiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"recently_heading__2gRdv\",\"recentlyTable\":\"recently_recentlyTable__3NJpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsWrapper\":\"OrderItemActions_actionsWrapper__1mryM\",\"deleteButton\":\"OrderItemActions_deleteButton__14fyW\",\"moreVertIcon\":\"OrderItemActions_moreVertIcon__3Qdex\",\"inputListItem\":\"OrderItemActions_inputListItem__22HbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeToggleButtons\":\"SettingsDrawer_themeToggleButtons__hIzSP\",\"user\":\"SettingsDrawer_user__3iVNA\",\"logoutButton\":\"SettingsDrawer_logoutButton__2_Id_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"archive_inputWrapper__3nHE2\",\"archiveTable\":\"archive_archiveTable__1BwU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"shipment_checkbox__2pwPK\",\"btn\":\"shipment_btn__3E_o1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preOrdersTableWrapper\":\"preorders_preOrdersTableWrapper__2ELAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unitInput\":\"CheckList_unitInput__JnH-b\"};","import { useEffect, useState, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport { Context } from '../index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const { store } = useContext(Context)\n  const [isLoaded, setisLoaded] = useState(false);\n  const [token, setToken] = useState(store.inMemoryToken);\n\n    async function getToken() {\n      store.checkAuth().then(\n        (res) => {\n          setToken(res)\n          setisLoaded(true)\n        }\n      )\n    }\n\n    useEffect(() => {\n      if (token) setisLoaded(true)\n      else getToken();\n      }, [])\n\n  return(\n    <Route\n      {...rest}\n      render={props => {\n        if (isLoaded){\n          if (token) return <Component {...props} />\n          else return <Redirect to='/login'/>;\n        }\n    }}\n    />\n  )\n};\n\n\nexport default PrivateRoute;\n\n","import { useState, useContext } from 'react';\nimport { Context } from '../../index';\nimport { useHistory } from \"react-router-dom\";\n\nimport ReactNotification from 'react-notifications-component'\nimport { TextField, Button } from '@material-ui/core';\nimport './LoginForm.sass'\nimport { notif } from '../_core/notification'\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    \n    const { store } = useContext(Context);\n    const history = useHistory();\n\n\n    const login = async () => {\n      const res = await store.login(email, password)\n\n      if (res?.status === 200){\n        history.push('/')\n      }\n      else{\n        console.error('Invalig email or password')\n        notif('warning', 'Unauthorized error', 'Invalig email or password')\n       \n      }\n      \n    }\n\n    return(<>\n      <ReactNotification />\n      <div className='loginCard'>\n        <TextField\n        className='loginInput'\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value)}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          className='loginInput'\n          onChange={e => setPassword(e.target.value) }\n        />\n        <Button\n          className=\"Button\"\n          variant=\"outlined\"\n          width='300px'\n          onClick={login}\n        >Войти</Button>\n      </div>\n    </>);\n}\n\nexport default LoginForm\n","import { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\n\nexport const notif = (type, title, message) =>  store.addNotification({\n  title,\n  message,\n  type,\n  insert: \"bottom\",\n  container: \"top-right\",\n  dismiss: {\n    duration: 4000,\n  }\n});\n","export const initialState = (selectedTab, cachedOrders, cachedPreOrders) => ({\n    orders: cachedOrders || [],\n    preOrders: cachedPreOrders || [],\n    selectedTab : selectedTab,\n\n    searchKeyword: '',\n    managerFilter: 0,\n})\n\nexport function reducer(state, action) {\n    switch (action.type) {\n        case 'orders':\n        case 'preOrders': \n        case 'selectedTab': \n        case 'searchKeyword': \n        case 'managerFilter': \n            return {...state, [action.type]: action.payload };\n\n        case 'resetFilters': \n            return {...state, searchKeyword: '', managerFilter: 0}\n        default: \n            return {...state}\n    }\n}","import gql from 'graphql-tag'; \n\n// Выбираем заказы находящиеся только в Прездаказах и в производстве \n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const GetOrdersSubscription = gql`\nsubscription{\n    erp_Orders(where: {OrderStatusID: {_neq: 3} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems(order_by: {OrderItemID: asc}){\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n        LastName\n      }\n\n    }  \n  }\n`\n","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery getUsers {\n  erp_Users{\n    FirstName\n    LastName\n    UserID\n  }\n}\n`","import { Link } from 'react-router-dom'\nimport  moment  from 'moment';\n\nconst setPaidPercent = (total, paid) => {\n    if (!total || !paid) return ''\n    return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n}\n\nexport const columnsList = [\n    {\n      Header: '',\n      id: 'index',\n      accessor: (_row: any, counter) => counter +1\n    },\n    {\n      Header: 'Наим.',\n      id: \"orderItems\",\n      accessor: data => {\n        if (data.OrderItems.length === 0) return <Link to={`/orders/${data.OrderID}`}><div>Нет содержимого</div></Link>\n\n        else return (<Link to={`/orders/${data.OrderID}`}>\n        {data.OrderItems.map(item => (\n          <div key={item.OrderItemID} >\n            <span>{item.Name}</span>\n          </div>\n        ))}\n        </Link>)\n      }\n      \n    },\n    {\n      Header: 'Кол-во',\n      accessor: data =>\n      data.OrderItems.map(item => (\n      <div key={item.OrderItemID} >\n        <div>{item.Quantity}</div>\n      </div>\n      ))\n    },\n    {\n      Header: 'Отгрузка',\n      accessor: (order) => \n      <> { order.ShippingDate && moment(order.ShippingDate).format('DD.MM.YY') } </>\n    },\n    {\n      Header: 'Счет- оплата',\n      accessor: data => data.InvoiceNumber + setPaidPercent(data.TotalAmount, data.PaidAmount),\n    },\n    {\n      Header: 'Компания',\n      accessor: 'Entity',\n    },\n    {\n      Header: 'Гор.',\n      accessor: 'City',\n    },\n    {\n      Header: 'Мдж.',\n      accessor: data => <> {data.User?.FirstName[0] || ''} </>\n    },\n  ]\n\n\n","import { useTable } from 'react-table'\nimport mainsass from '../main.module.sass'\n\nexport default function Table({columns, data, className }){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n    if (data.length === 0) return null;\n   return (\n     <>\n    <table className={`${mainsass.tableMain} ${className}`} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          const awaitingDispatch = row.original.AwaitingDispatch\n          return (\n               <tr className={awaitingDispatch ? mainsass.awaitingDispatch : ''} {...row.getRowProps()}>\n              {row.cells.map((cell, i) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n              </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}","import { UilSearch } from '@iconscout/react-unicons'\nimport sass from './search.module.sass'\n\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      minWidth: 70,\n      borderRadius: 'var(--br10)',\n      border: '1px solid var(--border)',\n      padding: '0 10px',\n    },\n    select: {\n        fontSize: '.8rem',\n        color: 'var(--highContrast)',\n    },\n    menuItem: {\n        fontSize: '.8rem',\n        color: 'var(--lowContrast)',\n    },\n  }));\n\nconst Search = ({state, dispatch, users }) => {\n    const classes = useStyles();\n\n    const searchHandler = (e) => {\n        dispatch({ type: 'searchKeyword', payload: e.target.value }) \n    }\n\n    const managerHandler = (e) => {\n        dispatch({ type: 'managerFilter', payload: e.target.value })\n    }\n\n    const managerFilterIndicator = () => {\n        if (state.managerFilter !== 0) return (\n            <div className={sass.filterIndicator}>\n                <div className={sass.circle}></div>\n                <p>Выдача ограничена фильтром</p>\n            </div>\n        ) \n    }\n\n    return (\n        <>\n        <div className={sass.tableSearchInput}>\n            <UilSearch/>\n            <input type='text' placeholder=\"Номер счета или организация\" onChange={searchHandler} autoFocus defaultValue={state.searchKeyword}/>\n\n            {/* filter data by manager */}\n            { users && (<div className={sass.filter}>\n            <span className={sass.filterPlaceholder}>manager</span>\n\n                <FormControl className={classes.formControl}>\n                <Select\n                    name=\"managerFilter\"\n                    value={state.managerFilter}\n                    onChange={managerHandler}\n                    className={classes.select}\n                    disableUnderline={true}\n                >\n                    <MenuItem value={0} className={classes.menuItem} >Все</MenuItem>\n                    { users.map( (user) => \n                    <MenuItem  className={classes.menuItem} value={ user.UserID } key={user.UserID} > {`${user.FirstName} ${user.LastName}`} </MenuItem>\n                    )}\n                \n                </Select>\n                </FormControl>\n            </div>)}\n        </div>\n\n\n     {/* filter indicator */}\n    {managerFilterIndicator(state.managerFilter)}\n    </>\n    )\n}\nexport default Search","function filteringAlg(keyword, ...rest){\n    var finded = false\n    rest.map( (arg) => {\n        if (arg && arg.toLowerCase().includes(keyword.toLowerCase())) finded = true\n    })\n   \n    if (finded) return true \n    else return false\n}\n\nexport const filter = (array, keyword, managerFilter = 0) => {\n    var result = [];\n\n    // применить поиск по ключевому слову\n    if (keyword !== '') {\n        result = array.filter( (order) => filteringAlg(keyword, order.InvoiceNumber, order.Entity ))         \n    }\n    else result = array\n\n     //применить поиск по фильру\n    if (managerFilter !== 0){\n        var newOrders = []\n        result.map( (ord) => {\n            if (ord.ManagerID === managerFilter) newOrders.push(ord)\n        })\n        return newOrders\n    }\n    else return result\n}","import {gql} from 'graphql-tag'; \n\n//   OrderStatusID \n//     1- Предзаказ\n//     2 - В производстве\n//     3- Выпущен и отгружен\n// \n\nexport const MUTATE_ORDER_STATUS = gql`\n    mutation MyMutation($OrderID: Int!, $AcceptanceDate: timestamptz!){\n    update_erp_Orders_by_pk(\n      pk_columns: {OrderID: $OrderID},\n       _set: {\n         OrderStatusID: 2,\n         AcceptanceDate: $AcceptanceDate,\n         }\n      ) {\n        OrderID\n    }\n  }\n\n`;","import { columnsList } from '../UniversalTable/columnList'\nimport Table from \"../UniversalTable/TableMarkup\";\n\nimport Search from '../Search';\nimport { filter } from '../Search/filter'\n\n//apollo\nimport { MUTATE_ORDER_STATUS } from \"./MutationOrderStatus\";\nimport { useMutation } from '@apollo/client';\n\n//UI\nimport { UilArrowFromRight} from '@iconscout/react-unicons';\nimport sass from './preorders.module.sass'\nimport mainsass from '../main.module.sass'\n\nconst PreOrders = ({ state, dispatch }) => {\n    const data = state.preOrders\n    const [mutationOrderStatus] = useMutation(MUTATE_ORDER_STATUS);\n\n    const onClickTransfer = (order) => {\n        data.splice(data.indexOf(order), 1)\n        dispatch({ type: 'preOrders', payload: data })\n\n        mutationOrderStatus({ variables: { \n            OrderID: order.OrderID, \n            AcceptanceDate: new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"}) } \n        })\n    }\n\n    var newColumnList = [...columnsList];\n    const filtredData = filter(data, state.searchKeyword)\n    \n    newColumnList.push({\n        Header: ' ',\n        accessor: data => \n        <div onClick={() => onClickTransfer(data)} className=\"square-button\"><UilArrowFromRight/></div>\n        ,\n      })\n   \n    return(\n    <div className={`${mainsass.tableWrapper} ${sass.preOrdersTableWrapper}`}>\n        <Search state={state} dispatch={dispatch} />\n        {filtredData && <Table columns = {newColumnList} data = {filtredData} />}\n    </div>\n    )\n}\nexport default PreOrders","import { useMemo } from 'react'\n\n// ui \nimport mainsass from '../main.module.sass'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\n\nconst Priority = ({ users, state, dispatch }) => {\n    const data = state.orders \n\n    const columns = useMemo(\n        () => columnsList, []\n    )\n    const filtredData = filter(data, state.searchKeyword, state.managerFilter)\n\n    return(\n        <div className={mainsass.tableWrapper}>\n            <Search state={state} dispatch={dispatch} users={users}/>\n            {filtredData && <Table columns = {columns} data = {filtredData} />}\n        </div>\n    )\n}\nexport default Priority","import {  useMemo } from 'react';\n\nimport Table from '../UniversalTable/TableMarkup'\n\nimport Search from '../Search'\nimport { filter } from '../Search/filter'\n\nimport { columnsList } from '../UniversalTable/columnList';\nimport { spread } from './spreadOrders';\n\nimport mainsass from '../main.module.sass'\nimport sass from './recently.module.sass'\n\nconst Recently = ({ state, dispatch }) => {\n    const data = state.orders\n\n    data.sort(function(a,b){\n        // Turn your strings into dates, and then subtract them\n        // to get a value that is either negative, positive, or zero.\n        return new Date(b.AcceptanceDate) - new Date(a.AcceptanceDate);\n      });\n\n\n    const spreadData = spread(data);\n\n    const columns = useMemo(\n        () => columnsList,\n        []\n    )\n\n    const filtredData = filter(spreadData[2].objs, state.searchKeyword)\n\n    return(\n        <div>\n            { spreadData[0].objs.length ? ( <>\n            <div className={sass.heading}>Сегодня</div>\n            <Table columns={columns} data={spreadData[0].objs} className={sass.recentlyTable} />\n            </>): null}\n\n            { spreadData[1].objs.length ? ( <>\n            <div className={sass.heading}>Вчера</div>\n            <Table columns={columns} data={spreadData[1].objs} className={sass.recentlyTable} />\n            </>): null}\n\n            <div className={sass.heading}>Остальные</div>\n            <div className={mainsass.tableWrapper}>\n                <Search state={state} dispatch={dispatch} incomingOrders={data} />\n                { <Table columns = { columns } data = { filtredData } />}\n            </div>\n\n        </div>\n    )\n}\nexport default Recently","import moment from 'moment' \n\nexport const spread = (orders) => {\n    let days = [{\n        'name': 'Сегодня',\n        'date': moment().subtract(0, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': 'Вчера',\n        'date': moment().subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n        'objs': []\n        }, \n        {\n        'name': '',\n        'objs': [] \n        },\n        ]\n        \n    for(const order of orders){\n\n        const dateCreation = order.AcceptanceDate?.split('T')[0]\n\n        if (dateCreation === days[0].date) days[0].objs.push(order);\n        else if (dateCreation === days[1].date) days[1].objs.push(order);\n        else days[2].objs.push(order);    \n    }\n\n    return days;\n};\n","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER = gql`\nmutation MyMutation($managerID: Int!, $orderStatusID: Int!, $isReclamation: Boolean!) {\n  insert_erp_Orders(objects: {ManagerID: $managerID, OrderStatusID:  $orderStatusID, IsReclamation: $isReclamation}) {\n    returning {\n      OrderID\n    }\n  }\n}\n`;","import { useMutation } from '@apollo/client';\nimport { INSERT_ORDER } from './MutationInsertOrder'\n\nimport { UilPlus, UilEditAlt} from '@iconscout/react-unicons';\n\nconst ActionsHeader = (props) => {\n    const [ createNewOrder] = useMutation(INSERT_ORDER, {variables: {\n        'managerID':     props.userID,\n        'orderStatusID': 1,\n        'isReclamation':  false,\n    }})\n\n    const createOrderHandler = () => {\n        createNewOrder().then( (res) => {\n            props.history.push(`/orders/${res.data.insert_erp_Orders.returning[0].OrderID}?edit=true`)\n        })\n    }\n\n    const editOrderHandler = () => {\n        props.setEditState(!props.editState)\n    }\n\n    const editOrderBtn = () => {\n        if (props.accessLevel === 2){\n            const editIconClass = () => props.editState ? 'action-icon active': 'action-icon'\n            return <div data-for='global' data-tip=\"Добавить\" className={editIconClass()} onClick={editOrderHandler}><UilEditAlt/></div>\n        }\n    }\n\n    const addOrder = () => {\n        if (props.createOrder){\n            return <div data-for='global' data-tip=\"Добавить\" onClick={createOrderHandler} className=\"action-icon\"><UilPlus/></div>\n        }\n    }\n    return(\n        <div className=\"action-block\">\n            {/* <div data-for='global' data-tip=\"Распечатать\" className=\"action-icon\"><UilPrint/></div> */}\n            {addOrder()}\n            {editOrderBtn()}\n            {/* <div data-for='global' data-tip=\"Уведомления\" className=\"action-icon\"><UilBell/></div> */}\n        </div>\n    )\n}\n\nexport default ActionsHeader","import { gql } from \"graphql-tag\"\n\nexport const GET_ARCHIVED_ORDERS = gql`\n  query{\n    erp_Orders(where: {OrderStatusID: {_eq: 3} }) {\n      OrderID\n      Entity\n      InvoiceNumber\n      City\n      ShippingDate\n      AcceptanceDate\n      PaidAmount\n      TotalAmount\n      AwaitingDispatch\n      CreatingDate\n      ManagerID\n      OrderStatus {\n        Name\n        ID\n      }\n      OrderItems {\n        Quantity\n        OrderItemID\n        Name\n        OrderID\n      } \n      User {\n        FirstName\n      }\n\n    }  \n  }\n`\n","import { useMemo, useState } from 'react';\n\n//apollo \nimport { useQuery } from '@apollo/client'\nimport { GET_ARCHIVED_ORDERS } from './GET_ARCHIVED_ORDERS';\n\n//ui\nimport { InputBase } from '@material-ui/core';\nimport sass from './archive.module.sass'\nimport mainsass from '../main.module.sass'\nimport { columnsList } from '../UniversalTable/columnList'\nimport Table from '../UniversalTable/TableMarkup'\n\nconst Archive = () => {\n  const [search, setSearch] = useState('');\n  const { data = [] } = useQuery(GET_ARCHIVED_ORDERS);\n\n  const columns = useMemo(\n    () => columnsList, []\n  )\n\n  const searchHandler = (e) => {\n    setSearch(e.target.value)\n  }\n\n  return(\n    <div>\n      <InputBase\n        className={sass.inputWrapper}\n        autoFocus\n        onChange={searchHandler}\n        placeholder='Счет, город или компания'/>\n\n\n      {data.erp_Orders &&  \n        <div className={mainsass.tableWrapper}>\n        <Table columns = {columns} data = {data.erp_Orders} className={sass.archiveTable}/>\n        </div>\n      }\n\n    </div>\n  )\n}\nexport default Archive","import { useContext, useReducer } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Context } from '../../index'\nimport { reducer, initialState } from './reducer';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n// apollo\nimport { useSubscription, useQuery } from '@apollo/client'\nimport { GetOrdersSubscription } from './queries/getOrders'\nimport { GET_USERS } from '../../hasura-queries/getUsers'\n\n// ui \nimport {Tabs, Tab, Box} from '@material-ui/core';\nimport mainsass from './main.module.sass'\n\nimport PreOrders from './PreOrders';\nimport Priority from './Priority';\nimport Recently from './Recently/index.jsx';\nimport ActionsHeader from '../BaseHeader/ActionsHeader'\nimport Archive from './Archive/Archive';\n\nconst OrderListLayout = (props) => {\n    const { store } = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, initialState( store.priorityTab, store.cachedOrders, store.cachedPreOrders ));\n    const { selectedTab } = state; \n\n    const history = useHistory();\n\n    const onSubscriptionData = (options) => {\n  \n        options.subscriptionData.data.erp_Orders.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.ShippingDate) - new Date(b.ShippingDate);\n          });\n\n        let orders = []; let preOrders = [];\n        options.subscriptionData.data.erp_Orders.forEach( (order) => {\n            if (order.OrderStatus.ID === 1) preOrders.push(order)\n            else if (order.OrderStatus.ID === 2) orders.push(order)\n        })\n        store.setCachedOrders(orders)\n        store.setCachedPreOrders(preOrders)\n\n        dispatch({ type: 'preOrders', payload: preOrders });\n        dispatch({ type: 'orders', payload: orders })\n    }\n    \n    useSubscription(GetOrdersSubscription, { onSubscriptionData,  fetchPolicy: \"cache-first\", nextFetchPolicy: \"cache-first\" });\n    const { data: users = []} = useQuery(GET_USERS);\n\n    const tabHandler = (event, newValue) => {\n        dispatch({ type: 'selectedTab', payload: newValue })\n        dispatch({ type: 'resetFilters'})\n        store.setPriorutyTab(newValue)\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n            <Box>{children}</Box>\n            )}\n        </div>\n        );\n    }\n    \n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n  \n    function a11yProps(index) {\n        return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n    const tabHeight = '45px'\n    const AntTabs = withStyles({\n        root: {\n            borderLeft: '1px solid var(--border)',\n            borderRight: '1px solid var(--border)',\n            background: 'var(--L1)',\n            minHeight: tabHeight,\n            height: tabHeight,\n        },\n        indicator: {  \n            borderTopLeftRadius: '20px',\n            borderTopRightRadius: '20px',\n            backgroundColor: 'var(--accent)',\n        },\n      })(Tabs);\n      \n      const AntTab = withStyles((theme) => ({\n        root: {\n          minWidth: '10%',\n          fontSize: '.7rem',\n          letterSpacing: '1px',\n          color: 'var(--highContrast)',\n          padding: 0,\n          opacity: .5,\n          minHeight: tabHeight,\n          height: tabHeight,\n          transition: 'opacity .3s ease',\n          '&:hover': {\n            opacity: 1,\n          },\n          '&$selected': {\n                color: 'var(--accent)',\n                backgroundColor: 'var(--accentLight)'\n          }\n        },\n        selected: {},\n      }))((props) => <Tab disableRipple {...props} />);\n\n    return(\n        <div className={mainsass.OrderListLayout}>\n        <AntTabs value={selectedTab} onChange={tabHandler} aria-label=\"simple tabs example\">\n            <AntTab label=\"Предзаказы\" {...a11yProps(0)} />\n            <AntTab label=\"Очередость\" {...a11yProps(1)} />\n            <AntTab label=\"Недавние\" {...a11yProps(2)} />\n            <AntTab label=\"Архив\" {...a11yProps(3)} />\n\n\n            <ActionsHeader createOrder={1} userID={store.user.UserID} history={history}/>\n        </AntTabs>\n\n\n        <TabPanel value={selectedTab} index={0}>\n            <PreOrders state={state} dispatch={dispatch}/>\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={1} >\n            <Priority state={state} dispatch={dispatch} users={users.erp_Users} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={2}>\n            <Recently state={state} dispatch={dispatch} />\n        </TabPanel>\n\n        <TabPanel value={selectedTab} index={3}>\n            <Archive state={state} dispatch={dispatch} />\n        </TabPanel>\n\n      </div>\n    )\n}\nexport default OrderListLayout","import gql from 'graphql-tag'\n\nexport const GET_ORDER_BY_ID = gql`\nquery MyQuery($OrderID: Int!) {\n  erp_Orders(\n    where: {OrderID: {_eq: $OrderID}}\n    ){\n    OrderID\n    ManagerID\n    OrderStatusID\n    City\n    ShippingDate\n    CreatingDate\n    AcceptanceDate\n    Comment\n    Entity\n    InvoiceNumber\n    OrderNumber\n    PaidAmount\n    TotalAmount\n    AwaitingDispatch\n    User {\n      FirstName\n      LastName\n      UserID\n    }\n    OrderItems(order_by: {OrderItemID: asc}) {\n      Fitter\n      Name\n      FullName\n      OrderItemID\n      OrderID\n      Quantity\n      SerialNumber\n    }\n    CheckListUnits(order_by: {CheckListUnitID: desc}) {\n      CheckListUnitID\n      OrderID\n      IsComplited\n      Point\n    }\n    Docs {\n      Key\n      FileName\n    }\n  }\n}\n`","import {gql} from 'graphql-tag'; \n\nexport const PUSH_DOCS_ARRAY = gql`\nmutation MyMutation($objects: [erp_Docs_insert_input!]!) {\n  insert_erp_Docs(objects: $objects) {\n    returning {\n      ID\n    }\n  }\n}\n`;\n\nexport const DELETE_ORDER_FILE = gql`\n    mutation MyMutation($key: String!) {\n    delete_erp_Docs(where: {Key: {_eq: $key} }) {\n        returning {\n        Key\n        }\n    }\n    }\n`;","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_ITEM = gql`\n mutation MyMutation($name: String!, $orderID: Int!, $quantity: Int!, $fullName: String!) {\n  insert_erp_OrderItems_one(object: {\n    OrderID: $orderID,\n    Name: $name,\n    FullName: $fullName,\n    Quantity: $quantity,\n    }) {\n    OrderItemID\n    OrderID\n  }\n}\n`;\n\nexport const DELETE_ORDER_ITEM = gql`\nmutation MyMutation($orderItemID: Int!) {\n  delete_erp_OrderItems_by_pk(OrderItemID: $orderItemID) {\n\t\tOrderItemID\n  }\n}\n`;\n\n\nexport const UPDATE_ORDER_ITEM = gql`\nmutation($OrderItemID: Int!, $FullName: String!, $Name: String!, $Quantity: Int!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n    _set: {FullName: $FullName, Name: $Name, Quantity: $Quantity}) {\n    Name\n    FullName\n    OrderItemID\n    Quantity\n  }\n}\n\n`;\nexport const UPDATE_ORDER_ITEM_METADATA = gql`\nmutation($OrderItemID: Int!, $Fitter: String!, $SerialNumber: String!) {\n  update_erp_OrderItems_by_pk(\n    pk_columns: {OrderItemID: $OrderItemID},\n     _set: {Fitter: $Fitter, SerialNumber: $SerialNumber}\n  ){\n    OrderItemID\n  }\n}\n`","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu, MenuItem, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UilEllipsisV } from '@iconscout/react-unicons'\nimport sass from './index.module.sass'\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        fontSize: '.8rem',\n        color: 'var(--highContrast)',\n    },\n  }))( (props) => (\n    <MenuItem disableRipple={true} {...props} /> \n  ));\n\n  const StyledInput = withStyles((theme) => ({\n    root: {\n        fontSize: '.8rem',\n    },\n  }))( (props) => (\n      <TextField\n        size='small' \n        variant='outlined' \n        InputLabelProps={{shrink: true}} \n        {...props} />\n  ));\n\n  \nconst OrderItemActions = ({ editState, item, editItemHandler, deleteItemHandler, updateItem }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    'serialNumber': item.SerialNumber,\n    'fitter': item.Fitter\n  });\n\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n\n      if (item.SerialNumber !== state.serialNumber || item.Fitter !== state.fitter){\n        updateItem({ variables: {\n          'OrderItemID': item.OrderItemID,\n          'Fitter': state.fitter,\n          'SerialNumber': state.serialNumber.toString()\n        } })\n      }\n    };\n    \n    return (\n        <div>\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size='small'>\n            <UilEllipsisV className={sass.moreVertIcon}/>\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n\n\n            <StyledMenuItem className={sass.inputListItem} >\n              <StyledInput \n                type=\"number\"\n                label=\"Серийный номер\" \n                multiline\n                onChange={(e) => setState(prevState => ({\n                ...prevState,\n                'serialNumber': e.target.value\n                }))}\n                defaultValue={state.serialNumber}\n                />\n            </StyledMenuItem>\n\n            <StyledMenuItem className={sass.inputListItem} >\n              <StyledInput \n                label=\"Сборщик\"  \n                onChange={(e) => setState(prevState => ({\n                ...prevState,\n                'fitter': e.target.value\n                }))}\n                defaultValue={state.fitter}\n              />\n            </StyledMenuItem>\n\n\n            {editState && (\n              <div className={sass.actionsWrapper}>\n                <StyledMenuItem onClick={ (e) => {\n                    handleClose();\n                    editItemHandler(e, item);\n                }}>Изменить</StyledMenuItem>\n\n                <StyledMenuItem \n                  className={sass.deleteButton}\n                  onClick={ ()=> {\n                    handleClose();\n                    deleteItemHandler(item.OrderItemID);\n                }}>Удалить</StyledMenuItem>\n              </div>\n            )}\n\n          </Menu>\n        </div>\n      );\n}\n\nOrderItemActions.propTypes = { \n    editState: PropTypes.bool,\n    item:      PropTypes.object,\n    editItemHandler:  PropTypes.func, \n    deleteItemHandler: PropTypes.func,\n    updateItem: PropTypes.func\n}\n\nexport default OrderItemActions\n\n","import { useReducer, useEffect } from 'react'\n\n//apollo \nimport { useMutation } from \"@apollo/client\"\nimport { \nDELETE_ORDER_ITEM, \nINSERT_ORDER_ITEM, \nUPDATE_ORDER_ITEM, \nUPDATE_ORDER_ITEM_METADATA \n} from \"./queries/MutationOrderItem\"\n\n// ui \nimport { TextField, Button } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport sass from './sass/composition.module.sass'\n\nimport OrderItemActions from './OrderItemActions'\n\n\nconst Input = withStyles({\n  root: {\n  }\n})((props) => \n  <TextField \n    size='small' \n    autoComplete='off'\n    InputProps={{ disableUnderline: true }}\n    {...props} \n  />);\n\nconst initialState = {\n    name: '',\n    fullName: '',\n    quantity: '',\n    id: null,\n}\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'name': \n        case 'fullName':\n        case 'quantity':\n            return {...state, [action.type]: action.payload };\n\n        case 'reset':\n            return initialState\n        \n        case 'editItem':\n            return {\n                id: action.payload[0],\n                name: action.payload[1],\n                fullName: action.payload[2],\n                quantity: action.payload[3]\n            }\n        default: \n            return {...state}\n    }\n\n}\n\nconst OrderComposition = ({ data, editState, refetch, orderID }) => {\n    const [ deleteOrderItemMutation ]         = useMutation(DELETE_ORDER_ITEM)\n    const [ insertOrderItemMutation ]         = useMutation(INSERT_ORDER_ITEM);\n    const [ updateOrderItemMutation ]         = useMutation(UPDATE_ORDER_ITEM);\n    const [ updateOrderItemMetadataMutation ] = useMutation(UPDATE_ORDER_ITEM_METADATA);\n    const [state, dispatch ] = useReducer(reducer, initialState)\n    \n    const deleteItemHandler = (itemID) => {\n        deleteOrderItemMutation({ variables: { orderItemID: itemID} })\n        refetch()    \n    }\n    const editItemHandler = (e, item) => {\n        dispatch({ type: 'editItem', payload: [item.OrderItemID, item.Name, item.FullName, item.Quantity] })\n\n        // deleteItem(item.OrderItemID)\n    }\n\n    useEffect(() => {\n        if (!editState && state.name !== '' && state.quantity !== ''){\n            insertOrderItem()\n        }\n\n    }, [editState]);\n\n    const insertOrderItem = () => {\n        if (state.quantity === '' || state.name === '') return null\n\n        insertOrderItemMutation({variables: { \n            orderID,\n            name: state.name, \n            quantity: parseInt(state.quantity),\n            fullName: state.fullName, }}).then( \n                () => {\n                    dispatch({ type: 'reset'})\n                    refetch() \n                })    \n    }\n\n    const updateOrderItem = () => {\n      if (state.quantity === '' || state.name === '') return null\n      updateOrderItemMutation({variables: { \n          OrderItemID: state.id,\n          Name: state.name, \n          Quantity: parseInt(state.quantity),\n          FullName: state.fullName, }}).then( () => { dispatch({ type: 'reset'}); refetch() })    \n  }\n  \n    const addItemForm = () => {\n      if (!editState) return null\n      return(\n        <div className={sass.addOrderItem}>\n            <Input\n                label=\"Наименование\"\n                value={state.name}\n                onChange={ (e) => dispatch({ type: 'name', payload: e.target.value }) }\n              />\n           <Input\n                label=\"Полное наименование\"\n                multiline\n                className={sass.fullNameInput}\n                value={state.fullName}\n                onChange= { (e) => dispatch({ type: 'fullName', payload: e.target.value }) }\n                />\n            <Input\n                label=\"Кол-во\"\n                type=\"number\"\n                className={sass.quantityInput}\n                value={state.quantity}\n                onChange={ (e) => dispatch({ type: 'quantity', payload: e.target.value }) }\n               />\n\n              {!state.id \n              ? <Button className={sass.pushOrderItemButton} onClick={insertOrderItem}>Добавить</Button> \n              : <Button className={sass.pushOrderItemButton} onClick={updateOrderItem}>Изменить</Button> }\n        </div>\n        )\n      }\n\n    return(<>     \n        {data.map( (el, index) => \n        \n        <div\n          key={el.OrderItemID}\n          className={sass.Unit} \n        >\n              <span className={sass.index}>{index+1}</span>\n              <div className={sass.name}> {el.Name} </div>\n              <span  className={sass.quantity}> {el.Quantity}</span>\n              <OrderItemActions \n                  editState={editState} \n                  item={el}\n                  editItemHandler={editItemHandler}\n                  deleteItemHandler={deleteItemHandler}\n                  updateItem={updateOrderItemMetadataMutation}\n              />\n\n              <div  className={sass.fullName}> { el.FullName }</div>\n\n        </div>\n        )}\n        \n      {addItemForm()}\n    </>)\n}\n\nexport default OrderComposition","import {gql} from 'graphql-tag'; \n\nexport const UPDATE_ORDER_INFO = gql`\n mutation MyMutation($orderID: Int!, $fields: erp_Orders_set_input) {\n  update_erp_Orders_by_pk(pk_columns: {OrderID: $orderID}, _set: $fields) {\n\t\tOrderID\n  }\n}\n`;\n\nexport const UPDATE_AWAITING_DISPATCH = gql`\n mutation MyMutation($orderID: Int!, $awaitingDispatch: Boolean!) {\n  update_erp_Orders_by_pk(\n    pk_columns: {OrderID: $orderID},\n   _set: { AwaitingDispatch: $awaitingDispatch }\n  ) {\n\t\tOrderID\n    AwaitingDispatch\n  }\n}\n`;\n\nexport const UPDATE_ORDER_STATUS = gql`\n  mutation MyMutation($OrderID: Int!) {\n    update_erp_Orders_by_pk(pk_columns: {OrderID: $OrderID}, _set: {OrderStatusID: 3, AwaitingDispatch: false}){\n      OrderID\n      OrderStatusID\n    }\n  }\n`;","import { useState } from 'react'\nimport sass from './shipment.module.sass'\nimport { CornerDialog, Button, Checkbox } from 'evergreen-ui'\nimport { useMutation } from \"@apollo/client\"\nimport { useHistory } from \"react-router-dom\";\n\nimport { \n  UPDATE_AWAITING_DISPATCH,\n  UPDATE_ORDER_STATUS } from '../queries/MutationOrderInfo'\n\nconst Shipment = (props) => {\n  const { data, orderID } = props\n  const [isShown, setIsShown] = useState(false)\n  const history = useHistory();\n  const [mutateAwaitingDispatch] = useMutation(UPDATE_AWAITING_DISPATCH);\n  const [mutateOrderStatus] = useMutation(UPDATE_ORDER_STATUS);\n\n  \n\n  function awaitingDispatchHandler(){\n    mutateAwaitingDispatch({\n      variables: {orderID, awaitingDispatch: !data.AwaitingDispatch },\n      optimisticResponse: {\n          erp_Orders: {\n            __typename: 'erp_Orders',\n            OrderID: orderID,\n            AwaitingDispatch: !data.AwaitingDispatch\n          }\n        }\n    })\n  }\n  async function TransferOrder(){\n    mutateOrderStatus({ variables: { OrderID: orderID }}).then(\n      (res) =>{\n        if (res.data.update_erp_Orders_by_pk.OrderStatusID === 3){\n          history.push(\"/\")\n        }\n      }\n    )\n  }\n\n  if (data.OrderStatusID !== 2) return null\n  return (\n    <div>\n        <CornerDialog\n          title=\"Перенести в архив?\"\n          isShown={isShown}\n          confirmLabel='Перенести'\n          onConfirm={TransferOrder}\n          cancelLabel='Не нужно'\n          onCloseComplete={() => setIsShown(false)}\n        >\n          Заказ удалится из очередности, но его в любое время можно будет найти в архиве по номеру счета, юрлицу, маркировке привода.\n        </CornerDialog>\n        <Checkbox className={sass.checkbox} label=\"Ожидает отгрузки\" onChange={awaitingDispatchHandler} checked={data.AwaitingDispatch}/>\n        <Button onClick={() => setIsShown(true)} className={sass.btn} appearance=\"primary\">Отгружен</Button>\n    </div>\n  )\n}\nexport default Shipment","import { UilHistoryAlt} from \"@iconscout/react-unicons\";\nimport  moment  from 'moment'\nimport \"./sass/order-meta.sass\";\n\nimport Shipment from \"./Shipment/Shipment\";\n\nconst OrderMeta = (props) => {\n   const { data } = props;\n    \n    const setPaidPercent = (total, paid) => {\n        if (!total || !paid) return ''\n        return ' - ' + ((paid/total) * 100).toFixed(0) + '%'\n    }\n    const cells = [\n      {\n        'heading': \"План. отгрузка\",\n        'data': data.ShippingDate &&  moment(data.ShippingDate).format('DD.MM.YY'),\n        'className': 'bold',\n      },\n      {\n        'heading': \"Счет / оплата\",\n        'data': <div> {\"№ \"+ data.InvoiceNumber+setPaidPercent(data.TotalAmount, data.PaidAmount)}\n                  <span className=\"PaymentHistory\">\n                    <UilHistoryAlt />\n                  </span> \n              </div>,\n        'className': 'bold',\n      },\n      {\n        'heading': \"Номер заказа\",\n        'data': data.OrderNumber,\n      },\n      {\n        'heading': \"Менеджер\",\n        'data': `${data.User?.FirstName} ${data.User?.LastName || 'undefined'}`,\n      },\n      {\n        'heading': \"Юр Лицо\",\n        'data': data.Entity,\n      },\n      {\n        'heading': \"Город\",\n        'data': data.City,\n      },\n      {\n        'heading': \"Создан\",\n        'data': data.CreatingDate.split('T')[0],\n      },\n      {\n        'heading': \"В очередности с\",\n        'data': data.AcceptanceDate?.split('T')[0],\n      },\n\n      {\n        'heading': \"\",\n        'data': data.Comment,\n        'className': 'OrderComment',\n      },      \n    ]\n\n    const orderInfo = cells.map( (el) =>  \n      <div key={el.heading} className={el.className}>\n        <pre>{el.heading}</pre>\n        {el.data}\n      </div>\n    )\n   \n  return (\n    <div className='posRel'>\n      <div className=\"wrap\">\n        {orderInfo}\n      </div>\n      <div className=\"actions\">\n        <Shipment {...props} />\n      </div>\n    </div>  \n  )\n}\n\nexport default OrderMeta\n","import { useEffect } from 'react';\nimport {TextField} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport './EditableInfo.sass'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ORDER_INFO } from '../queries/MutationOrderInfo'\n\nimport NumberFormat from 'react-number-format';\nimport moment  from 'moment'\n\nlet fields = {}\n\nfunction DateFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      format='##.##.##'\n    />\n  );\n}\n\nfunction MoneyFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      }}\n      prefix={'₽ '}\n      thousandSeparator={true}\n    />\n  );\n}\n\nconst EditableInfo = ({ data, orderID, refetch, users }) => {  \n  \n    const addField = (e) => fields[e.target.name] = e.target.value\n    const [updateOrderInfo] = useMutation(UPDATE_ORDER_INFO);\n  \n    useEffect(() => {\n        fields = {};\n        \n        return () => {\n            console.log('doing mutation for order', orderID, fields)\n            updateOrderInfo({variables: {\n              orderID,\n              fields,\n            }})\n            refetch()\n        };\n    }, []);\n\n    function findSelectedManeger(users, managerID){\n      if (!users) return null\n      const index = users.indexOf(users.find(user => user.UserID === managerID))\n      return users[index]\n    }\n\n  return(\n    <form className=\"Info EditableInfo\">  \n      <div className=\"wrap\">\n       <TextField\n          label=\"План. отгрузка\"\n          name='ShippingDate'\n          defaultValue={moment(data.ShippingDate).format('DD.MM.YY')}\n          onChange={(e) => {\n            e.target.value = moment(e.target.value, \"DD-MM-YY\").format('YYYY-MM-DD')\n            addField(e)\n          }}\n          placeholder=\"dd.mm.yy\"\n          autoComplete=\"off\"\n          InputProps={{\n            inputComponent: DateFormatCustom\n          }}\n        />\n\n        <TextField\n          label=\"Номер счета\"\n          type=\"number\"\n\n          name='InvoiceNumber'\n          defaultValue={data.InvoiceNumber}\n          onChange={addField}\n        />\n\n        <TextField\n          label=\"Номер заказа\"\n          type=\"number\"\n\n          name='OrderNumber'\n          defaultValue={data.OrderNumber}\n          onChange={addField}\n        />\n\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={users}\n          getOptionLabel={(option) => `${option.FirstName} ${option.LastName}`}\n          renderInput={(params) => <TextField {...params} label=\"Менеджер\"/>}\n          defaultValue={() => findSelectedManeger(users, data.ManagerID)}\n          onChange={(event, newValue) => {\n            fields['ManagerID'] = (newValue?.UserID || null)\n          }}\n        />\n\n         <TextField\n          label=\"Юр лицо\"\n          autoComplete=\"off\"\n          name='Entity'\n          defaultValue={data.Entity}\n          onChange={addField}\n        />\n        \n        <TextField\n          label=\"Город\"\n          autoComplete=\"off\"\n          name='City'\n          defaultValue={data.City}\n          onChange={addField}\n        />\n\n         <TextField\n          label=\"Сумма заказа\"\n          name='TotalAmount'\n          defaultValue={data.TotalAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom\n          }}\n          />\n        \n        <TextField\n          label=\"Оплачено\"\n          name='PaidAmount'\n          defaultValue={data.PaidAmount}\n          autoComplete=\"off\"\n          onChange={addField}\n          InputProps={{\n            inputComponent: MoneyFormatCustom\n          }}\n        />\n\n        <TextField\n          label=\"Комментарий\"\n          multiline\n          autoComplete=\"off\"\n          name='Comment'\n          defaultValue={data.Comment}\n          onChange={addField}\n        />\n       </div>\n    </form>\n  )\n}\n\nexport default EditableInfo","import {gql} from 'graphql-tag'; \n\nexport const INSERT_UNIT = gql`\nmutation($OrderID: Int!, $Point: String!) {\n  insert_erp_CheckListUnits_one(\n    object: {OrderID: $OrderID, Point: $Point}){\n      CheckListUnitID\n      Point\n      IsComplited\n    }\n}\n`\n\nexport const UPDATE_UNIT_STATE = gql`\nmutation MyMutation($CheckListUnitID: Int!, $IsCompluted: Boolean!) {\n  update_erp_CheckListUnits_by_pk(\n    pk_columns: {CheckListUnitID: $CheckListUnitID}, _set: {IsComplited: $IsCompluted})\n    {\n    CheckListUnitID\n    IsComplited\n    Point\n    }\n}\n`","import { useMutation } from \"@apollo/client\"\nimport { UPDATE_UNIT_STATE, INSERT_UNIT } from './mutations'\nimport { GET_ORDER_BY_ID } from \"../queries/GetOrderByID\";\n\nimport sass from './index.module.sass'\nimport { motion } from \"framer-motion\"\n\nconst CheckList = ({ data, OrderID }) => {\n    const [insertUnitMutation] = useMutation(INSERT_UNIT, {\n        update(cache, { data }){\n            const existingUnits = cache.readQuery({ query: GET_ORDER_BY_ID, variables: { OrderID } })\n            var newcache = JSON.parse(JSON.stringify(existingUnits))\n            newcache.erp_Orders[0].CheckListUnits.push(data.insert_erp_CheckListUnits_one)\n            cache.writeQuery({\n                query: GET_ORDER_BY_ID,\n                variables: { OrderID },\n                data: newcache\n            })\n        }\n      });\n    const [updateUnitStateMutation] = useMutation(UPDATE_UNIT_STATE);\n\n    function addUnit(e){\n        if (e.keyCode !== 13 || !e.target.value) return null\n        insertUnitMutation({ \n            variables: {\n             OrderID,\n             'Point': e.target.value },\n            optimisticResponse: {\n                insert_erp_CheckListUnits_one: {\n                    __typename: \"erp_CheckListUnits\",\n                    CheckListUnitID: 'temp-id',\n                    Point: e.target.value,\n                    IsComplited: false,\n                    OrderID\n                }\n              }\n        })\n        e.target.value = '';\n    } \n\n    const toggleCheckListUnit = (target, el) => {\n        target.target.classList.toggle('complited')\n        updateUnitStateMutation({ variables: { CheckListUnitID: el.CheckListUnitID, IsCompluted: !el.IsComplited } })\n    }\n\n    const units = data.map(el => \n        <motion.div\n            initial={{ opacity: .3 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: .4}}\n            key={el.CheckListUnitID} \n            className={ el.IsComplited ? \"CheckListUnit complited\" : \"CheckListUnit\"}\n            onClick={ target => toggleCheckListUnit(target, el) }\n            >\n            {el.Point}\n        </motion.div>\n        )\n\n    return(\n        <div className=\"CheckList\">\n            <input \n            className={sass.unitInput} \n            type=\"text\" \n            placeholder='Опишите задачу и нажмите enter' \n            onKeyUp={(e) => addUnit(e) }\n            />\n            {units}\n        </div>\n    )\n}\n\n\nexport default CheckList","import { useContext, useState, useEffect } from 'react';\nimport { Context } from '../../../index'\n\n//apollo\nimport { useMutation } from '@apollo/client';\nimport { DELETE_ORDER_FILE } from '../queries/MutationOrderDocs';\n\nimport './docs.sass'\n\nimport { CornerDialog } from 'evergreen-ui'\n\n\nconst Docs = ({ data, onUpload, editState, refetch }) => {\n    const { store } = useContext(Context)\n    const [open, setOpen] = useState(false);\n    const [fileOnDelete, setFileOnDelete] = useState();\n    const [deleteFileMutation] = useMutation(DELETE_ORDER_FILE)\n\n    const handleClickOpen = (file) => {\n        setFileOnDelete(file)\n        setOpen(true)\n    }\n    \n    const handleClose = () => setOpen(false)\n\n    const onUploadFiles = () => {\n        if (onUpload.length === 0) return null\n        const files = onUpload.map(file => <div key={file.path}>{file.path}</div> )\n\n        return <div className=\"onUploadIcon\">{files}</div>\n    } \n    useEffect(() => {\n        setOpen(false)\n    }, [editState]);\n\n    const deleteFile = async () => {\n        //close modal window\n        handleClose();\n        await store.deleteFile(fileOnDelete.Key, deleteFileMutation)\n        refetch()\n    }\n\n    const attachedFiles = data.map(\n        file => {\n            // delite file\n            if (editState) return(\n                <div key={file.Key}>\n                    <div onClick={ () => handleClickOpen(file)} \n                        className='file-name delete-file'> {file.FileName} </div>\n                </div>\n            )\n             // opne file\n            else return (\n                <a href={`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`}\n                    key={file.Key}\n                    target='_blank'\n                    rel=\"noreferrer\"\n                    className='file-name'> {file.FileName} </a>\n            )\n        })\n     \n    return (        \n        <div className=\"Docs\" >\n            <div className='filesContainer'>\n                {attachedFiles}\n                {onUploadFiles()}\n            </div>\n          \n\n            <div>\n\n                    <CornerDialog\n                        title={fileOnDelete?.FileName}\n                        isShown={open}\n                        confirmLabel='Удалить навсегда'\n                        onConfirm={deleteFile}\n                        cancelLabel='Не нужно'\n                        intent='danger'\n                        onCloseComplete={handleClose}\n                        >\n                        Вы действительно хотите удалить этот файл? <br/>\n                        Это действие необратимо.\n                    </CornerDialog>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Docs","import {gql} from 'graphql-tag'; \n\nexport const INSERT_ORDER_COMMENT = gql`\nmutation($OrderID: Int!, $Text: String!, $UserID: Int!) {\n  insert_erp_Comments_one(\n    object: {OrderID: $OrderID, Text: $Text, UserID: $UserID}) \n    {\n    CommentID\n    OrderID\n    Text\n    Timestamp\n    UserID\n  }\n}\n\n`;\n\nexport const DELETE_ORDER_COMMENT = gql`\n mutation($CommentID: Int!) {\n  delete_erp_Comments_by_pk(CommentID: $CommentID) {\n    CommentID\n  }\n}\n`;\n\nexport const UPDATE_ORDER_COMMENT = gql`\nmutation($CommentID: Int!, $Text: String!, $Timestamp: timestamptz!) {\n  update_erp_Comments_by_pk(\n    pk_columns: {CommentID: $CommentID},\n    _set: {Text: $Text, Timestamp: $Timestamp}) \n    {\n    OrderID\n    Text\n    Timestamp\n    UserID\n    CommentID\n  }\n  }\n`;","import gql from 'graphql-tag'\n\nexport const SUBSCRIBTION_ORDER_COMMENT = gql`\n  subscription MySubscritp($OrderID: Int!) {\n    erp_Comments(where: {OrderID: {_eq: $OrderID}}, order_by: {CommentID: desc}) {\n      CommentID\n      Text\n      Timestamp\n      User {\n        UserID\n        FirstName\n        LastName\n      }\n    }\n  }\n`\n","import sass from './index.module.sass'\nimport moment from 'moment'\nimport { TextField } from '@mui/material/';\n\nconst Comment = (props) => {\n  const { data, userID, updateComment, deleteComment, nowEditing, setNowEditing } = props\n\n  function sender(){\n    if (userID === data.User.UserID) return 'Вы'\n    else return `${data.User.FirstName} ${data.User.LastName}`\n  }\n  function actions(){\n    if (userID === data.User.UserID && nowEditing?.CommentID !== data.CommentID ) return (\n        <div onClick={()=> deleteComment(data.CommentID)}>Удалить</div>\n    )\n  }\n  function timestamp(){\n    const date = moment(data.Timestamp)\n    return date.format('MMM D') +' at '+ date.format('hh:mm')\n  }\n\n  function getCommentContent(){\n    if (userID === data.User.UserID) return <div contentEditable=\"true\"\n    key={data.CommentID}\n    className={sass.commentContent}\n    suppressContentEditableWarning=\"true\"\n    onBlur={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n    }}\n    onMouseLeave={async (e) => {\n      await updateComment(data.CommentID, e.target.innerHTML)\n      setNowEditing(null)\n    }}\n    dangerouslySetInnerHTML={{ __html: data.Text}}></div>\n\n    else return <div>{data.Text}</div>\n\n  }\n\n  return (\n    <div className={sass.commentUnit}>\n\n      <div className={sass.commentHeader}>\n        <div className={sass.sender}> {sender()} </div>\n        <div className={sass.actions}>{actions()}</div>\n        <div className={sass.time}> {timestamp()} </div>\n      </div>\n      {getCommentContent()}\n\n    </div>\n  )\n}\nexport default Comment ","import { useState } from 'react';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { INSERT_ORDER_COMMENT, UPDATE_ORDER_COMMENT, DELETE_ORDER_COMMENT } from '../queries/MutationOrderCommnets'\nimport { SUBSCRIBTION_ORDER_COMMENT } from '../queries/SubscriptionComments'\nimport sass from './index.module.sass'\n\nimport { TextField } from '@mui/material/';\nimport Comment from './Comment'\nconst CommentsList = (props) => {\n  const { orderID, user } = props\n  const [ insertOrderCommentMutation ] = useMutation(INSERT_ORDER_COMMENT);\n  const [ updateOrderCommentMutation ] = useMutation(UPDATE_ORDER_COMMENT);\n  const [ deleteOrderCommentMutation ] = useMutation(DELETE_ORDER_COMMENT);\n  const [state, setState]           = useState('');\n  const [nowEditing, setNowEditing] = useState();\n  const { data = [], loading } = useSubscription(SUBSCRIBTION_ORDER_COMMENT, { variables: { OrderID: orderID }});\n\n  function insertComment(){\n    if (!state) return null\n    insertOrderCommentMutation({ variables: {\n      OrderID: orderID,\n      UserID: user.UserID,\n      Text: state\n      }\n    })\n    setState('')\n  }\n\n  function updateComment(id, newText){\n    updateOrderCommentMutation({ variables: {\n      CommentID: id,\n      Text: newText,\n      Timestamp: new Date()\n    }})\n  }\n\n  function deleteComment(id){\n    deleteOrderCommentMutation({ variables: {\n      CommentID: id\n    }\n  })\n  }\n  \n  return(\n    <div className={sass.commentsListWrapper}>\n     <div className={sass.commentInputForm}>\n     <TextField\n        variant='standard'\n        placeholder='Введите комментарий' \n        className={sass.commentInput}\n        multiline\n        fullWidth\n        size='small'\n        autoComplete=\"off\"\n        InputProps={{ disableUnderline: true }}\n        value={state}\n        onChange={(e) => setState(e.target.value) }\n        />\n      {state &&\n      <div \n      onClick={insertComment} \n      className={sass.saveButton}>\n        Сохранить\n      </div>\n      }\n    </div>\n\n     {!loading && data.erp_Comments.map( (data) => <Comment \n      data={data} \n      key={data.CommentID}\n      userID={user.UserID}\n      deleteComment={deleteComment}\n      updateComment={updateComment}\n      nowEditing={nowEditing}\n      setNowEditing={setNowEditing}\n      />)}\n    </div>\n  )\n}\n\nexport default CommentsList","import { UilCloudUpload } from '@iconscout/react-unicons'\n\nexport const isFileOnDropzone = (isDragActive) => {\n    var el = document.getElementById('dropzone')\n\n    if (isDragActive){\n        el.classList.add('isDragAccept')\n        return (\n            <div >\n             <UilCloudUpload className='inCloudconIcon'/>\n         </div>\n        )\n    } else el?.classList?.remove('isDragAccept')\n}","import { useContext, useCallback, useState } from \"react\";\nimport { Context } from \"../..\";\nimport {useDropzone} from 'react-dropzone'\nimport { useParams, useLocation } from \"react-router-dom\"\n\n//apollo\nimport { GET_USERS } from '../../hasura-queries/getUsers';\nimport { GET_ORDER_BY_ID } from './queries/GetOrderByID'\nimport { PUSH_DOCS_ARRAY } from './queries/MutationOrderDocs'\nimport { useMutation, useQuery } from \"@apollo/client\";\n\n//components\nimport ActionsHeader from \"../BaseHeader/ActionsHeader\";\nimport Composition from \"./Composition\";\nimport Info from \"./Info\";\nimport EditableInfo from \"./EditableComponents/EditableInfo\";\nimport CheckList from './CheckList/CheckList';\nimport Docs from './Docs/Docs';\nimport CommentsList from \"./Comments/CommentsList\";\nimport { isFileOnDropzone } from \"./Dropzone\";\n\n//ui\nimport { Heading } from 'evergreen-ui';\nimport './sass/index.sass';\n\nfunction orderStatus(data){\n    // add a note to the title if this is a pre-order\n    if (data.OrderStatusID === 1) return ' | Предзаказ';\n    if (data.OrderStatusID === 3) return ' | В архиве';\n}\n\nconst OrderLayout = (props) => {\n    const {store} = useContext(Context);\n    const [onUploadFiles, setOnUploadFiles] = useState([])\n\n    const editStateQueryArg = new URLSearchParams(useLocation().search).get('edit')\n    const [editState, setEditState] = useState(editStateQueryArg)\n    const [pushDocs] = useMutation(PUSH_DOCS_ARRAY);\n    const orderID = useParams().id\n\n    const S3Upload = useCallback(acceptedFiles => {\n        setOnUploadFiles(acceptedFiles)\n\n        store.uploadFile(acceptedFiles).then(\n            (res) => {\n                if (res.status !== 200) console.log('S3 file upload error')\n                else{\n                    let m = []\n                    for (var i=0;  i<res.data.length; i=i+2 ){\n                        m.push({\n                            'Key': res.data[i].key,\n                            'OrderID': orderID,\n                            'FileName': res.data[i].originalname,\n                        })\n                    }\n                    pushDocs({ variables: {'objects': m} })\n                } \n                setOnUploadFiles([])\n                refetch();\n                }\n            \n        )\n      }, [])\n\n    const { data = [], refetch } = useQuery(GET_ORDER_BY_ID, { variables: { OrderID: orderID} });\n    const { data: users = []} = useQuery(GET_USERS);\n    const {getRootProps, isDragActive} = useDropzone({className: 'dropzone', onDrop: S3Upload });\n      \n    return(\n    <div> \n        {isFileOnDropzone(isDragActive)}\n        { data.erp_Orders ? (<>\n        <section className='OrderLayout' {...getRootProps()} id='dropzone'>\n\n                <div className='LeftSideContent'>\n\n                    <div className=\"page-header\">\n                        <Heading>\n                            {data.erp_Orders[0].Entity} __ {data.erp_Orders[0].City} \n                            <span className=\"preorderTitle\">{orderStatus(data.erp_Orders[0])}</span>\n                        </Heading>\n\n                        <ActionsHeader \n                        accessLevel = {2} \n                        setEditState = {setEditState} \n                        editState = {editState} />\n                        \n                    </div>\n\n                    <div className=\"Composition\">  \n                      <Composition \n                          data={data.erp_Orders[0].OrderItems} \n                          editState={editState}\n                          refetch={refetch}\n                          orderID= {orderID} /> \n                    </div>\n\n                    <CommentsList \n                    orderID={orderID} \n                    user={store.user} \n                    data={data.erp_Orders[0].Comments}/> \n\n                    <Docs data={data.erp_Orders[0].Docs} \n                    onUpload={onUploadFiles} \n                    editState = {editState} \n                    refetch={refetch} />\n\n                    <CheckList data={data.erp_Orders[0].CheckListUnits} OrderID={orderID} />\n                     \n                </div>\n                <div className=\"Info\">\n                  {editState? <EditableInfo data={data.erp_Orders[0]} orderID={orderID} refetch={refetch} users={users.erp_Users} /> : (\n                              <Info data={data.erp_Orders[0]} editState = {editState} orderID={orderID} />)}\n                </div>\n        </section> \n\n        </>): null }\n\n    </div>\n    )\n}\n\nexport default OrderLayout","import gql from 'graphql-tag'; \n\nexport const GET_USERS = gql`\nquery MyQuery($gte: timestamp!, $lte: timestamp!) {\n  attendance_users_aggregate(\n    order_by: {lastname: asc}\n    ){\n    nodes {\n      id\n      card\n      firstname\n      lastname\n      intervalsPools(where: {entrance: {_gte: $gte,  _lte: $lte}}) {\n        entrance\n        exit\n        card\n        interval\n        status\n      }\n    }\n  }\n}  \n`\n\n\n","\nexport function daysInMonth (selectedMonth) {\n    // количество дней в текущем месяце\n      const [month, year] = selectedMonth\n      return new Date(year, month+1, 0).getDate();\n}\n\n\n  \n\n\nexport function getVarsForSubscription(selectedMonth){\n  const [month, year] = selectedMonth\n  // +1 because in js mounths start since 0, whereas hasura timestamp starts 1\n  var a = (parseInt(month)+1).toString()\n\n  // this expression add zero to mothh if minth.length < 2 ( 5 > 05 )\n  const m = a.replace(/(^|\\D)(\\d)(?!\\d)/g, '$10$2')\n\n  const gte = year+ \"-\"+ m +\"-01T00:00:00\";\n  const lte = year+ \"-\"+ m +\"-\" +daysInMonth(selectedMonth)+ \"T23:59:59\";\n  return {gte, lte}\n}","import { useTable } from 'react-table'\nimport { daysInMonth } from './functions'\nimport sass from './attendance.module.sass'\n\n\nexport function generateColumns(selectedMonth, timeDeduction){\n  let columnsList = [\n      {\n      Header: 'Сотрудник',\n      accessor: data =>\n      <div>\n        <span>{data.lastname} </span>\n        <span>{data.firstname} </span>\n      </div>\n    }, \n    {\n      Header: 'Итого',\n      Cell: row => {\n        var hours = 0;\n        const intervals = row.row.original.intervalsPools\n        intervals.forEach( interval => {\n          hours += interval.interval \n        });\n\n        //вычетаем время на обед\n        hours -= timeDeduction/60 * intervals.length\n\n        return <div>{hours.toFixed(0)}</div>\n      }\n    }\n  ]\n\n  for (var day=1; day<= daysInMonth(selectedMonth); day++){\n    columnsList.push({\n      Header: day.toString(),\n      Cell: row => {\n        const day1 = row.column.Header\n\n        const [entrance, exit, interval, status] = getIntervalData(day1, row.row.original.intervalsPools, timeDeduction)\n        \n        return (\n          <div className={\"status-\"+ status}> \n            <div>{ entrance }</div> \n            <div>{ exit }</div>\n            <div className={sass.interval}>{ interval }</div>\n          \n          </div>\n        )\n      }\n    })\n  }\n  return columnsList\n}\n\n\n\nfunction getIntervalData(day, intervals, timeDeduction){\n\n    // конвертация float в часы и минуты\n    function convertInterval(number, timeDeduction){\n        //вычетаем время на обед\n        number -= timeDeduction/60\n\n        var hour = Math.floor(number);\n        var decpart = number - hour;\n        var min = 1 / 60;\n\n        // Round to nearest minute\n        decpart = min * Math.round(decpart / min);\n        var minute = Math.floor(decpart * 60) + '';\n\n        // Add padding if need\n        if (minute.length < 2) {\n            minute = '0' + minute; \n        }\n\n        return hour + ':' + minute;\n    }\n\n    function getMinutes(t){\n        const minutes = t.getMinutes()\n        return (minutes < 10) ? `0${minutes}` : minutes\n    }\n\n    const e = intervals.find(el =>  new Date(el.entrance).getDate() == day)\n\n    if (e) {\n        const _entr = new Date(e.entrance)\n        const _exit = new Date(e.exit)\n\n        const entrance = _entr.getHours()+':'+ getMinutes(_entr)\n        const exit = _exit.getHours()+':'+ getMinutes(_exit)\n        const interval = convertInterval(e.interval, timeDeduction)\n\n        return [entrance, exit, interval, e.status]\n    }   else return [null, null, null, null]\n}\n\nexport default function Table({columns, data, className}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n\n\n   return (\n     <>\n    <table className={className} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, i) => (\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, i) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </>\n  )\n}\n\n\n","\nfunction monthAdd(date, month) {\n    // функция используется для корректного вычитания месяцев в chooseMonth\n    var temp = date;\n    temp = new Date(date.getFullYear(), date.getMonth(), 1);\n    temp.setMonth(temp.getMonth() + (month + 1));\n    temp.setDate(temp.getDate() - 1); \n  \n    if (date.getDate() < temp.getDate()) { \n        temp.setDate(date.getDate()); \n    }\n    return temp;    \n  }\n\nconst ReportConfigurator = ({ state, dispatch }) => {\n    const date = new Date()\n    const months = [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\n\n    const selectedMonthHandler = (e) => {\n        const d = new Date(e.target.attributes.date.value)\n        dispatch({type: 'selectedMonth', payload: [d.getMonth(), d.getFullYear()] })\n    }\n\n    const timeDeductionHandler = (e) => {\n        dispatch({\n            type: 'timeDeduction',\n            payload: parseInt(e.target.value.trim())\n        })\n    }\n\n    const chooseMonth = () => {\n        const m = []\n        \n        for (var i=0; i< 6; i++) {\n            const suitable = monthAdd(date, -i)\n            m.push(\n                <div onClick={selectedMonthHandler} \n                    className={suitable.getMonth() == state.selectedMonth[0] ? 'active' : ''}\n                    date={suitable}> {months[suitable.getMonth()]} </div>\n                )\n        } \n        return <div className=\"chooseMonth\">{m}</div>\n    }\n\n    return (\n        <div className=\"reportConfigurator\">\n        {chooseMonth()}\n        \n        <div className=\"arguments\">\n            <div className=\"wrap\">\n                <span>обед</span>\n                <input type='text' defaultValue={state.timeDeduction} onChange={timeDeductionHandler}/>\n                <span>мин</span>\n            </div>\n            \n            {/* <div className=\"wrap\">\n                <span>норма</span>\n                <input type='text' defaultValue={state.timeDeduction}/>\n                <span>ч</span>\n            </div> */}\n        </div>\n    </div>\n    )\n}\n\nexport default ReportConfigurator","import { Heading } from 'evergreen-ui';\n\n\nconst BaseHeader = (props) => {\n\n    return(\n           <div className=\"page-header\">\n                    <span>{props.pageParams.icon}</span>\n                    <Heading>{props.pageParams.title}</Heading>                    \n                    {props.children}\n            </div>\n    )\n}\n\nexport default BaseHeader","\nimport  { useContext, useMemo, useEffect, useReducer } from 'react'\nimport { Context } from '../../index'\n\n//apollo\nimport { useQuery } from '@apollo/client'\nimport { GET_USERS } from './queries/getUsers' \n\n\nimport Table, { generateColumns } from './table'\nimport { getVarsForSubscription } from './functions'\n\n\nimport './index.sass'\nimport ReportConfigurator from './ReportConfigurator'\nimport BaseHeader from '../BaseHeader'\nimport { UilSearch } from '@iconscout/react-unicons'\n\nimport sass from './attendance.module.sass'\n\nvar attendanceData = null;\n// учет рабочего времени\nconst Attendance = props => {\n    const date = new Date()\n    const { store } = useContext(Context);\n\n    function reducer(state, action) {\n        switch (action.type) {\n\n          case 'selectedMonth':\n            return {...state, [action.type]: action.payload,};\n\n          case 'timeDeduction':\n            return {...state, [action.type]: action.payload };\n\n          case 'filtredData':\n            return { ...state, [action.type]: action.payload};\n\n          default:\n            throw new Error();\n        }\n      }\n\n    const [state, dispatch] = useReducer(reducer, {\n        timeDeduction: 30,\n        selectedMonth: [date.getMonth()-1, date.getFullYear()],\n    });\n    const { timeDeduction, selectedMonth, filtredData } = state;\n\n\n    const { gte, lte } = getVarsForSubscription(selectedMonth)\n    const { loading } = useQuery(GET_USERS, { variables: { gte, lte }, onCompleted: (options) => {\n        attendanceData = options.attendance_users_aggregate.nodes;\n        dispatch({ type: 'filtredData', payload: attendanceData})\n    } });\n    \n    useEffect(() => {\n        return () => {\n            attendanceData = null\n        };\n    }, []);\n\n    function filteringAlg(user, keyword){\n        if (user.lastname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else if (user.firstname.toLowerCase().startsWith(keyword.toLowerCase())) return true\n        else return false\n    }\n\n    const onChangeSearch = (e) => {\n        const keyword = e.target.value.trim();\n\n            if (keyword !== '') {\n              const result = attendanceData.filter((user) => filteringAlg(user, keyword))\n              dispatch({ type: 'filtredData', payload: result })\n            } else dispatch({ type: 'filtredData', payload: attendanceData})\n    }\n\n    const columns = useMemo(\n        () => generateColumns(selectedMonth, timeDeduction), [selectedMonth, timeDeduction]\n    )\n\n    return(\n    <div className={sass.attendanceLayout}>\n            <BaseHeader pageParams = { store.getPageParams(window.location.pathname) } search={onChangeSearch} /> \n            <ReportConfigurator state={state} dispatch={dispatch} />\n\n        <div className={sass.tableWrapper}>\n\n            <div className={sass.tableSearchInput}>\n                <UilSearch/>\n                <input type='text' placeholder=\"поиск (номер счета или организация)\" onChange={ (e) => onChangeSearch(e) } autoFocus/>\n            </div>\n            \n            {filtredData && columns && <Table columns = {columns} data = {filtredData} className={sass.attendanceTable} /> }\n\n             {/* условное обозначение */}\n             <div className={`${sass.tableFooter} legend`}>\n                <div className=\"status-101\">Прерванный рабочий день</div>\n                <div className=\"status-102\">Не отмечен конец смены</div>\n                <span className=\"reportMeta\">\n                    Отчет за {selectedMonth[0] + 1} месяц {selectedMonth[1]} года \n                </span>\n\n            </div>\n\n        </div>\n    </div>\n    )\n}\n\nexport default Attendance","import { Button } from 'evergreen-ui'\nimport sass from './index.module.sass'\n\nconst Reclamation = (props) => {\n\n    return(\n        <div></div>\n        \n    )\n}\nexport default Reclamation","import {Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport LoginForm from '../components/LoginForm';\nimport OrderListLayout from \"../components/OrderListLayout\";\nimport OrderLayout from \"../components/OrderLayout\";\nimport Attendance from '../components/AttendanceLayout'\nimport Reclamation from \"../components/ReclamationLayout\";\n\nconst AppRouter = () => {\n    return(\n        <Switch>\n            <Route        path=\"/login\" component={LoginForm}/>\n            <PrivateRoute exact path='/' component={OrderListLayout}/>\n            <PrivateRoute path='/attendance' component={Attendance}/>\n            <PrivateRoute path='/reclamation' component={Reclamation}/>\n            <PrivateRoute path='/orders/:id' component={OrderLayout}/>\n\n            #if required route was not found\n            <Redirect     to=\"/\" />\n            {/* <PrivateRoute path='/recently' component={() => <PriorityLayout props={isRecently}/>} store={props.store}/> */}\n        </Switch>\n    )\n};\n\nexport default AppRouter;","import AppRouter from '../../routers/Router';\n\nconst BaseLayout = (props) => {\n    return(\n        <div className=\"base-container\">\n                <AppRouter/> \n                {props.children}\n        </div>\n    )\n}   \n\nexport default BaseLayout;","import { useEffect, useState } from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DARK_CLASS = \"dark\";\n\nfunction getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport const SystemPreferTheme = () => {\n    const systemPrefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\"}, undefined);\n    const [theme, setTheme] = useState(() => getCookie('theme'));\n\n    function changeTheme(newTheme){\n        var expires = new Date()\n        expires.setFullYear(expires.getFullYear()+1)\n        document.cookie = `theme=${newTheme}; expires=${expires}; path=/`\n        setTheme(newTheme)\n    }\n\n    useEffect(() => {\n      if (theme === 'dark') document.documentElement.classList.add(DARK_CLASS)\n      else if (theme === 'light') document.documentElement.classList.remove(DARK_CLASS)\n\n      else if (theme === 'system'){\n        if (systemPrefersDark) document.documentElement.classList.add(DARK_CLASS)\n        else document.documentElement.classList.remove(DARK_CLASS)\n      }\n    }, [theme, systemPrefersDark]);\n\n    return [theme, changeTheme]\n};","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../../../index';\nimport { useHistory } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { styled } from '@mui/material/styles';\n\nimport { UilSun, UilMoon, UilDesktop, UilSetting } from '@iconscout/react-unicons'\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n  Divider\n} from '@mui/material/';\n\nimport sass from './index.module.sass'\nimport { SystemPreferTheme } from '../../_core/SystemPreferTheme';\n\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    border: '1px solid var(--border)',\n    padding: 8,\n    textTransform: 'none',\n    '&:not(:first-of-type)': {\n\n    },\n    '&:first-of-type': {\n      borderTopLeftRadius: 'var(--br)',\n      borderBottomLeftRadius: 'var(--br)',\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 'var(--br)',\n      borderBottomRightRadius: 'var(--br)',\n    },\n  },\n}));\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function SettingsDrawer() {\n  const {store} = useContext(Context);\n  const [state, setState] = useState(false);\n  const history = useHistory()\n  const [theme, changeTheme] = SystemPreferTheme()\n\n  async function logout(){\n    await store.logout(); \n    history.push('/login')\n  }\n\n  const themeHandler = (event, newTheme) => {\n    changeTheme(newTheme);\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setState(open);\n  };\n  \n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 400 }}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(false)}\n    >\n\n      <List>\n        <ListItem className={sass.user}>\n        <div>Добро пожаловать, {store.user.FirstName} {store.user.LastName}!</div>\n        </ListItem>\n\n        <ListItem >\n          <StyledToggleButtonGroup\n            className={sass.themeToggleButtons}\n            color=\"primary\"\n            value={getCookie('theme')}\n            exclusive\n            fullWidth\n            onChange={themeHandler}\n            >\n            <ToggleButton value=\"light\"> <UilSun/> Light</ToggleButton>\n            <ToggleButton value=\"system\"> <UilDesktop/>System</ToggleButton>\n            <ToggleButton value=\"dark\"> <UilMoon/> Dark</ToggleButton>\n          </StyledToggleButtonGroup>\n        </ListItem>\n\n      </List>\n      \n      <div className={sass.logoutButton}>\n        <button onClick={logout}>Выйти</button>\n      </div>\n    </Box>\n  );\n\n  return (\n    <div>\n          <div onClick={toggleDrawer(true)}>\n            <UilSetting/>\n          </div>\n          <Drawer\n            open={state}\n            onClose={toggleDrawer(false)}\n          >\n            {list('left')}\n          </Drawer>\n    </div>\n  );\n}","// import { observer } from 'mobx-react-lite';\nimport { useContext } from 'react';\nimport { NavLink} from 'react-router-dom';\nimport { Context } from '../../index';\nimport './index.sass';\n\nimport { UilSortAmountDown, UilWrench, UilConstructor} from '@iconscout/react-unicons';\nimport SettingsDrawer from './SettingsDrawer/SettingsDrawer';\n\nconst Sidebar = () => {\n    const {store} = useContext(Context);\n    return(\n        <div className='Sidebar'>\n\n            <NavLink  exact  to='/' activeClassName='sidebar-active' className=\"action-icon\"><UilSortAmountDown/></NavLink>\n            <NavLink  to='/reclamation' activeClassName='sidebar-active' className=\"action-icon\"><UilWrench/></NavLink>\n            <NavLink  to='/attendance' activeClassName='sidebar-active' className=\"action-icon\"><UilConstructor/></NavLink>\n                \n            <div className=\"action-icon settings\">\n                <SettingsDrawer/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Sidebar;","import { useContext } from 'react';\nimport { Context } from './index';\n\n// import ReactTooltip from 'react-tooltip';\nimport {observer} from 'mobx-react-lite';\n\nimport BaseLayout from './components/BaseLayout';\nimport Sidebar from './components/Sidebar/Sidebar';\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst darkTheme = createTheme({\n});\n\ndarkTheme.overrides = {\n  MuiInputLabel: {\n    root: {\n      color: 'var(--lowContrast)',\n      fontSize: '.8rem',\n    },\n  },\n  MuiOutlinedInput: {\n    notchedOutline: {\n      borderColor: 'var(--border)',\n    },\n    focused:{\n      borderColor: 'var(--border) !important',\n    }\n  },\n  MuiInputBase: {\n    root: {\n      borderBottom: 'none',\n      color: 'var(--highContrast)',\n      '&::before': {\n        borderColor: 'var(--border) !important',\n      }\n    },\n  },\n  MuiIconButton:{\n    root: {\n      color: 'var(--lowContrast)',\n      opacity: .5\n    }\n  },\n  MuiAutocomplete: {\n    paper: {\n      background: 'var(--L0) !important',\n      border: '1px solid var(--border)',\n    },\n    listbox: {\n      color: 'var(--highContrast)',\n      fontSize: '.8rem',\n    },\n  },\n}\n\n\nfunction App() {  \n  const { store } = useContext(Context);\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        \n        { store.inMemoryToken && <Sidebar/> }\n\n          <BaseLayout/>\n        \n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/api'\nexport const S3_URL = process.env.REACT_APP_API_URL || 'http://localhost:9000/s3/upload'\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n});\n\n// $api.interceptors.request.use( (config) => {\n//     config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n//     return config;\n// })\n// $api.interceptors.response.use( (config) => {\n//     return config;\n// }, async (error) => {\n//     const originalRequest = error.config;\n//     if(error.response.status === 401 && error.config && !error.config._isRetry){\n//         originalRequest._isRetry = true;\n//         try {\n//             const response =  await axios.get(`${API_URL}/refresh`, {withCredentials: true});\n//             localStorage.setItem('token', response.data.accessToken);\n//             return $api.request(originalRequest);\n//         } catch (e) {\n//             console.log('Авторизация не прошла. Попробуйте снова');\n//         }\n//     }\n       \n// })\n\nexport default $api;","import $api from \"../http\";\n\nexport default class AuthService {\n    \n    static async login(email, password){\n        return $api.post('/login',  { email, password })\n    }\n\n    static async logout(){\n        return $api.post('/logout')\n    }\n\n}","\nimport {makeAutoObservable} from 'mobx';\nimport {Pane, Spinner} from 'evergreen-ui';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from '../http';\nimport { UilWrench, UilConstructor} from '@iconscout/react-unicons';\n\nexport default class Store {\n    user = {};\n    isLoading = false;\n    inMemoryToken = undefined;\n\n    priorityTab = 1;\n\n    cachedOrders = [];\n    cachedPreOrders = [];\n\n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool){\n        this.isAuth = bool;\n    }\n\n    setUser(user){\n        this.user = user;\n    }\n\n    setLoading(bool){\n        this.isLoading = bool;\n    }\n\n    setInMemoryToken(token){\n        this.inMemoryToken = token\n    }\n    setPriorutyTab(number){\n        this.priorityTab = number\n    }\n\n    setCachedOrders(array){\n        this.cachedOrders = array\n    }\n    setCachedPreOrders(array){\n        this.cachedPreOrders = array\n    }\n\n    async login(email, password){\n        try {\n            const res = await AuthService.login(email, password)\n            if (res.status === 200){\n              this.setInMemoryToken(res.data.accessToken)\n              this.setUser(res.data.user);\n              return res\n            }\n            \n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async logout(){\n        try {\n            await AuthService.logout();\n            this.setInMemoryToken(null)\n            this.setUser({});\n        } catch (e) {\n            console.log(e.response?.data?.message);\n            \n        }\n    }\n\n    async getNewToken(){\n        return axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n            (r) => {\n                this.setInMemoryToken(r.data.accessToken)\n                return r.data.accessToken\n            }\n        );\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            await axios.get(`${API_URL}/refresh`, {withCredentials: true}).then(\n              (res) => {\n                if (res.status === 200){\n                  console.log(res)\n                  this.setUser(res.data.user);\n                  this.setInMemoryToken(res.data.accessToken)      \n                  console.log('token validation complited')  \n                }\n              }\n            )\n        } catch (e) {\n            console.log(e)\n        } finally {\n            this.setLoading(false);\n            return this.inMemoryToken\n        }\n    }\n\n    async uploadFile(acceptedFiles){\n        const formData = new FormData()\n        acceptedFiles.map(file => formData.append('files', file))\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/s3/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            }\n          });\n        return res\n    }\n\n    async downloadFile(file){\n        await fetch(`${process.env.REACT_APP_API_URL}/s3/get/${file.Key}`)\n    }\n\n    async deleteFile(key, deleteFileMutation){\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/s3/delete/${key}`);\n\n        if (res.status === 200){\n            const hasuraRes = await deleteFileMutation({variables: {\n                'key': key,\n            }})\n            console.log(hasuraRes.data)\n        }\n        // if (res.status != 200) console.log('error during deleting file from S3', res)\n    }\n\n    pageParams = [\n        {\n            'url' : '/reclamation',\n            'icon': <UilWrench/>,\n            'title': 'Рекламация',\n        },\n        {\n            'url' : '/attendance',\n            'icon': <UilConstructor/>,\n            'title': 'Рабочее время',\n        },\n    ];\n\n    getPageParams(url){\n        const page = this.pageParams.find((el) => el.url === url)\n        return page\n    }\n\n    preloader = <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height='75vh'><Spinner /></Pane>\n}\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport jwt from 'jsonwebtoken'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store/store';\n// import 'react-notifications/lib/notifications.css';\nimport { BrowserRouter } from 'react-router-dom';\n//UI\nimport './theme.css';\nimport './index.sass';\nimport './materialUI.sass';\n\n\n//apollo \nimport { WebSocketLink} from 'apollo-link-ws';\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  from,\n} from \"@apollo/client\";\n\n\nconst store = new Store();\n\nexport const Context = createContext({\n  store,\n});\n\n\nlet webSocketLink = new WebSocketLink({\n  uri: process.env.REACT_APP_HASURA_WS,\n  options: {\n    reconnect: true,\n    lazy: true,\n    reconnectionAttempts: 5,\n    inactivityTimeout: 10000000,\n    connectionCallback: async (error) => { error && console.log(error) },\n    connectionParams: () => ({\n      headers: {\n        'Authorization' : `Bearer ${store.inMemoryToken}`\n      }\n    }),\n    \n  }\n})\n\nconst asyncTokenValidation = setContext( async (_, {headers, ...context}) => {\n  var token = null \n\n  if (Date.now() >= jwt.decode(store.inMemoryToken).exp * 1000 ) {\n    console.log('Existed access token was expired, request for new token..')\n    token = await store.getNewToken()\n  }\n\n  return {\n    headers: {\n      ...headers,\n      ...(token ? {Authorization: `Bearer ${token}`} : {}),\n    },\n    ...context,\n  };\n});\n\n\nconst apolloClient = new ApolloClient({\n  link: from([ asyncTokenValidation, webSocketLink ]),\n  cache: new InMemoryCache({\n    typePolicies: {\n        erp_Orders: {\n          keyFields: [\"OrderID\"],\n        },\n        erp_CheckListUnits: {\n          keyFields: ['CheckListUnitID']\n        },\n        erp_Comments: {\n          keyFields: ['CommentID']\n        }\n    },\n  })\n})\n\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter>\n      <App sessionData={root.dataset.session}>\n        <Context.Provider value={store}>\n        \n        </Context.Provider>\n      \n    </App>\n    </BrowserRouter>\n    </ApolloProvider>\n,\n  root\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderListLayout\":\"main_OrderListLayout__3KzFa\",\"tableWrapper\":\"main_tableWrapper__3lHmG\",\"tableSearchInput\":\"main_tableSearchInput__3VMNw\",\"action-icon\":\"main_action-icon__1owGu\",\"tableFooter\":\"main_tableFooter__1Egk2\",\"tableMain\":\"main_tableMain__GJwKh\",\"awaitingDispatch\":\"main_awaitingDispatch__ZF9uh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsListWrapper\":\"Comments_commentsListWrapper__25Ylk\",\"commentInputForm\":\"Comments_commentInputForm__2W6Of\",\"saveButton\":\"Comments_saveButton__FkrZB\",\"commentUnit\":\"Comments_commentUnit__1L_o5\",\"actions\":\"Comments_actions__2pxUd\",\"commentContent\":\"Comments_commentContent__EsGgq\",\"commentHeader\":\"Comments_commentHeader__3aEgO\",\"sender\":\"Comments_sender__3ld3S\",\"time\":\"Comments_time__2egg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"composition_name__1O75u\",\"quantity\":\"composition_quantity__2YtVw\",\"addOrderItem\":\"composition_addOrderItem__2AnFf\",\"quantityInput\":\"composition_quantityInput__2zcBe\",\"pushOrderItemButton\":\"composition_pushOrderItemButton__2NTfr\",\"Unit\":\"composition_Unit__2Fqng\",\"index\":\"composition_index__2aXz6\",\"fullName\":\"composition_fullName__NObJ0\"};"],"sourceRoot":""}